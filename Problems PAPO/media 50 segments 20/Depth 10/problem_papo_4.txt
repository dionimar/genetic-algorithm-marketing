#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[23], events[44]),events[37]),events[26]),events[48]),events[10]),events[6]),events[17]),events[13]),events[30]),events[7]),cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(events[36], events[46]),events[18]),events[6]),events[49]),events[29]),events[28]),events[26]),events[0]),events[2]),events[19]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(events[17], events[3]),events[7]),events[35]),events[4]),events[8]),events[18]),events[5]),events[31]),events[20]),events[49]),cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(events[29], events[31]),events[16]),events[32]),events[41]),events[7]),events[49]),events[27]),events[3]),events[18]),events[6]),cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(events[12], events[34]),events[23]),events[20]),events[9]),events[25]),events[33]),events[45]),events[4]),events[15]),events[1]),cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(events[4], events[45]),events[25]),events[36]),events[20]),events[27]),events[3]),events[9]),events[22]),events[17]),events[37]),cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(events[25], events[16]),events[14]),events[2]),events[12]),events[5]),events[34]),events[39]),events[47]),events[43]),events[30]),cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(events[31], events[36]),events[38]),events[13]),events[46]),events[1]),events[45]),events[15]),events[32]),events[26]),events[19]),cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(events[43], events[0]),events[25]),events[21]),events[49]),events[28]),events[41]),events[5]),events[37]),events[24]),events[19]),cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(events[26], events[4]),events[25]),events[1]),events[38]),events[16]),events[44]),events[17]),events[7]),events[11]),events[42]),cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(events[21], events[6]),events[35]),events[8]),events[2]),events[32]),events[7]),events[41]),events[48]),events[20]),events[19]),cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(events[22], events[12]),events[33]),events[47]),events[43]),events[29]),events[41]),events[48]),events[40]),events[16]),events[27]),cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(events[33], events[42]),events[34]),events[26]),events[35]),events[36]),events[37]),events[47]),events[6]),events[45]),events[19]),cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(events[4], events[37]),events[44]),events[0]),events[31]),events[3]),events[29]),events[49]),events[18]),events[19]),events[32]),cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[27], events[9]),events[0]),events[24]),events[23]),events[43]),events[11]),events[15]),events[22]),events[16]),events[4]),cons_incl(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(events[26], events[3]),events[8]),events[16]),events[1]),events[13]),events[29]),events[28]),events[20]),events[37]),events[30]),cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(events[24], events[16]),events[49]),events[36]),events[14]),events[23]),events[19]),events[2]),events[7]),events[35]),events[20]),cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[39], events[48]),events[0]),events[23]),events[20]),events[10]),events[49]),events[1]),events[12]),events[47]),events[21]),cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(events[31], events[12]),events[16]),events[28]),events[49]),events[14]),events[9]),events[24]),events[17]),events[13]),events[44]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(events[24], events[27]),events[5]),events[4]),events[9]),events[31]),events[34]),events[48]),events[23]),events[15]),events[44])};


static const std::vector< std::vector<float> > prob = {{0.716604, 0.908393, 0.895867, 0.543829, 0.815826, 0.57625, 0.893119, 0.393534, 0.294434, 0.705585, 0.945652, 0.278879, 0.221482, 0.0125093, 0.764565, 0.0377263, 0.860105, 0.587322, 0.0727216, 0.264424, 0.407774, 0.994291, 0.798475, 0.777589, 0.346674, 0.206195, 0.742951, 0.834342, 0.074927, 0.506502, 0.435598, 0.842517, 0.286007, 0.6386, 0.219441, 0.790465, 0.432119, 0.22949, 0.711726, 0.618768, 0.386153, 0.116955, 0.848962, 0.980923, 0.388504, 0.53205, 0.720907, 0.535534, 0.589379, 0.244939},
{0.849337, 0.0725082, 0.421702, 0.658904, 0.237145, 0.816361, 0.421327, 0.348568, 0.300274, 0.854298, 0.777212, 0.757954, 0.996882, 0.614436, 0.359008, 0.76958, 0.678985, 0.172472, 0.0302555, 0.906709, 0.819458, 0.0278692, 0.273072, 0.0867942, 0.42838, 0.911673, 0.443558, 0.986732, 0.962077, 0.155404, 0.825347, 0.731034, 0.141795, 0.845757, 0.216973, 0.525155, 0.0801634, 0.4441, 0.693192, 0.984214, 0.530443, 0.820122, 0.739783, 0.64067, 0.167124, 0.379686, 0.409055, 0.671873, 0.27003, 0.525667},
{0.590455, 0.942163, 0.240421, 0.129646, 0.290246, 0.944167, 0.737669, 0.271167, 0.6006, 0.960051, 0.302593, 0.243753, 0.968971, 0.483127, 0.668525, 0.556791, 0.054735, 0.0643812, 0.405713, 0.175122, 0.425782, 0.579653, 0.276995, 0.25564, 0.801697, 0.213763, 0.269188, 0.141917, 0.641564, 0.896885, 0.862559, 0.582509, 0.923381, 0.538847, 0.0936256, 0.733624, 0.592408, 0.318089, 0.266615, 0.71801, 0.74515, 0.290822, 0.863027, 0.252166, 0.715062, 0.158395, 0.547727, 0.419077, 0.928631, 0.391936},
{0.811199, 0.164264, 0.0223625, 0.339765, 0.441176, 0.349907, 0.816441, 0.170826, 0.747813, 0.163234, 0.0693736, 0.399801, 0.00460982, 0.998344, 0.955342, 0.744214, 0.96419, 0.620247, 0.464321, 0.715755, 0.827671, 0.989318, 0.736424, 0.500249, 0.306951, 0.404833, 0.97075, 0.629556, 0.572795, 0.542757, 0.567229, 0.407512, 0.577322, 0.120906, 0.3534, 0.210255, 0.346966, 0.510415, 0.761405, 0.763333, 0.942688, 0.74877, 0.38721, 0.466725, 0.564672, 0.589815, 0.283457, 0.405747, 0.65175, 0.177798},
{0.712408, 0.925682, 0.421578, 0.730502, 0.0363329, 0.677927, 0.0547517, 0.435086, 0.208527, 0.855459, 0.986916, 0.294557, 0.0334089, 0.234734, 0.472309, 0.822229, 0.974247, 0.458749, 0.609027, 0.785598, 0.0762473, 0.334246, 0.00839303, 0.837911, 0.0321689, 0.483612, 0.843608, 0.524922, 0.0545329, 0.239167, 0.136588, 0.875796, 0.740116, 0.790161, 0.108427, 0.863727, 0.281521, 0.982696, 0.564206, 0.0631553, 0.100869, 0.760515, 0.0924817, 0.0459001, 0.144607, 0.471579, 0.740411, 0.871309, 0.383896, 0.411711},
{0.200489, 0.530657, 0.530891, 0.761446, 0.858595, 0.108446, 0.268849, 0.193689, 0.343766, 0.375492, 0.578808, 0.143035, 0.359043, 0.464869, 0.142884, 0.578083, 0.956014, 0.174859, 0.0776586, 0.610225, 0.50182, 0.356759, 0.474349, 0.247404, 0.436617, 0.942374, 0.393772, 0.998433, 0.396794, 0.335528, 0.71467, 0.948997, 0.509432, 0.829076, 0.272741, 0.631863, 0.251152, 0.846805, 0.753989, 0.411401, 0.548977, 0.667449, 0.896674, 0.98148, 0.983973, 0.563077, 0.307595, 0.604006, 0.476337, 0.480659},
{0.914068, 0.2294, 0.696597, 0.765973, 0.047994, 0.468845, 0.457604, 0.485616, 0.412506, 0.332246, 0.95959, 0.300292, 0.0898057, 0.513511, 0.29438, 0.49694, 0.678049, 0.455406, 0.177598, 0.977386, 0.21025, 0.573601, 0.210403, 0.440339, 0.893135, 0.428845, 0.366648, 0.690753, 0.911629, 0.54695, 0.0487712, 0.0492815, 0.6751, 0.457974, 0.180326, 0.228717, 0.628794, 0.36773, 0.970262, 0.24287, 0.392981, 0.584116, 0.824543, 0.105232, 0.0215332, 0.232415, 0.929663, 0.399472, 0.566421, 0.907532},
{0.552056, 0.387031, 0.849837, 0.211736, 0.72977, 0.546309, 0.282135, 0.683239, 0.304114, 0.626506, 0.322632, 0.176328, 0.141666, 0.245762, 0.0693483, 0.500062, 0.955097, 0.556141, 0.00399105, 0.33213, 0.499948, 0.755211, 0.71528, 0.340307, 0.601565, 0.573404, 0.924115, 0.101184, 0.58171, 0.958098, 0.616172, 0.370005, 0.205949, 0.692746, 0.632938, 0.355327, 0.0308318, 0.131421, 0.88838, 0.473196, 0.0583443, 0.639499, 0.985151, 0.99596, 0.226084, 0.722486, 0.75804, 0.798201, 0.0624065, 0.487169},
{0.542525, 0.555492, 0.783368, 0.297625, 0.887433, 0.397817, 0.511404, 0.0400396, 0.428457, 0.402364, 0.00196432, 0.38932, 0.916463, 0.530007, 0.453427, 0.761118, 0.679262, 0.388658, 0.501404, 0.775231, 0.200996, 0.649394, 0.475887, 0.0463963, 0.829098, 0.537301, 0.339521, 0.587557, 0.438802, 0.139419, 0.00198905, 0.926282, 0.65263, 0.356519, 0.310054, 0.89939, 0.961354, 0.456836, 0.878082, 0.494047, 0.794686, 0.917231, 0.811469, 0.994044, 0.757715, 0.0604329, 0.250377, 0.077031, 0.763556, 0.141261},
{0.336213, 0.733235, 0.00194541, 0.42575, 0.745983, 0.690058, 0.847919, 0.620377, 0.0846219, 0.135331, 0.958338, 0.814716, 0.664915, 0.421955, 0.896708, 0.971816, 0.998277, 0.0875207, 0.956109, 0.484083, 0.748625, 0.622587, 0.423159, 0.466514, 0.1709, 0.0517636, 0.730564, 0.967456, 0.962276, 0.486668, 0.868949, 0.633599, 0.0381268, 0.0268174, 0.918829, 0.905139, 0.590082, 0.768252, 0.144322, 0.530946, 0.876007, 0.478476, 0.728759, 0.407703, 0.555538, 0.542151, 0.875335, 0.424934, 0.082212, 0.798893},
{0.548589, 0.0745348, 0.111663, 0.0368619, 0.198664, 0.00186135, 0.650802, 0.911365, 0.63605, 0.935141, 0.906007, 0.103254, 0.852883, 0.636508, 0.844262, 0.691122, 0.413953, 0.155455, 0.542577, 0.440639, 0.890264, 0.206449, 0.728883, 0.124911, 0.880147, 0.943057, 0.0225056, 0.808828, 0.911949, 0.209905, 0.232586, 0.520547, 0.937578, 0.122972, 0.732018, 0.0591187, 0.188646, 0.129387, 0.476118, 0.199912, 0.514371, 0.233336, 0.0194883, 0.0732431, 0.932589, 0.917291, 0.133204, 0.294186, 0.453543, 0.101732},
{0.995915, 0.684528, 0.998271, 0.384336, 0.619043, 0.747852, 0.171405, 0.029697, 0.455473, 0.539605, 0.188894, 0.444899, 0.999772, 0.72784, 0.508502, 0.165952, 0.82868, 0.0710576, 0.805599, 0.074932, 0.178095, 0.23302, 0.997786, 0.354379, 0.799443, 0.905267, 0.586052, 0.072459, 0.808434, 0.880041, 0.42582, 0.71313, 0.734195, 0.973302, 0.424831, 0.219771, 0.781248, 0.677073, 0.997854, 0.273374, 0.325072, 0.114581, 0.791118, 0.0428194, 0.853403, 0.16902, 0.236049, 0.368173, 0.300715, 0.295673},
{0.980364, 0.0638909, 0.550224, 0.828457, 0.0982041, 0.749887, 0.702189, 0.618689, 0.749703, 0.718966, 0.221974, 0.297125, 0.804711, 0.98404, 0.73785, 0.432757, 0.158416, 0.248495, 0.977172, 0.891502, 0.619265, 0.725856, 0.466006, 0.423966, 0.0470824, 0.191786, 0.94682, 0.0764296, 0.333531, 0.840833, 0.236554, 0.360251, 0.996971, 0.69626, 0.259185, 0.499348, 0.355915, 0.566584, 0.781626, 0.46642, 0.221941, 0.69619, 0.195103, 0.227938, 0.948738, 0.834887, 0.00516068, 0.490285, 0.569975, 0.938899},
{0.659398, 0.121713, 0.730542, 0.286687, 0.878634, 0.000846545, 0.629503, 0.946109, 0.72282, 0.158034, 0.188601, 0.223161, 0.261554, 0.800597, 0.881748, 0.908627, 0.706354, 0.213748, 0.803237, 0.296129, 0.262416, 0.959385, 0.111387, 0.0810534, 0.567259, 0.256873, 0.681759, 0.467861, 0.873437, 0.631547, 0.131509, 0.453153, 0.204652, 0.874312, 0.831606, 0.684105, 0.613068, 0.51693, 0.956023, 0.497742, 0.683099, 0.912916, 0.920348, 0.896945, 0.351418, 0.887827, 0.946688, 0.878036, 0.159518, 0.329509},
{0.691728, 0.455737, 0.577655, 0.78273, 0.954872, 0.0190924, 0.500515, 0.94227, 0.677943, 0.216737, 0.413931, 0.232627, 0.64761, 0.858698, 0.669865, 0.313512, 0.583751, 0.228589, 0.606618, 0.38428, 0.612895, 0.582699, 0.919673, 0.979605, 0.0414599, 0.217565, 0.204262, 0.236234, 0.292378, 0.0214595, 0.147225, 0.580454, 0.00948883, 0.96473, 0.663435, 0.328652, 0.984852, 0.625508, 0.275661, 0.924795, 0.779593, 0.762737, 0.79836, 0.321252, 0.216987, 0.198043, 0.773448, 0.286445, 0.821514, 0.359674},
{0.56124, 0.67264, 0.534782, 0.895732, 0.423464, 0.154107, 0.735886, 0.730538, 0.34377, 0.539327, 0.150082, 0.299512, 0.675273, 0.189248, 0.865935, 0.0911062, 0.276593, 0.655046, 0.294504, 0.858096, 0.982492, 0.227153, 0.339298, 0.691206, 0.895644, 0.275238, 0.130309, 0.956427, 0.531623, 0.805831, 0.636664, 0.907357, 0.0935896, 0.351307, 0.0654862, 0.966767, 0.420751, 0.855938, 0.363306, 0.706944, 0.340086, 0.694276, 0.244341, 0.153518, 0.93594, 0.227254, 0.23524, 0.159613, 0.744882, 0.333645},
{0.174068, 0.628779, 0.946058, 0.0713057, 0.248208, 0.146976, 0.064998, 0.545082, 0.36633, 0.942957, 0.57643, 0.040698, 0.488022, 0.0641539, 0.666702, 0.855657, 0.266705, 0.181849, 0.463874, 0.893498, 0.91319, 0.464602, 0.444, 0.272021, 0.645676, 0.530566, 0.797867, 0.304501, 0.431043, 0.76437, 0.621479, 0.994427, 0.71698, 0.113834, 0.892486, 0.573518, 0.161879, 0.477246, 0.661064, 0.972932, 0.0830615, 0.904644, 0.882693, 0.00187087, 0.181513, 0.671131, 0.277616, 0.384072, 0.902134, 0.717344},
{0.513171, 0.222862, 0.0520163, 0.559198, 0.946343, 0.670608, 0.519554, 0.883198, 0.156723, 0.577328, 0.805553, 0.98498, 0.0331871, 0.750217, 0.57146, 0.658495, 0.882456, 0.403694, 0.830571, 0.338076, 0.446796, 0.439368, 0.52252, 0.963598, 0.578555, 0.637378, 0.253273, 0.558165, 0.772372, 0.156128, 0.299697, 0.433045, 0.212931, 0.994624, 0.453697, 0.439905, 0.597698, 0.588177, 0.378354, 0.444476, 0.00516055, 0.616339, 0.570869, 0.684103, 0.97121, 0.391715, 0.107775, 0.460372, 0.470165, 0.54719},
{0.699364, 0.76711, 0.309943, 0.515755, 0.666085, 0.0836442, 0.296722, 0.0679175, 0.998131, 0.193568, 0.131428, 0.236123, 0.596541, 0.54615, 0.0123223, 0.0133521, 0.842397, 0.247129, 0.263781, 0.312461, 0.754359, 0.920463, 0.163272, 0.892635, 0.249748, 0.587205, 0.859996, 0.562177, 0.299357, 0.982533, 0.553042, 0.455658, 0.299258, 0.401149, 0.844733, 0.390494, 0.0907365, 0.562624, 0.513264, 0.594475, 0.847208, 0.0313972, 0.628266, 0.515309, 0.230099, 0.790351, 0.306274, 0.889853, 0.983916, 0.140021},
{0.460511, 0.290065, 0.787828, 0.392675, 0.549184, 0.736334, 0.622495, 0.0161321, 0.229769, 0.925489, 0.0795833, 0.626287, 0.301306, 0.4815, 0.447927, 0.822256, 0.465901, 0.753417, 0.625951, 0.886399, 0.511388, 0.883479, 0.987694, 0.710484, 0.230674, 0.934407, 0.455045, 0.40294, 0.972626, 0.11487, 0.933176, 0.659371, 0.603779, 0.746759, 0.563655, 0.395085, 0.957825, 0.617124, 0.632727, 0.42209, 0.319745, 0.117778, 0.974641, 0.676302, 0.203119, 0.198912, 0.350214, 0.216277, 0.895296, 0.430048},
};

static const std::vector<float> costs = {120.359, 204.905, 77.2881, 89.4713, 727.874, 551.803, 407.292, 297.424, 26.2984, 370.408, 798.847, 796.804, 680.363, 330.55, 832.431, 62.9907, 51.1862, 242.868, 948.34, 955.22, 917.923, 749.285, 450.785, 766.703, 223.667, 750.17, 377.1, 303.325, 633.848, 670.211, 651.635, 973.408, 808.956, 533.112, 846.827, 254.907, 595.365, 921.152, 619.737, 542.559, 255.113, 6.89207, 577.932, 803.181, 762.154, 31.4993, 620.509, 319.125, 191.731, 281.635};

static const std::vector<float> min_impressions = {0.564276, 0.105603, 0.0125513, 0.0927937, 0.855651, 0.784741, 0.271503, 0.591466, 0.690042, 0.184546, 0.324343, 0.856447, 0.539386, 0.2172, 0.142418, 0.19772, 0.0600774, 0.490874, 0.200986, 0.790311};

//
#endif
