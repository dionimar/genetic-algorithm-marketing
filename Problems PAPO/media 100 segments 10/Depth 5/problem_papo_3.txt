#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(events[27], events[25]),events[34]),events[23]),events[1]),events[91]),cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(events[72], events[21]),events[74]),events[37]),events[83]),events[99]),cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(events[92], events[90]),events[70]),events[56]),events[40]),events[9]),cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(events[3], events[34]),events[41]),events[51]),events[87]),events[0]),cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(events[46], events[76]),events[69]),events[83]),events[58]),events[98]),cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(events[31], events[28]),events[17]),events[25]),events[3]),events[21]),cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(events[9], events[65]),events[58]),events[21]),events[1]),events[6]),cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(events[45], events[23]),events[64]),events[77]),events[85]),events[59]),cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(events[58], events[83]),events[95]),events[25]),events[76]),events[71]),cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(events[1], events[39]),events[77]),events[57]),events[50]),events[49])};


static const std::vector< std::vector<float> > prob = {{0.278614, 0.524755, 0.807477, 0.511021, 0.885619, 0.768224, 0.0549706, 0.281036, 0.569836, 0.0699193, 0.230243, 0.533378, 0.912526, 0.579728, 0.206357, 0.400073, 0.093952, 0.81025, 0.924835, 0.460714, 0.758055, 0.625288, 0.745934, 0.0333172, 0.324739, 0.112126, 0.249061, 0.743164, 0.205309, 0.390149, 0.954263, 0.0755813, 0.553206, 0.566204, 0.856604, 0.238221, 0.156613, 0.0263217, 0.127066, 0.4874, 0.558565, 0.271304, 0.390689, 0.643173, 0.805804, 0.138485, 0.945191, 0.62873, 0.220614, 0.489113, 0.635963, 0.789777, 0.357445, 0.97572, 0.478359, 0.31577, 0.608877, 0.873516, 0.913848, 0.244984, 0.480798, 0.0753268, 0.77948, 0.975363, 0.198338, 0.276204, 0.4864, 0.396384, 0.205594, 0.630366, 0.150983, 0.534525, 0.985899, 0.190646, 0.28035, 0.838321, 0.195261, 0.429334, 0.495072, 0.284409, 0.413013, 0.756455, 0.419088, 0.597907, 0.178947, 0.278282, 0.372303, 0.632326, 0.34027, 0.383082, 0.541999, 0.129389, 0.274538, 0.540901, 0.0301416, 0.810438, 0.561762, 0.171507, 0.892904, 0.382228},
{0.608606, 0.46519, 0.518258, 0.43621, 0.481887, 0.0677547, 0.0801175, 0.695352, 0.991277, 0.609437, 0.959254, 0.0459523, 0.745845, 0.84887, 0.136647, 0.447616, 0.815313, 0.649414, 0.21712, 0.183474, 0.834835, 0.993248, 0.703387, 0.519496, 0.548151, 0.289888, 0.0219819, 0.791015, 0.965477, 0.208588, 0.926828, 0.386529, 0.248999, 0.551924, 0.0860432, 0.641059, 0.80339, 0.986337, 0.660484, 0.323, 0.845104, 0.60303, 0.0983106, 0.691789, 0.0184687, 0.324074, 0.0815073, 0.692532, 0.274912, 0.302796, 0.636986, 0.569898, 0.974949, 0.363819, 0.883623, 0.786965, 0.402661, 0.489681, 0.960274, 0.260726, 0.709342, 0.616535, 0.452828, 0.00899072, 0.42784, 0.827518, 0.607399, 0.229276, 0.523008, 0.00758873, 0.751603, 0.0573632, 0.19433, 0.514108, 0.266372, 0.59721, 0.204662, 0.971254, 0.345058, 0.353959, 0.86181, 0.88266, 0.552864, 0.849258, 0.444468, 0.0140108, 0.0526143, 0.543334, 0.978734, 0.784424, 0.262873, 0.276543, 0.800441, 0.364985, 0.448823, 0.56377, 0.467239, 0.42932, 0.791721, 0.651878},
{0.0543514, 0.772375, 0.908851, 0.773535, 0.0019498, 0.915819, 0.204915, 0.89258, 0.763845, 0.992429, 0.455076, 0.262898, 0.325036, 0.807087, 0.651199, 0.806783, 0.296607, 0.384517, 0.382206, 0.915487, 0.890895, 0.978592, 0.246051, 0.256346, 0.0612938, 0.525343, 0.114393, 0.944577, 0.141128, 0.162051, 0.919929, 0.718939, 0.899718, 0.631597, 0.883047, 0.628812, 0.960979, 0.330935, 0.0068034, 0.741192, 0.317412, 0.798494, 0.329181, 0.188833, 0.0196259, 0.1391, 0.104949, 0.724188, 0.803329, 0.461561, 0.535434, 0.668944, 0.975729, 0.625274, 0.439656, 0.277983, 0.557489, 0.656426, 0.669304, 0.181876, 0.749816, 0.125025, 0.791972, 0.367723, 0.192182, 0.605588, 0.805536, 0.546324, 0.289035, 0.169691, 0.853025, 0.444825, 0.596852, 0.291274, 0.34616, 0.551745, 0.413299, 0.744872, 0.176679, 0.840827, 0.590033, 0.670744, 0.335016, 0.447152, 0.38921, 0.193862, 0.886865, 0.466982, 0.875779, 0.85202, 0.632496, 0.0555698, 0.545954, 0.203761, 0.892274, 0.254238, 0.808714, 0.0820402, 0.262237, 0.681464},
{0.134479, 0.96806, 0.466672, 0.00864707, 0.0432401, 0.850785, 0.798432, 0.997743, 0.446564, 0.181676, 0.557508, 0.709828, 0.187861, 0.0768078, 0.410559, 0.840097, 0.618815, 0.13984, 0.605968, 0.495539, 0.0937663, 0.099594, 0.271167, 0.35939, 0.791737, 0.504447, 0.991426, 0.396931, 0.335413, 0.766212, 0.71648, 0.227188, 0.331543, 0.923797, 0.10415, 0.416185, 0.98327, 0.0103825, 0.225126, 0.147239, 0.392743, 0.247042, 0.225163, 0.858263, 0.746123, 0.434567, 0.131883, 0.0318032, 0.136606, 0.372793, 0.56467, 0.830548, 0.19194, 0.721874, 0.438744, 0.535451, 0.627712, 0.488501, 0.197873, 0.496853, 0.752646, 0.799065, 0.644154, 0.404202, 0.674597, 0.251098, 0.353838, 0.903377, 0.688662, 0.0128448, 0.124851, 0.31216, 0.468907, 0.460574, 0.898479, 0.973667, 0.170935, 0.918417, 0.310491, 0.116082, 0.784567, 0.355541, 0.855967, 0.471658, 0.755484, 0.174316, 0.681642, 0.425435, 0.10442, 0.872799, 0.755709, 0.635212, 0.949491, 0.369576, 0.566406, 0.537253, 0.461245, 0.0588005, 0.200519, 0.825352},
{0.808431, 0.0254136, 0.560558, 0.303464, 0.250146, 0.518725, 0.948662, 0.62287, 0.761988, 0.592771, 0.93064, 0.753861, 0.0654818, 0.767382, 0.192478, 0.626511, 0.740784, 0.466764, 0.339679, 0.485041, 0.830317, 0.440077, 0.878727, 0.32102, 0.446085, 0.229072, 0.57538, 0.12768, 0.386104, 0.991607, 0.839514, 0.0658576, 0.635363, 0.735075, 0.0543423, 0.244198, 0.739522, 0.504256, 0.781648, 0.766552, 0.177996, 0.40676, 0.841081, 0.61953, 0.112032, 0.802653, 0.152719, 0.149018, 0.783927, 0.844629, 0.514128, 0.025186, 0.46061, 0.736407, 0.8394, 0.32504, 0.156988, 0.200414, 0.853506, 0.868851, 0.934492, 0.606803, 0.105199, 0.275329, 0.876243, 0.943149, 0.955916, 0.14969, 0.436246, 0.097659, 0.0822374, 0.0653981, 0.315261, 0.150158, 0.969277, 0.893313, 0.212432, 0.00527279, 0.0292605, 0.40081, 0.796667, 0.0612527, 0.157071, 0.964661, 0.359359, 0.926581, 0.187689, 0.896998, 0.483416, 0.985626, 0.229544, 0.456174, 0.573594, 0.450924, 0.755211, 0.746586, 0.475162, 0.450768, 0.984572, 0.0434922},
{0.610049, 0.506985, 0.294827, 0.164145, 0.655309, 0.153316, 0.105645, 0.780969, 0.28879, 0.845394, 0.604634, 0.495471, 0.0870657, 0.372578, 0.269821, 0.30764, 0.25786, 0.834642, 0.914521, 0.679673, 0.436732, 0.642514, 0.338623, 0.426807, 0.120512, 0.552117, 0.361855, 0.770031, 0.531084, 0.0195024, 0.502382, 0.955305, 0.809103, 0.267702, 0.606335, 0.869788, 0.218571, 0.557079, 0.195021, 0.457986, 0.610418, 0.905955, 0.927095, 0.874835, 0.243774, 0.338832, 0.561229, 0.678471, 0.291386, 0.514784, 0.761437, 0.10873, 0.636517, 0.358884, 0.65809, 0.73355, 0.188361, 0.105734, 0.457329, 0.055989, 0.399638, 0.650171, 0.137887, 0.370964, 0.490258, 0.997637, 0.0838497, 0.0584489, 0.670105, 0.515614, 0.726563, 0.00762232, 0.480502, 0.46874, 0.00351903, 0.23103, 0.707641, 0.380334, 0.27435, 0.910534, 0.313879, 0.583542, 0.283454, 0.364572, 0.184173, 0.322909, 0.0136171, 0.00257594, 0.476515, 0.261618, 0.352811, 0.735435, 0.696587, 0.303473, 0.359853, 0.592561, 0.952611, 0.120406, 0.418194, 0.27063},
{0.535615, 0.258203, 0.336586, 0.84036, 0.546385, 0.55019, 0.883826, 0.041726, 0.981494, 0.531094, 0.95311, 0.965142, 0.938775, 0.535176, 0.149877, 0.334559, 0.629243, 0.0951598, 0.464177, 0.945514, 0.277685, 0.758298, 0.17989, 0.763136, 0.635516, 0.452973, 0.804112, 0.086717, 0.160492, 0.486077, 0.607514, 0.57438, 0.709521, 0.44301, 0.357206, 0.61024, 0.590116, 0.188914, 0.875208, 0.0035966, 0.349666, 0.221815, 0.385592, 0.699696, 0.955617, 0.0255822, 0.534768, 0.699871, 0.380526, 0.0925182, 0.892436, 0.782556, 0.368913, 0.75075, 0.287086, 0.98738, 0.384337, 0.222594, 0.399145, 0.465262, 0.239003, 0.870979, 0.0689635, 0.518136, 0.079866, 0.397392, 0.553221, 0.454302, 0.8399, 0.108322, 0.800335, 0.458611, 0.78376, 0.329675, 0.243548, 0.505368, 0.583456, 0.739574, 0.99903, 0.568924, 0.300529, 0.048412, 0.821845, 0.69433, 0.896001, 0.578366, 0.411131, 0.903658, 0.171704, 0.493545, 0.0128732, 0.144683, 0.269125, 0.837973, 0.805219, 0.878556, 0.81593, 0.372469, 0.818773, 0.764876},
{0.760486, 0.514283, 0.980144, 0.497778, 0.119813, 0.0593263, 0.415185, 0.0435768, 0.999079, 0.646514, 0.668706, 0.905959, 0.117422, 0.464911, 0.720295, 0.472709, 0.204604, 0.7473, 0.423682, 0.246336, 0.776356, 0.280817, 0.40898, 0.0818561, 0.84362, 0.381618, 0.0187387, 0.992467, 0.794897, 0.245063, 0.217949, 0.0921922, 0.77865, 0.455798, 0.0303741, 0.791503, 0.357647, 0.512888, 0.479004, 0.602982, 0.734368, 0.542437, 0.187274, 0.550071, 0.842684, 0.52287, 0.659, 0.47617, 0.201458, 0.397732, 0.159765, 0.049517, 0.99486, 0.421184, 0.421485, 0.761469, 0.0233679, 0.502829, 0.142377, 0.67975, 0.442846, 0.456472, 0.186075, 0.698191, 0.693389, 0.775588, 0.418325, 0.790544, 0.185352, 0.473451, 0.692211, 0.372113, 0.349677, 0.899537, 0.46732, 0.0209022, 0.482401, 0.758142, 0.781726, 0.887889, 0.456482, 0.035707, 0.574475, 0.367674, 0.788344, 0.411621, 0.754627, 0.831793, 0.0896261, 0.842777, 0.324113, 0.116774, 0.637633, 0.783898, 0.0889477, 0.613739, 0.750766, 0.609499, 0.792036, 0.810992},
{0.582106, 0.276893, 0.420102, 0.057575, 0.993042, 0.903288, 0.46786, 0.21162, 0.387786, 0.243003, 0.114585, 0.52802, 0.535139, 0.924011, 0.504102, 0.414048, 0.0760512, 0.102609, 0.243702, 0.232881, 0.847237, 0.59991, 0.368591, 0.935695, 0.581071, 0.469512, 0.249003, 0.0524914, 0.945398, 0.0789887, 0.901208, 0.0866522, 0.0503784, 0.29993, 0.647354, 0.184684, 0.449466, 0.467327, 0.174555, 0.058326, 0.0674212, 0.518241, 0.968102, 0.365505, 0.0180087, 0.0235994, 0.719659, 0.162177, 0.317197, 0.144896, 0.91894, 0.171157, 0.246015, 0.0287741, 0.191457, 0.0522837, 0.429531, 0.859627, 0.779261, 0.819649, 0.721635, 0.971079, 0.514004, 0.890118, 0.177855, 0.35628, 0.459804, 0.693325, 0.624332, 0.0735252, 0.57666, 0.907111, 0.913235, 0.779587, 0.569799, 0.971249, 0.82713, 0.398526, 0.219555, 0.875986, 0.378466, 0.251248, 0.900577, 0.786861, 0.346722, 0.114734, 0.96219, 0.240527, 0.432434, 0.0802109, 0.607768, 0.973826, 0.777927, 0.624905, 0.636689, 0.572344, 0.671191, 0.414183, 0.376008, 0.430947},
{0.838201, 0.418141, 0.613474, 0.149875, 0.734082, 0.756768, 0.495764, 0.526509, 0.186315, 0.355144, 0.802518, 0.778089, 0.701679, 0.527196, 0.278739, 0.159006, 0.393987, 0.122141, 0.27118, 0.519229, 0.579664, 0.391568, 0.805191, 0.330032, 0.324193, 0.933414, 0.752629, 0.890748, 0.822865, 0.278752, 0.522564, 0.469, 0.228078, 0.542169, 0.0717818, 0.812642, 0.786386, 0.869652, 0.182887, 0.942637, 0.200581, 0.854067, 0.833235, 0.147028, 0.441736, 0.833611, 0.18324, 0.839113, 0.0855245, 0.87694, 0.38138, 0.394425, 0.636559, 0.817657, 0.0412382, 0.826811, 0.96609, 0.58075, 0.901941, 0.603831, 0.899449, 0.278235, 0.877902, 0.551215, 0.488852, 0.090336, 0.871492, 0.513152, 0.757756, 0.145415, 0.987067, 0.399119, 0.0798945, 0.115998, 0.297461, 0.0520396, 0.466955, 0.535935, 0.07548, 0.426533, 0.146938, 0.726547, 0.836786, 0.988351, 0.99337, 0.300641, 0.0744025, 0.433008, 0.419002, 0.795603, 0.240626, 0.770835, 0.702707, 0.799716, 0.747123, 0.106578, 0.112309, 0.442387, 0.246827, 0.445555},
};

static const std::vector<float> costs = {62.2039, 218.742, 272.258, 378.786, 863.275, 612.262, 569.023, 528.346, 412.15, 380.657, 692.142, 447.679, 488.65, 104.461, 356.357, 751.995, 185.097, 819.316, 6.58209, 287.499, 431.368, 644.041, 32.9277, 155.014, 878.342, 839.878, 651.624, 790.979, 285.523, 66.879, 966.037, 231.979, 552.983, 787.431, 287.137, 880.552, 729.626, 983.312, 830.58, 659.248, 683.286, 591.706, 214.77, 462.748, 824.248, 716.875, 204.918, 132.35, 205.644, 439.946, 728.2, 523.585, 660.601, 485.821, 306.308, 523.924, 417.541, 395.458, 69.7715, 666.115, 64.3815, 252.726, 204.175, 27.9432, 171.428, 813.227, 218.168, 217.314, 751.581, 137.999, 848.666, 55.7624, 375.227, 276.491, 913.848, 966.123, 928.348, 872.934, 318.059, 609.424, 578.933, 762.874, 909.522, 125.075, 780.901, 71.5498, 3.28381, 663.647, 19.8659, 76.5084, 712.841, 661.515, 268.15, 673.153, 981.863, 256.729, 670.852, 11.6291, 391.725, 155.026};

static const std::vector<float> min_impressions = {0.586852, 0.367665, 0.771287, 0.381827, 0.568117, 0.980543, 0.0673776, 0.56733, 0.712694, 0.527337};

//
#endif
