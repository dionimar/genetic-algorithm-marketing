#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(events[29], events[35]),events[38]),events[2]),events[0]),events[12]),events[16]),events[15]),events[17]),events[6]),events[23]),cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(cons_indep(events[31], events[24]),events[42]),events[29]),events[11]),events[19]),events[13]),events[45]),events[3]),events[20]),events[33]),cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(events[18], events[38]),events[2]),events[30]),events[23]),events[45]),events[32]),events[24]),events[39]),events[16]),events[35]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[45], events[23]),events[39]),events[36]),events[21]),events[41]),events[31]),events[8]),events[48]),events[14]),events[30]),cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(events[12], events[32]),events[30]),events[27]),events[13]),events[16]),events[3]),events[20]),events[43]),events[6]),events[36]),cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(events[42], events[21]),events[16]),events[46]),events[14]),events[43]),events[2]),events[19]),events[12]),events[9]),events[0]),cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(events[20], events[1]),events[28]),events[17]),events[15]),events[9]),events[21]),events[8]),events[32]),events[12]),events[48]),cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(events[3], events[13]),events[26]),events[35]),events[0]),events[47]),events[9]),events[25]),events[38]),events[32]),events[14]),cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(events[22], events[24]),events[49]),events[23]),events[5]),events[27]),events[45]),events[34]),events[3]),events[43]),events[38]),cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(events[22], events[13]),events[47]),events[45]),events[37]),events[39]),events[28]),events[18]),events[26]),events[48]),events[33]),cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(events[26], events[17]),events[24]),events[35]),events[46]),events[14]),events[0]),events[9]),events[20]),events[15]),events[36]),cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(events[46], events[13]),events[45]),events[27]),events[15]),events[22]),events[37]),events[40]),events[21]),events[34]),events[12]),cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(events[20], events[33]),events[41]),events[37]),events[0]),events[7]),events[45]),events[31]),events[8]),events[3]),events[28]),cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(events[1], events[33]),events[9]),events[23]),events[10]),events[3]),events[42]),events[12]),events[16]),events[27]),events[22]),cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(events[14], events[22]),events[36]),events[6]),events[49]),events[3]),events[1]),events[2]),events[11]),events[28]),events[4]),cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(events[42], events[46]),events[49]),events[7]),events[47]),events[28]),events[43]),events[21]),events[25]),events[13]),events[44]),cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(events[34], events[4]),events[49]),events[21]),events[43]),events[26]),events[13]),events[40]),events[35]),events[0]),events[37]),cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[24], events[43]),events[16]),events[14]),events[9]),events[11]),events[20]),events[47]),events[30]),events[41]),events[45]),cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(events[27], events[16]),events[26]),events[34]),events[30]),events[36]),events[45]),events[0]),events[21]),events[29]),events[46]),cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(events[11], events[48]),events[46]),events[0]),events[38]),events[2]),events[22]),events[5]),events[28]),events[27]),events[14])};


static const std::vector< std::vector<float> > prob = {{0.780243, 0.568549, 0.124582, 0.72768, 0.0803594, 0.151562, 0.767594, 0.555448, 0.224198, 0.249776, 0.270054, 0.578306, 0.598594, 0.0145443, 0.960513, 0.0859467, 0.62535, 0.703946, 0.0698259, 0.129998, 0.237962, 0.542487, 0.548674, 0.297182, 0.125292, 0.915088, 0.246215, 0.769015, 0.421908, 0.337704, 0.39808, 0.416835, 0.362869, 0.148682, 0.543422, 0.656577, 0.701787, 0.758152, 0.0497088, 0.964934, 0.687202, 0.812534, 0.809981, 0.159325, 0.172422, 0.554423, 0.80886, 0.091559, 0.283137, 0.494607},
{0.550816, 0.913507, 0.575358, 0.0834376, 0.56042, 0.990921, 0.0613829, 0.197801, 0.286873, 0.625534, 0.126249, 0.476502, 0.885614, 0.178568, 0.515468, 0.920382, 0.00380529, 0.687362, 0.407768, 0.19926, 0.608944, 0.579652, 0.0664029, 0.225092, 0.800559, 0.586752, 0.885814, 0.796028, 0.492722, 0.923698, 0.103566, 0.932687, 0.874904, 0.492776, 0.981488, 0.611367, 0.434279, 0.652119, 0.0483473, 0.363448, 0.279499, 0.820526, 0.962592, 0.961428, 0.70568, 0.950955, 0.326054, 0.701056, 0.370394, 0.630587},
{0.667576, 0.908959, 0.606692, 0.0788035, 0.310652, 0.78428, 0.861459, 0.568094, 0.947726, 0.375372, 0.190127, 0.141617, 0.772316, 0.286966, 0.304859, 0.147609, 0.267462, 0.364529, 0.835739, 0.164493, 0.488872, 0.932304, 0.0760404, 0.291736, 0.758885, 0.642371, 0.643473, 0.665664, 0.0262874, 0.672877, 0.311814, 0.656683, 0.916746, 0.96985, 0.172373, 0.654424, 0.449609, 0.584489, 0.0726942, 0.940196, 0.395294, 0.746042, 0.806822, 0.724404, 0.815369, 0.702973, 0.819275, 0.804254, 0.815164, 0.465713},
{0.794045, 0.520962, 0.0290545, 0.0939294, 0.16627, 0.739112, 0.089289, 0.399307, 0.292702, 0.466373, 0.182221, 0.591322, 0.802029, 0.972702, 0.696231, 0.581434, 0.040291, 0.414333, 0.589003, 0.213175, 0.844556, 0.49437, 0.790112, 0.485459, 0.208246, 0.933208, 0.537177, 0.743499, 0.54229, 0.454182, 0.973005, 0.396437, 0.10681, 0.150449, 0.0985647, 0.50889, 0.602419, 0.27398, 0.356092, 0.0128517, 0.351543, 0.783671, 0.523533, 0.154383, 0.461098, 0.420824, 0.122648, 0.745058, 0.676081, 0.298966},
{0.778227, 0.0926949, 0.372133, 0.109748, 0.0279921, 0.888294, 0.540222, 0.968234, 0.542848, 0.667913, 0.642186, 0.296949, 0.951811, 0.270914, 0.709238, 0.565878, 0.455219, 0.388291, 0.873798, 0.821345, 0.885799, 0.777767, 0.264082, 0.595908, 0.130934, 0.288966, 0.00544738, 0.426275, 0.279548, 0.161207, 0.241531, 0.174681, 0.246132, 0.372422, 0.196854, 0.824666, 0.846054, 0.760137, 0.105354, 0.998844, 0.527587, 0.45701, 0.0481647, 0.112449, 0.890006, 0.707108, 0.579511, 0.205827, 0.00880383, 0.46444},
{0.771927, 0.584928, 0.646286, 0.921358, 0.82297, 0.220958, 0.236599, 0.128692, 0.671227, 0.581846, 0.302385, 0.335343, 0.837543, 0.725868, 0.459954, 0.838188, 0.610442, 0.238092, 0.182278, 0.334124, 0.422875, 0.535781, 0.0430051, 0.28733, 0.727643, 0.930496, 0.734979, 0.212467, 0.26373, 0.472029, 0.600897, 0.519854, 0.710299, 0.00854931, 0.19786, 0.064089, 0.801363, 0.731095, 0.915122, 0.440108, 0.986473, 0.979892, 0.5597, 0.918256, 0.663342, 0.82395, 0.208746, 0.1122, 0.286579, 0.588589},
{0.181132, 0.851124, 0.140933, 0.925312, 0.349348, 0.52958, 0.98213, 0.350293, 0.0948722, 0.849961, 0.561964, 0.987415, 0.140005, 0.402073, 0.820735, 0.269601, 0.203332, 0.362993, 0.451043, 0.150989, 0.950462, 0.0509463, 0.386663, 0.91104, 0.625467, 0.579553, 0.623664, 0.372142, 0.847193, 0.705371, 0.373009, 0.758832, 0.330755, 0.213677, 0.771357, 0.903268, 0.45029, 0.589245, 0.93603, 0.167776, 0.347401, 0.120136, 0.551041, 0.906287, 0.905, 0.559863, 0.159459, 0.103664, 0.63292, 0.824027},
{0.389778, 0.075876, 0.101093, 0.134199, 0.94457, 0.293853, 0.231914, 0.610722, 0.201288, 0.338695, 0.41222, 0.983515, 0.39599, 0.847061, 0.510793, 0.614884, 0.597778, 0.758495, 0.859287, 0.017855, 0.170616, 0.49231, 0.65129, 0.0170905, 0.278028, 0.477418, 0.786092, 0.956052, 0.828132, 0.693743, 0.183165, 0.329425, 0.176894, 0.668614, 0.355853, 0.875477, 0.671828, 0.970344, 0.561719, 0.578018, 0.0477252, 0.711787, 0.49079, 0.962833, 0.348718, 0.854688, 0.962058, 0.896768, 0.526818, 0.732246},
{0.772731, 0.444583, 0.43685, 0.640533, 0.42011, 0.0709217, 0.989419, 0.238888, 0.255362, 0.77554, 0.973766, 0.712598, 0.618354, 0.830462, 0.197407, 0.988291, 0.627762, 0.906801, 0.7653, 0.160623, 0.465963, 0.507822, 0.859342, 0.428762, 0.759081, 0.0254058, 0.0431945, 0.0376306, 0.947903, 0.859437, 0.83928, 0.450338, 0.668204, 0.479035, 0.173728, 0.710078, 0.412387, 0.285294, 0.967372, 0.346929, 0.961073, 0.219673, 0.750625, 0.891968, 0.474424, 0.575064, 0.952739, 0.0860642, 0.620799, 0.924072},
{0.269256, 0.0920948, 0.829201, 0.341846, 0.391199, 0.905358, 0.733761, 0.00500105, 0.0396677, 0.133285, 5.43319e05, 0.767481, 0.863537, 0.774465, 0.045471, 0.435485, 0.650708, 0.424835, 0.775111, 0.204573, 0.354844, 0.608965, 0.913831, 0.499655, 0.157388, 0.27556, 0.447558, 0.728515, 0.716333, 0.722004, 0.351735, 0.546167, 0.693245, 0.884636, 0.5183, 0.292261, 0.371943, 0.973447, 0.747649, 0.645555, 0.125265, 0.99548, 0.169296, 0.368212, 0.0131155, 0.259557, 0.150327, 0.0790542, 0.824761, 0.650372},
{0.139923, 0.118655, 0.557325, 0.893317, 0.185824, 0.618801, 0.125281, 0.648275, 0.635955, 0.269916, 0.944006, 0.875603, 0.130118, 0.83257, 0.544367, 0.638585, 0.351462, 0.405057, 0.519601, 0.483875, 0.985406, 0.338192, 0.084405, 0.752308, 0.350807, 0.114202, 0.712608, 0.989371, 0.823767, 0.071683, 0.123078, 0.480841, 0.935749, 0.931929, 0.922943, 0.101182, 0.626744, 0.715328, 0.874777, 0.679483, 0.582848, 0.0220503, 0.900011, 0.795715, 0.504873, 0.109628, 0.275601, 0.866468, 0.57306, 0.686934},
{0.178581, 0.411155, 0.502857, 0.798993, 0.735472, 0.661339, 0.821168, 0.402418, 0.374085, 0.846052, 0.831931, 0.929648, 0.326153, 0.0699376, 0.722161, 0.145045, 0.840978, 0.282231, 0.697455, 0.8165, 0.362716, 0.109291, 0.192008, 0.448976, 0.596127, 0.321343, 0.726064, 0.488318, 0.0324067, 0.25372, 0.538475, 0.349363, 0.459475, 0.0675244, 0.921462, 0.453595, 0.174184, 0.8551, 0.70656, 0.960815, 0.770782, 0.0949719, 0.827012, 0.923364, 0.198976, 0.386425, 0.153403, 0.719877, 0.091795, 0.573164},
{0.3866, 0.810896, 0.414472, 0.263448, 0.97834, 0.39882, 0.926475, 0.880161, 0.51223, 0.690123, 0.284193, 0.522312, 0.687089, 0.630674, 0.153186, 0.0945861, 0.563858, 0.899428, 0.875397, 0.657592, 0.913058, 0.0804951, 0.33439, 0.141647, 0.965649, 0.0246982, 0.0706347, 0.966124, 0.1746, 0.572339, 0.479732, 0.119554, 0.133624, 0.923944, 0.326078, 0.967705, 0.942976, 0.601905, 0.985724, 0.368018, 0.712488, 0.628928, 0.473526, 0.46841, 0.892471, 0.237583, 0.139238, 0.726613, 0.274201, 0.0992633},
{0.111511, 0.641228, 0.708025, 0.939675, 0.282075, 0.404421, 0.520176, 0.915129, 0.649707, 0.70948, 0.243336, 0.676173, 0.561551, 0.913144, 0.0456023, 0.395712, 0.668511, 0.803308, 0.778553, 0.129613, 0.772251, 0.551213, 0.515847, 0.830641, 0.0342701, 0.614449, 0.276849, 0.415841, 0.11279, 0.62292, 0.322746, 0.0835973, 0.913609, 0.605153, 0.960897, 0.629977, 0.165372, 0.525437, 0.733326, 0.485823, 0.508105, 0.846555, 0.0339097, 0.243183, 0.148742, 0.728986, 0.0909659, 0.753463, 0.570197, 0.303453},
{0.246337, 0.442387, 0.405076, 0.697519, 0.409285, 0.97003, 0.751355, 0.885843, 0.691024, 0.506908, 0.512893, 0.541779, 0.273106, 0.600549, 0.600005, 0.65441, 0.968718, 0.987774, 0.465153, 0.858372, 0.879108, 0.615901, 0.300191, 0.786003, 0.462972, 0.0152878, 0.137657, 0.495821, 0.319212, 0.553467, 0.107098, 0.895494, 0.98722, 0.0418243, 0.558073, 0.948942, 0.00909132, 0.0545046, 0.608402, 0.371455, 0.984828, 0.204332, 0.914056, 0.0809266, 0.723494, 0.88432, 0.895561, 0.559678, 0.967307, 0.155448},
{0.491609, 0.980009, 0.997799, 0.456121, 0.93959, 0.664099, 0.339006, 0.303028, 0.580861, 0.611192, 0.850505, 0.409331, 0.459475, 0.153869, 0.589103, 0.377605, 0.434659, 0.252903, 0.939422, 0.815486, 0.0899344, 0.463698, 0.419525, 0.262793, 0.58998, 0.416538, 0.575245, 0.313749, 0.755456, 0.272443, 0.85385, 0.626222, 0.673741, 0.985806, 0.92227, 0.0332942, 0.270926, 0.216466, 0.393596, 0.898763, 0.0668758, 0.680931, 0.997092, 0.150983, 0.702383, 0.24446, 0.223233, 0.18186, 0.348147, 0.658197},
{0.855936, 0.330626, 0.914298, 0.559756, 0.464914, 0.0124876, 0.552651, 0.0905104, 0.152603, 0.843434, 0.100895, 0.107597, 0.533832, 0.706716, 0.472356, 0.202371, 0.0685116, 0.5541, 0.616286, 0.412606, 0.0753699, 0.332138, 0.0191292, 0.810988, 0.727769, 0.990776, 0.395484, 0.0938715, 0.456806, 0.117605, 0.646114, 0.458524, 0.848124, 0.514869, 0.358969, 0.617262, 0.999829, 0.641826, 0.649251, 0.49005, 0.173144, 0.291164, 0.743108, 0.803989, 0.981794, 0.816249, 0.708197, 0.380256, 0.191196, 0.567156},
{0.447195, 0.00466051, 0.340395, 0.678013, 0.0354911, 0.0992954, 0.360286, 0.375548, 0.541476, 0.258229, 0.634141, 0.23654, 0.00604117, 0.176237, 0.383696, 0.466334, 0.670269, 0.503892, 0.887165, 0.150394, 0.757672, 0.535782, 0.327, 0.860719, 0.281918, 0.694041, 0.289925, 0.373624, 0.804247, 0.0818859, 0.778136, 0.558716, 0.472103, 0.0079919, 0.463353, 0.416654, 0.588142, 0.796772, 0.2195, 0.315236, 0.887446, 0.268203, 0.867487, 0.858806, 0.993374, 0.527569, 0.264756, 0.275989, 0.449164, 0.157315},
{0.0671937, 0.927974, 0.211575, 0.179792, 0.621832, 0.78419, 0.15706, 0.703135, 0.930002, 0.133106, 0.113215, 0.274649, 0.0593172, 0.60119, 0.635559, 0.3543, 0.630329, 0.72147, 0.83032, 0.533973, 0.335385, 0.383612, 0.214483, 0.456958, 0.514252, 0.0933844, 0.369078, 0.622256, 0.875992, 0.309856, 0.120228, 0.609065, 0.560885, 0.323708, 0.46023, 0.180276, 0.740741, 0.317882, 0.886794, 0.921398, 0.762772, 0.553865, 0.974173, 0.920736, 0.116958, 0.558352, 0.747199, 0.574555, 0.754288, 0.00936539},
{0.961149, 0.898554, 0.838666, 0.843218, 0.620642, 0.775749, 0.683519, 0.205002, 0.758791, 0.202524, 0.212015, 0.161813, 0.405183, 0.324173, 0.701366, 0.258779, 0.300842, 0.00668834, 0.106877, 0.572565, 0.433112, 0.0882912, 0.652416, 0.698722, 0.803463, 0.445515, 0.950045, 0.0595894, 0.834337, 0.638701, 0.542751, 0.256675, 0.957359, 0.582297, 0.481091, 0.985237, 0.842864, 0.502548, 0.395797, 0.71451, 0.769577, 0.801555, 0.796663, 0.364523, 0.88635, 0.535641, 0.268068, 0.889735, 0.602941, 0.673368},
};

static const std::vector<float> costs = {557.143, 68.7117, 836.07, 33.0135, 372.421, 687.729, 157.723, 726.48, 37.623, 148.823, 573.72, 783.606, 158.2, 180.151, 551.706, 226.567, 453.785, 792.886, 564.455, 219.244, 667.991, 926.121, 280.967, 778.466, 884.648, 188.432, 442.825, 494.546, 427.273, 396.473, 688.006, 640.474, 98.4618, 399.572, 686.414, 938.112, 552.518, 570.837, 893.648, 398.197, 404.512, 732.471, 45.2533, 819.559, 405.627, 857.604, 941.41, 985.936, 227.11, 914.85};

static const std::vector<float> min_impressions = {0.786292, 0.412958, 0.52347, 0.438473, 0.241445, 0.350731, 0.511969, 0.633816, 0.25955, 0.0991966, 0.00359151, 0.889108, 0.917737, 0.396107, 0.0505497, 0.647723, 0.760974, 0.158351, 0.941555, 0.204236};

//
#endif
