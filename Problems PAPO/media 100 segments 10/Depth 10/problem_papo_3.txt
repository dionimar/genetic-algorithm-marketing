#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_indep(events[24], events[16]),events[62]),events[40]),events[19]),events[34]),events[83]),events[81]),events[12]),events[74]),events[67]),cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(events[43], events[85]),events[54]),events[30]),events[36]),events[78]),events[45]),events[6]),events[24]),events[48]),events[27]),cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(events[93], events[81]),events[31]),events[16]),events[41]),events[15]),events[51]),events[48]),events[65]),events[5]),events[94]),cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(events[75], events[82]),events[33]),events[59]),events[42]),events[61]),events[56]),events[50]),events[41]),events[16]),events[7]),cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(events[92], events[36]),events[47]),events[89]),events[10]),events[78]),events[8]),events[24]),events[57]),events[17]),events[79]),cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(events[36], events[76]),events[81]),events[24]),events[40]),events[90]),events[44]),events[5]),events[70]),events[16]),events[39]),cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(events[3], events[36]),events[29]),events[64]),events[43]),events[69]),events[0]),events[31]),events[21]),events[11]),events[94]),cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(events[54], events[3]),events[56]),events[93]),events[24]),events[61]),events[18]),events[34]),events[83]),events[92]),events[4]),cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[81], events[6]),events[41]),events[36]),events[88]),events[7]),events[16]),events[8]),events[65]),events[42]),events[72]),cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(events[67], events[5]),events[13]),events[45]),events[84]),events[94]),events[61]),events[68]),events[24]),events[47]),events[27])};


static const std::vector< std::vector<float> > prob = {{0.723575, 0.85284, 0.870654, 0.955684, 0.911751, 0.108693, 0.250221, 0.0568577, 0.346255, 0.308517, 0.0305048, 0.563378, 0.503438, 0.418747, 0.270017, 0.779155, 0.220393, 0.0640255, 0.702557, 0.119197, 0.372163, 0.452224, 0.103054, 0.94724, 0.559323, 0.651594, 0.191257, 0.787112, 0.793365, 0.659439, 0.892396, 0.890752, 0.816714, 0.119277, 0.890408, 0.609961, 0.855506, 0.576349, 0.789825, 0.950501, 0.165468, 0.34202, 0.438048, 0.415623, 0.10901, 0.921021, 0.218324, 0.615923, 0.72831, 0.362446, 0.818631, 0.675402, 0.25824, 0.736558, 0.124747, 0.699549, 0.464643, 0.889882, 0.354927, 0.670248, 0.645796, 0.917288, 0.000870709, 0.283212, 0.448719, 0.366249, 0.262945, 0.757879, 0.881203, 0.0662271, 0.791148, 0.0566727, 0.0149035, 0.256523, 0.0889786, 0.00532707, 0.429935, 0.143939, 0.239907, 0.539936, 0.861739, 0.839506, 0.632227, 0.19417, 0.172034, 0.324948, 0.328162, 0.902307, 0.207212, 0.567226, 0.491401, 0.898953, 0.571991, 0.183927, 0.556639, 0.149392, 0.728172, 0.520342, 0.762691, 0.926457},
{0.93188, 0.850456, 0.575787, 0.790378, 0.172054, 0.73224, 0.589982, 0.222711, 0.562626, 0.197059, 0.548754, 0.898102, 0.330571, 0.799039, 0.880945, 0.478803, 0.587443, 0.431439, 0.865908, 0.368924, 0.491353, 0.243988, 0.921336, 0.650864, 0.529505, 0.970207, 0.439464, 0.881293, 0.582232, 0.334165, 0.0429006, 0.65462, 0.181838, 0.945676, 0.704462, 0.594531, 0.458731, 0.758967, 0.114006, 0.566777, 0.246673, 0.0994689, 0.789311, 0.653009, 0.354987, 0.545552, 0.752002, 0.839, 0.270785, 0.361711, 0.462294, 0.0965963, 0.28664, 0.323906, 0.134758, 0.926605, 0.343141, 0.00768396, 0.539126, 0.850638, 0.369645, 0.420275, 0.667978, 0.492647, 0.749664, 0.101514, 0.972467, 0.95492, 0.693755, 0.946433, 0.45062, 0.914599, 0.502508, 0.439262, 0.0866887, 0.099421, 0.557083, 0.380793, 0.906025, 0.616498, 0.354356, 0.105076, 0.735521, 0.777527, 0.132131, 0.289248, 0.944211, 0.270104, 0.00214658, 0.689034, 0.37465, 0.0296059, 0.0824797, 0.461311, 0.40972, 0.436502, 0.313317, 0.853981, 0.161479, 0.493012},
{0.972026, 0.744761, 0.585845, 0.414404, 0.116558, 0.135777, 0.138091, 0.0846514, 0.304629, 0.952559, 0.422462, 0.171486, 0.102112, 0.751229, 0.357336, 0.535507, 0.585986, 0.940807, 0.557905, 0.054162, 0.698539, 0.814641, 0.57378, 0.395266, 0.153489, 0.58957, 0.869772, 0.330399, 0.542417, 0.86719, 0.885651, 0.350419, 0.391939, 0.466427, 0.199298, 0.439218, 0.276434, 0.346667, 0.569042, 0.283971, 0.609916, 0.347977, 0.44887, 0.0750074, 0.273582, 0.35657, 0.0116608, 0.0483695, 0.250821, 0.174353, 0.251872, 0.952612, 0.586975, 0.133758, 0.547503, 0.439483, 0.0841106, 0.65979, 0.821964, 0.43685, 0.233379, 0.0569085, 0.58509, 0.386438, 0.142814, 0.596313, 0.12463, 0.557616, 0.800643, 0.0689715, 0.0157512, 0.0832954, 0.30536, 0.213186, 0.261941, 0.386464, 0.937935, 0.758833, 0.840654, 0.754477, 0.69283, 0.608257, 0.925091, 0.54939, 0.449284, 0.959519, 0.676173, 0.620091, 0.851073, 0.756549, 0.468093, 0.820685, 0.468933, 0.415472, 0.104867, 0.89417, 0.222117, 0.223836, 0.691929, 0.206708},
{0.35256, 0.996458, 0.383081, 0.627494, 0.817959, 0.267177, 0.905701, 0.510582, 0.86205, 0.286315, 0.115834, 0.673334, 0.865003, 0.650144, 0.328983, 0.712916, 0.604842, 0.874468, 0.0407407, 0.632346, 0.922484, 0.981687, 0.812092, 0.852173, 0.579217, 0.951588, 0.118467, 0.912551, 0.218421, 0.924768, 0.161973, 0.106142, 0.775072, 0.558084, 0.939619, 0.194766, 0.0893026, 0.9409, 0.131921, 0.630182, 0.748214, 0.259424, 0.0807729, 0.279397, 0.811465, 0.635558, 0.286685, 0.888343, 0.890536, 0.133684, 0.271909, 0.222001, 0.296201, 0.771203, 0.0429559, 0.091006, 0.121364, 0.718526, 0.942794, 0.769085, 0.806632, 0.206911, 0.20866, 0.813769, 0.730592, 0.046148, 0.937007, 0.626904, 0.936761, 0.355131, 0.968516, 0.206579, 0.720514, 0.438834, 0.962442, 0.928933, 0.895347, 0.350195, 0.15585, 0.531299, 0.129502, 0.583853, 0.496402, 0.75272, 0.275564, 0.552931, 0.376707, 0.571794, 0.450172, 0.378233, 0.585947, 0.55212, 0.177494, 0.450576, 0.536185, 0.896052, 0.367394, 0.625512, 0.869934, 0.915806},
{0.186244, 0.0260168, 0.62447, 0.0264916, 0.946076, 0.904521, 0.701312, 0.236035, 0.394891, 0.396168, 0.652358, 0.961423, 0.0780114, 0.806612, 0.050903, 0.892988, 0.374594, 0.525324, 0.504401, 0.455721, 0.050914, 0.647485, 0.217517, 0.412909, 0.61593, 0.629558, 0.614761, 0.621697, 0.5131, 0.647079, 0.608418, 0.940138, 0.55157, 0.781196, 0.413006, 0.795638, 0.59495, 0.954753, 0.994358, 0.912219, 0.112786, 0.199476, 0.815554, 0.85432, 0.455818, 0.0730046, 0.241692, 0.454926, 0.0612712, 0.770317, 0.650751, 0.460428, 0.294506, 0.536067, 0.264407, 0.352151, 0.8057, 0.60523, 0.968027, 0.281672, 0.148501, 0.760123, 0.979245, 0.0859666, 0.258247, 0.909056, 0.711425, 0.940975, 0.324671, 0.308193, 0.821749, 0.359407, 0.502408, 0.975044, 0.636465, 0.419564, 0.919998, 0.37704, 0.892178, 0.14863, 0.166926, 0.843096, 0.980909, 0.670118, 0.606935, 0.285907, 0.572613, 0.0836966, 0.0379631, 0.897372, 0.642305, 0.455621, 0.158513, 0.643476, 0.913745, 0.473929, 0.673052, 0.373256, 0.198304, 0.463042},
{0.820602, 0.690118, 0.356295, 0.0474843, 0.024333, 0.931152, 0.319911, 0.499125, 0.400346, 0.247465, 0.416992, 0.549221, 0.792782, 0.652548, 0.198475, 0.500011, 0.0816167, 0.291415, 0.664663, 0.0223986, 0.431519, 0.308834, 0.930046, 0.699442, 0.649617, 0.85181, 0.964254, 0.130033, 0.472764, 0.327999, 0.853224, 0.38603, 0.203406, 0.185274, 0.349095, 0.452153, 0.216215, 0.78555, 0.907142, 0.664999, 0.179789, 0.726281, 0.882812, 0.515634, 0.564351, 0.522191, 0.0589229, 0.0628023, 0.00713797, 0.378636, 0.912828, 0.0530877, 0.357537, 0.461986, 0.247423, 0.857481, 0.625553, 0.229577, 0.331704, 0.429418, 0.623911, 0.685668, 0.475465, 0.586126, 0.573877, 0.441943, 0.483135, 0.441707, 0.920347, 0.223566, 0.0548798, 0.26208, 0.82085, 0.858295, 0.228419, 0.519615, 0.567035, 0.192468, 0.916808, 0.198888, 0.799512, 0.500243, 0.434201, 0.608781, 0.314119, 0.564856, 0.667753, 0.869174, 0.358884, 0.933488, 0.983438, 0.0297717, 0.534734, 0.283607, 0.450312, 0.79454, 0.59906, 0.361661, 0.176299, 0.74988},
{0.959128, 0.0565355, 0.329055, 0.563068, 0.161302, 0.506414, 0.569688, 0.0773374, 0.501514, 0.687009, 0.961456, 0.603597, 0.637662, 0.11695, 0.822771, 0.873275, 0.760246, 0.840592, 0.205286, 0.9996, 0.0697899, 0.706433, 0.555977, 0.90491, 0.524127, 0.157715, 0.630746, 0.825776, 0.580309, 0.724482, 0.746949, 0.195292, 0.996068, 0.856802, 0.378669, 0.443798, 0.53539, 0.380508, 0.703909, 0.393734, 0.868947, 0.537886, 0.737348, 0.217159, 0.408648, 0.0551017, 0.873645, 0.553268, 0.780254, 0.477153, 0.658662, 0.443231, 0.627373, 0.415038, 0.47837, 0.90608, 0.711495, 0.329724, 0.367979, 0.97314, 0.214278, 0.906598, 0.325685, 0.973589, 0.875177, 0.319826, 0.990146, 0.104322, 0.142104, 0.177304, 0.133385, 0.351327, 0.163265, 0.750643, 0.737159, 0.913265, 0.673733, 0.755227, 0.833204, 0.416471, 0.992304, 0.389426, 0.767593, 0.336098, 0.910341, 0.30962, 0.307926, 0.40922, 0.0663053, 0.0347124, 0.280341, 0.382997, 0.625628, 0.203028, 0.940604, 0.599197, 0.326659, 0.0129886, 0.725612, 0.692494},
{0.581789, 0.997682, 0.623569, 0.0794776, 0.118078, 0.96427, 0.70351, 0.646893, 0.509182, 0.954724, 0.314587, 0.795322, 0.178578, 0.820931, 0.406823, 0.342491, 0.451392, 0.297131, 0.0653911, 0.458273, 0.495281, 0.917985, 0.187942, 0.828647, 0.771848, 0.871877, 0.125613, 0.0946191, 0.752308, 0.867568, 0.927023, 0.907346, 0.724346, 0.345183, 0.116955, 0.286283, 0.538495, 0.572404, 0.719437, 0.577208, 0.760166, 0.0220194, 0.895706, 0.863287, 0.962887, 0.263746, 0.629476, 0.36661, 0.621444, 0.564745, 0.025842, 0.867525, 0.352538, 0.293179, 0.125795, 0.330211, 0.596472, 0.306006, 0.517937, 0.0990524, 0.552257, 0.581182, 0.0350156, 0.176527, 0.658168, 0.272142, 0.723238, 0.437056, 0.615418, 0.196161, 0.579807, 0.344437, 0.562718, 0.536259, 0.777188, 0.27815, 0.192507, 0.808547, 0.964836, 0.854109, 0.0373934, 0.840503, 0.559325, 0.703623, 0.40054, 0.432639, 0.442509, 0.595335, 0.529618, 0.483073, 0.873625, 0.910731, 0.0893322, 0.908469, 0.22584, 0.874456, 0.533377, 0.418066, 0.84917, 0.227006},
{0.78146, 0.863503, 0.693592, 0.0330893, 0.571914, 0.115899, 0.737178, 0.586091, 0.738639, 0.671804, 0.974524, 0.406997, 0.788073, 0.342788, 0.123173, 0.680075, 0.675947, 0.899435, 0.860279, 0.624152, 0.367533, 0.326115, 0.740585, 0.770406, 0.575627, 0.254189, 0.827118, 0.136383, 0.819747, 0.0908435, 0.121998, 0.199006, 0.724284, 0.699826, 0.746271, 0.251705, 0.964041, 0.722586, 0.404175, 0.879762, 0.582878, 0.698771, 0.454425, 0.673258, 0.446697, 0.517245, 0.842995, 0.134816, 0.97038, 0.775501, 0.190671, 0.0927875, 0.737646, 0.892728, 0.908082, 0.522289, 0.486404, 0.401306, 0.673255, 0.748441, 0.197446, 0.999651, 0.893939, 0.705468, 0.417445, 0.00891557, 0.314035, 0.617062, 0.248994, 0.694615, 0.185284, 0.931087, 0.624116, 0.762566, 0.865611, 0.514449, 0.0340053, 0.279468, 0.262897, 0.446723, 0.861447, 0.557534, 0.715082, 0.556734, 0.716851, 0.755554, 0.577553, 0.716858, 0.486684, 0.705114, 0.263913, 0.705795, 0.081784, 0.126561, 0.796739, 0.0500712, 0.81903, 0.5676, 0.483444, 0.31098},
{0.626678, 0.73038, 0.598681, 0.146823, 0.756316, 0.621689, 0.32003, 0.102372, 0.784951, 0.36671, 0.917456, 0.818678, 0.927779, 0.35303, 0.469248, 0.058846, 0.264328, 0.738124, 0.606162, 0.239867, 0.763891, 0.0978406, 0.0965345, 0.708455, 0.244924, 0.350036, 0.621767, 0.916653, 0.230985, 0.958702, 0.86969, 0.00166096, 0.117888, 0.800333, 0.758475, 0.053781, 0.704483, 0.642596, 0.219386, 0.201808, 0.888425, 0.708351, 0.493182, 0.705523, 0.366367, 0.467146, 0.522239, 0.474756, 0.792856, 0.803295, 0.945589, 0.67867, 0.746666, 0.985539, 0.172648, 0.879353, 0.683583, 0.995832, 0.0220526, 0.373266, 0.978236, 0.0528394, 0.124987, 0.542089, 0.489113, 0.801823, 0.930646, 0.675382, 0.0867954, 0.578184, 0.918906, 0.44104, 0.731456, 0.198765, 0.26301, 0.928677, 0.771967, 0.670497, 0.304672, 0.273992, 0.886402, 0.853424, 0.282628, 0.664912, 0.651123, 0.0255513, 0.854741, 0.661895, 0.648983, 0.777635, 0.0141272, 0.153212, 0.318538, 0.0871171, 0.407488, 0.0900085, 0.42227, 0.551809, 0.870543, 0.234394},
};

static const std::vector<float> costs = {698.242, 490.9, 949.84, 81.1813, 652.887, 823.592, 340.733, 303.335, 812.813, 555.949, 727.318, 173.361, 57.4034, 657.218, 916.437, 376.094, 878.219, 162.613, 809.949, 386.924, 140.22, 525.472, 877.207, 980.404, 317.93, 214.218, 262.477, 482.271, 819.386, 631.225, 86.4986, 39.2608, 298.889, 741.799, 197.202, 747.996, 693.906, 508.013, 109.971, 237.606, 759.482, 398.769, 462.33, 52.8098, 393.207, 131.323, 816.102, 919.57, 418.234, 846.896, 345.542, 12.6024, 398.947, 18.5261, 959.29, 981.358, 428.575, 236.724, 631.376, 738.588, 278.112, 418.745, 568.58, 575.938, 827.16, 191.279, 859.541, 361.948, 721.711, 740.939, 891.393, 977.945, 40.3718, 49.9145, 991.721, 588.001, 927.304, 300.611, 759.618, 201.209, 392.224, 712.107, 82.7173, 300.77, 133.273, 784.676, 743.851, 322.175, 283.322, 514.008, 762.09, 320.337, 386.412, 764.939, 115.797, 514.464, 203.222, 533.63, 280.828, 986.279};

static const std::vector<float> min_impressions = {0.111164, 0.800466, 0.454902, 0.287305, 0.231808, 0.432854, 0.385105, 0.523165, 0.794629, 0.889974};

//
#endif
