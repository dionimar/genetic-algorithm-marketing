#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(events[10], events[18]),events[197]),events[41]),events[90]),events[85]),events[113]),events[36]),events[51]),events[19]),events[7]),cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(events[150], events[149]),events[153]),events[10]),events[41]),events[148]),events[36]),events[85]),events[136]),events[132]),events[21]),cons_incl(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(events[36], events[181]),events[120]),events[28]),events[185]),events[163]),events[97]),events[16]),events[50]),events[33]),events[116]),cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(events[193], events[174]),events[74]),events[15]),events[167]),events[132]),events[85]),events[41]),events[17]),events[93]),events[191]),cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(events[5], events[142]),events[60]),events[65]),events[58]),events[67]),events[2]),events[128]),events[156]),events[47]),events[148])};


static const std::vector< std::vector<float> > prob = {{0.661495, 0.0674827, 0.150885, 0.0843197, 0.35056, 0.299155, 0.833661, 0.00613529, 0.452202, 0.301058, 0.021317, 0.565095, 0.223673, 0.26536, 0.135861, 0.878597, 0.289692, 0.911089, 0.125206, 0.599547, 0.963748, 0.957562, 0.858861, 0.251485, 0.320633, 0.771515, 0.236805, 0.361824, 0.282118, 0.947538, 0.403978, 0.0664133, 0.467174, 0.860818, 0.561842, 0.651957, 0.703047, 0.926984, 0.291718, 0.645205, 0.152065, 0.321522, 0.768494, 0.0845539, 0.385109, 0.581153, 0.640841, 0.324777, 0.744864, 0.527639, 0.735436, 0.358694, 0.180211, 0.514537, 0.446944, 0.0254046, 0.194012, 0.939416, 0.68906, 0.284713, 0.134674, 0.73606, 0.569142, 0.0709326, 0.120705, 0.832754, 0.893577, 0.416666, 0.975003, 0.248493, 0.451532, 0.860738, 0.742578, 0.17977, 0.588913, 0.452677, 0.77212, 0.397454, 0.383584, 0.112298, 0.595831, 0.463051, 0.126768, 0.686525, 0.987599, 0.913584, 0.0324547, 0.845387, 0.831098, 0.705425, 0.0635012, 0.366277, 0.256525, 0.306125, 0.11375, 0.309288, 0.130895, 0.235395, 0.925711, 0.424466, 0.654887, 0.589552, 0.505976, 0.799274, 0.485761, 0.224522, 0.893149, 0.147072, 0.476726, 0.475413, 0.104635, 0.793982, 0.243594, 0.102171, 0.564705, 0.0861339, 0.157559, 0.27275, 0.653294, 0.852032, 0.986519, 0.384887, 0.328422, 0.51783, 0.990781, 0.170186, 0.462913, 0.0182524, 0.0166799, 0.723756, 0.217337, 0.480501, 0.42784, 0.683703, 0.035089, 0.521824, 0.931422, 0.124951, 0.729393, 0.438658, 0.858757, 0.662576, 0.362031, 0.815544, 0.494484, 0.121626, 0.354964, 0.106253, 0.883968, 0.631394, 0.762294, 0.126255, 0.0215334, 0.375676, 0.523908, 0.0518611, 0.476067, 0.266468, 0.471063, 0.868535, 0.869085, 0.392206, 0.679855, 0.724975, 0.821148, 0.649653, 0.899285, 0.684645, 0.41751, 0.185053, 0.474525, 0.999528, 0.416872, 0.989436, 0.182179, 0.536715, 0.772414, 0.787086, 0.730115, 0.018063, 0.526436, 0.541059, 0.69816, 0.0397912, 0.0748646, 0.0491723, 0.172244, 0.519525, 0.249051, 0.218982, 0.903984, 0.639584, 0.146085, 0.890712, 0.0372176, 0.412157, 0.423203, 0.276531, 0.510931, 0.540847},
{0.995584, 0.215595, 0.74442, 0.256148, 0.983486, 0.971376, 0.607867, 0.350754, 0.0137339, 0.376052, 0.302921, 0.579396, 0.873184, 0.726583, 0.364815, 0.0711131, 0.559037, 0.411336, 0.880079, 0.474547, 0.605515, 0.869721, 0.000760988, 0.5861, 0.656487, 0.277872, 0.232856, 0.39833, 0.828564, 0.108711, 0.922383, 0.0607853, 0.974731, 0.998204, 0.368235, 0.593453, 0.223275, 0.872862, 0.575254, 0.55462, 0.931296, 0.30996, 0.839241, 0.653171, 0.792691, 0.0942766, 0.264126, 0.422659, 0.029359, 0.830763, 0.0635651, 0.499396, 0.140261, 0.926753, 0.187048, 0.812378, 0.330233, 0.188721, 0.0849292, 0.780221, 0.789223, 0.332105, 0.643641, 0.612462, 0.952796, 0.391519, 0.698883, 0.363836, 0.293134, 0.0267858, 0.736903, 0.312114, 0.0955319, 0.411778, 0.968125, 0.56758, 0.605684, 0.844226, 0.858745, 0.976089, 0.207751, 0.530607, 0.159959, 0.0712563, 0.791528, 0.883835, 0.18092, 0.213928, 0.486282, 0.517443, 0.464395, 0.291602, 0.627895, 0.182124, 0.427839, 0.486779, 0.368857, 0.255452, 0.449939, 0.966195, 0.940479, 0.0255777, 0.0452743, 0.330734, 0.743883, 0.0145874, 0.544756, 0.104588, 0.518441, 0.582473, 0.228085, 0.943357, 0.248231, 0.316206, 0.545755, 0.247634, 0.379975, 0.0938783, 0.0574089, 0.691376, 0.196965, 0.892332, 0.566256, 0.892301, 0.250719, 0.0525951, 0.176438, 0.117379, 0.787244, 0.692825, 0.260043, 0.356726, 0.923323, 0.940733, 0.648491, 0.116832, 0.137584, 0.0154507, 0.608236, 0.472922, 0.502156, 0.977962, 0.990655, 0.749001, 0.0922752, 0.203748, 0.290447, 0.0691893, 0.338605, 0.141558, 0.699804, 0.0137278, 0.403645, 0.737973, 0.993883, 0.118819, 0.36888, 0.589866, 0.614143, 0.819493, 0.249662, 0.272089, 0.165162, 0.397183, 0.798086, 0.327089, 0.933772, 0.371914, 0.215785, 0.684261, 0.40595, 0.110691, 0.817764, 0.709011, 0.07584, 0.849049, 0.0285879, 0.957067, 0.651281, 0.850087, 0.0109876, 0.478071, 0.472724, 0.655554, 0.265376, 0.522834, 0.104217, 0.100555, 0.979833, 0.905418, 0.192102, 0.973422, 0.727308, 0.985215, 0.824221, 0.505286, 0.864032, 0.586085, 0.764335, 0.623813},
{0.95734, 0.764464, 0.57484, 0.478658, 0.339705, 0.457743, 0.580749, 0.0524338, 0.165337, 0.892041, 0.0315049, 0.488283, 0.293472, 0.0070951, 0.0127803, 0.594716, 0.336976, 0.952938, 0.392385, 0.45524, 0.12197, 0.442826, 0.489033, 0.228448, 0.0369667, 0.558271, 0.747503, 0.315314, 0.457845, 0.76072, 0.0833767, 0.0457446, 0.159126, 0.459212, 0.475096, 0.197428, 0.0116222, 0.0868052, 0.169038, 0.873609, 0.528428, 0.991548, 0.169426, 0.106562, 0.584479, 0.598975, 0.345936, 0.0603403, 0.937772, 0.978264, 0.483694, 0.37069, 0.156325, 0.86705, 0.914198, 0.13953, 0.0736669, 0.214505, 0.142219, 0.934512, 0.971257, 0.455619, 0.358104, 0.354937, 0.552711, 0.670909, 0.354961, 0.849825, 0.731492, 0.770272, 0.257514, 0.397483, 0.165265, 0.0369688, 0.67035, 0.953172, 0.85861, 0.143442, 0.109336, 0.441899, 0.908816, 0.0927754, 0.355932, 0.189934, 0.671691, 0.443119, 0.68191, 0.823321, 0.878202, 0.139096, 0.447975, 0.918519, 0.74835, 0.395017, 0.0976808, 0.685545, 0.719852, 0.112643, 0.41502, 0.424743, 0.260771, 0.0677347, 0.841044, 0.241571, 0.0249163, 0.821133, 0.976883, 0.413078, 0.0991595, 0.264217, 0.255107, 0.651889, 0.104612, 0.480514, 0.105426, 0.435344, 0.568189, 0.667513, 0.124915, 0.838548, 0.988485, 0.397233, 0.741586, 0.297632, 0.194644, 0.774931, 0.966495, 0.344173, 0.600232, 0.0772772, 0.206681, 0.339333, 0.868234, 0.303064, 0.527882, 0.347332, 0.458481, 0.502997, 0.883037, 0.377894, 0.442878, 0.173705, 0.946265, 0.804155, 0.337633, 0.777226, 0.775905, 0.944018, 0.0274091, 0.213265, 0.138806, 0.365231, 0.436094, 0.1915, 0.537146, 0.782018, 0.953577, 0.729279, 0.424963, 0.446117, 0.670324, 0.126038, 0.481398, 0.351566, 0.785109, 0.0375657, 0.960452, 0.672508, 0.658193, 0.187094, 0.422112, 0.163444, 0.706797, 0.725098, 0.387924, 0.563342, 0.893776, 0.091792, 0.623686, 0.209239, 0.526413, 0.142892, 0.870619, 0.289343, 0.949266, 0.544317, 0.750549, 0.5275, 0.0180189, 0.45091, 0.526696, 0.216112, 0.064205, 0.0421248, 0.391264, 0.609423, 0.528339, 0.713686, 0.803018, 0.83592},
{0.448807, 0.897674, 0.737397, 0.411075, 0.070932, 0.492344, 0.735597, 0.808803, 0.957543, 0.506285, 0.948704, 0.420954, 0.30534, 0.589843, 0.298718, 0.112217, 0.105043, 0.296942, 0.163243, 0.0186901, 0.553178, 0.47696, 0.0712588, 0.733457, 0.167888, 0.737918, 0.762785, 0.666522, 0.0977486, 0.171234, 0.223335, 0.995579, 0.710077, 0.786488, 0.214291, 0.0508073, 0.298004, 0.419076, 0.2479, 0.557348, 0.319511, 0.733437, 0.387722, 0.457304, 0.119934, 0.180849, 0.594648, 0.847084, 0.90424, 0.669116, 0.859636, 0.641825, 0.228891, 0.586264, 0.96726, 0.84406, 0.700641, 0.743335, 0.635635, 0.870317, 0.100216, 0.676046, 0.786626, 0.669799, 0.200489, 0.820152, 0.00271138, 0.528701, 0.0851775, 0.519927, 0.573993, 0.637121, 0.591849, 0.864704, 0.104332, 0.649026, 0.811564, 0.576643, 0.401355, 0.810866, 0.360363, 0.542747, 0.968921, 0.557461, 0.643028, 0.108795, 0.124373, 0.210237, 0.623891, 0.188579, 0.581485, 0.430744, 0.147172, 0.184579, 0.923398, 0.343384, 0.071842, 0.432605, 0.754324, 0.891466, 0.300941, 0.17547, 0.651011, 0.321614, 0.373465, 0.07007, 0.785682, 0.578177, 0.398922, 0.846964, 0.782899, 0.54673, 0.611807, 0.9931, 0.297653, 0.518336, 0.387475, 0.861768, 0.156872, 0.230703, 0.81299, 0.453717, 0.0898138, 0.476378, 0.833518, 0.967379, 0.304995, 0.7242, 0.672339, 0.661182, 0.464686, 0.784361, 0.526927, 0.996513, 0.627074, 0.0254633, 0.823435, 0.408051, 0.485668, 0.0975831, 0.711817, 0.498137, 0.0544755, 0.344631, 0.345484, 0.531994, 0.333036, 0.833236, 0.256097, 0.201582, 0.632467, 0.183284, 0.0769683, 0.773227, 0.976655, 0.435917, 0.142359, 0.0929858, 0.911243, 0.0200931, 0.732691, 0.626848, 0.821294, 0.407806, 0.570261, 0.548118, 0.460697, 0.905685, 0.30803, 0.973248, 0.0850332, 0.221255, 0.526005, 0.333014, 0.0687794, 0.630016, 0.393765, 0.798741, 0.539807, 0.656, 0.989222, 0.752167, 0.1384, 0.0101171, 0.447535, 0.427595, 0.495391, 0.957175, 0.466135, 0.266415, 0.680984, 0.936613, 0.221856, 0.203951, 0.134991, 0.990305, 0.713914, 0.524935, 0.594495, 0.578481},
{0.00152373, 0.824124, 0.0086384, 0.559958, 0.728076, 0.049115, 0.524413, 0.965408, 0.0257594, 0.282685, 0.395234, 0.769293, 0.939934, 0.823172, 0.8152, 0.0336775, 0.699677, 0.696652, 0.908064, 0.015888, 0.436552, 0.710121, 0.54459, 0.907314, 0.78696, 0.321548, 0.179773, 0.338787, 0.335439, 0.334383, 0.892133, 0.542385, 0.0826653, 0.274988, 0.156277, 0.832042, 0.817473, 0.301938, 0.531238, 0.616868, 0.966354, 0.0663065, 0.890408, 0.825598, 0.741761, 0.818776, 0.308553, 0.537135, 0.563114, 0.798338, 0.533057, 0.772548, 0.211224, 0.335418, 0.163577, 0.284479, 0.120173, 0.231464, 0.574392, 0.415179, 0.675198, 0.736409, 0.425306, 0.542911, 0.628228, 0.968322, 0.267605, 0.00549003, 0.29218, 0.685827, 0.193886, 0.543888, 0.843918, 0.285901, 0.00334819, 0.31195, 0.816087, 0.96874, 0.70706, 0.761759, 0.256881, 0.406492, 0.286057, 0.284685, 0.444643, 0.397097, 0.825106, 0.93635, 0.445623, 0.491673, 0.466394, 0.553921, 0.0848856, 0.856273, 0.350609, 0.239239, 0.788886, 0.0763974, 0.820265, 0.378102, 0.967455, 0.942394, 0.293531, 0.453694, 0.766905, 0.382434, 0.780942, 0.666173, 0.328553, 0.385372, 0.178749, 0.630104, 0.0884966, 0.623141, 0.923579, 0.307713, 0.104061, 0.518139, 0.721136, 0.73437, 0.688857, 0.819875, 0.573205, 0.652795, 0.943089, 0.201497, 0.359562, 0.498797, 0.0174054, 0.608309, 0.115304, 0.333641, 0.442259, 0.853311, 0.179213, 0.110638, 0.97116, 0.0168999, 0.545489, 0.564773, 0.0315049, 0.763359, 0.940927, 0.0171022, 0.773398, 0.740878, 0.945928, 0.300654, 0.967851, 0.881095, 0.694918, 0.690664, 0.692194, 0.831231, 0.656332, 0.400226, 0.590081, 0.453713, 0.888929, 0.689878, 0.867009, 0.99364, 0.0976951, 0.923207, 0.872734, 0.282837, 0.85961, 0.00574596, 0.983398, 0.621933, 0.56703, 0.80796, 0.149383, 0.0935177, 0.130103, 0.880133, 0.763335, 0.881828, 0.0333422, 0.889911, 0.883728, 0.331797, 0.678062, 0.874881, 0.851482, 0.321798, 0.891043, 0.18059, 0.83544, 0.483075, 0.259194, 0.175088, 0.0183964, 0.985327, 0.428777, 0.684552, 0.026055, 0.645196, 0.513147, 0.946468},
};

static const std::vector<float> costs = {98.7644, 223.274, 425.163, 85.4889, 684.013, 468.602, 551.453, 324.047, 412.513, 668.239, 564.26, 868.742, 723.174, 632.538, 388.742, 11.7737, 174.049, 415.888, 648.565, 291.806, 709.182, 793.529, 719.265, 851.262, 810.005, 862.4, 747.793, 43.392, 842.031, 248.953, 515.233, 975.032, 736.158, 1.35352, 593.13, 548.055, 8.91857, 896.227, 555.72, 146.808, 84.9111, 605.318, 592.13, 272.041, 296.427, 804.899, 260.1, 110.959, 475.503, 644.094, 830.624, 135.906, 533.288, 888.145, 819.901, 809.569, 405.967, 840.392, 468.609, 749.737, 443.636, 852.553, 449.823, 491.488, 38.3739, 229.073, 110.37, 358.489, 411.327, 599.18, 842.233, 506.952, 607.585, 816.516, 172.786, 335.901, 102.71, 346.577, 60.1264, 876.396, 753.77, 35.0195, 622.113, 36.445, 28.8184, 624.265, 739.741, 649.023, 524.958, 444.818, 984.714, 932.144, 947.426, 426.633, 2.91056, 887.832, 348.225, 732.731, 880.786, 243.095, 932.795, 331.146, 55.8752, 652.619, 9.58577, 760.183, 726.386, 260.754, 455.742, 599.758, 315.518, 479.946, 141.275, 909.576, 949.089, 982.89, 184.151, 486.329, 263.658, 981.889, 980.833, 54.072, 930.307, 561.372, 676.059, 959.89, 335.598, 791.521, 399.61, 299.944, 506.218, 995.125, 547.62, 582.638, 468.022, 370.807, 399.779, 187.901, 806.071, 674.057, 570.269, 819.905, 278.022, 498.351, 101.165, 879.95, 632.404, 586.073, 599.377, 795.078, 653.13, 570.001, 220.717, 400.126, 426.353, 712.975, 335.82, 830.091, 360.349, 703.069, 788.775, 126.489, 81.3788, 941.292, 560.007, 563.938, 297.614, 139.193, 277.786, 390.748, 66.2854, 866.042, 228.242, 761.914, 711.459, 200.959, 123.989, 967.492, 878.27, 126.97, 508.762, 233.469, 46.2277, 894.622, 967.705, 788.594, 552.368, 236.084, 850.062, 587.836, 155.599, 999.014, 713.805, 229.61, 617.898, 393.535, 968.224, 727.891, 266.936, 972.454};

static const std::vector<float> min_impressions = {0.936921, 0.633758, 0.32258, 0.113794, 0.712885};

//
#endif
