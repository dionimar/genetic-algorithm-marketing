#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(events[88], events[61]),events[52]),events[21]),events[22]),events[20]),events[7]),events[92]),events[72]),events[70]),events[50]),cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(events[12], events[73]),events[40]),events[60]),events[90]),events[82]),events[21]),events[48]),events[68]),events[45]),events[53]),cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(events[91], events[52]),events[78]),events[64]),events[71]),events[32]),events[56]),events[49]),events[72]),events[88]),events[4]),cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(events[95], events[31]),events[65]),events[80]),events[17]),events[26]),events[86]),events[45]),events[32]),events[67]),events[11]),cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(events[94], events[41]),events[79]),events[84]),events[44]),events[87]),events[28]),events[30]),events[46]),events[81]),events[55]),cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[67], events[92]),events[23]),events[99]),events[65]),events[56]),events[43]),events[31]),events[39]),events[83]),events[49]),cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[68], events[19]),events[60]),events[36]),events[17]),events[89]),events[39]),events[86]),events[59]),events[26]),events[13]),cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(events[32], events[3]),events[56]),events[84]),events[12]),events[93]),events[88]),events[14]),events[53]),events[60]),events[89]),cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(events[16], events[25]),events[77]),events[76]),events[97]),events[37]),events[56]),events[33]),events[46]),events[26]),events[32]),cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(events[41], events[30]),events[58]),events[14]),events[24]),events[90]),events[9]),events[21]),events[96]),events[89]),events[87])};


static const std::vector< std::vector<float> > prob = {{0.978783, 0.402077, 0.368402, 0.566198, 0.649972, 0.135992, 0.346402, 0.738524, 0.719637, 0.565118, 0.890919, 0.838374, 0.240143, 0.798405, 0.376682, 0.675954, 0.00600067, 0.248376, 0.253192, 0.379978, 0.900104, 0.354358, 0.861946, 0.0138442, 0.612355, 0.618333, 0.965959, 0.576333, 0.249903, 0.213073, 0.0980171, 0.240153, 0.323391, 0.3702, 0.0887557, 0.567912, 0.144154, 0.22603, 0.807748, 0.986933, 0.828119, 0.496692, 0.775662, 0.458756, 0.0054355, 0.218503, 0.0277128, 0.304613, 0.974597, 0.272785, 0.757188, 0.223718, 0.89479, 0.796736, 0.218708, 0.404623, 0.131262, 0.564063, 0.572451, 0.902062, 0.457016, 0.664913, 0.263167, 0.357337, 0.172447, 0.705547, 0.24532, 0.0847624, 0.696714, 0.00683581, 0.648589, 0.976828, 0.445913, 0.84692, 0.712844, 0.664898, 0.588592, 0.736646, 0.334238, 0.271984, 0.896133, 0.957345, 0.173651, 0.661997, 0.870486, 0.498756, 0.465296, 0.392786, 0.238768, 0.461532, 0.306449, 0.0989485, 0.453477, 0.188106, 0.47614, 0.683362, 0.331595, 0.789454, 0.65444, 0.271398},
{0.602298, 0.0911074, 0.583787, 0.98202, 0.66194, 0.198725, 0.0494542, 0.449631, 0.142949, 0.355255, 0.404548, 0.855811, 0.274569, 0.511827, 0.410405, 0.506388, 0.536819, 0.733444, 0.700244, 0.168263, 0.723145, 0.412662, 0.332931, 0.398023, 0.623326, 0.229199, 0.442267, 0.413085, 0.116753, 0.173314, 0.711436, 0.725461, 0.348468, 0.477574, 0.441586, 0.246014, 0.344297, 0.621497, 0.751036, 0.882336, 0.188615, 0.990183, 0.251997, 0.477507, 0.626526, 0.882071, 0.407061, 0.498405, 0.307495, 0.580637, 0.283931, 0.573069, 0.292481, 0.324615, 0.662095, 0.801397, 0.648974, 0.252443, 0.901536, 0.440364, 0.945417, 0.278548, 0.917413, 0.454457, 0.508556, 0.922707, 0.0898432, 0.458234, 0.885847, 0.527302, 0.80562, 0.0938364, 0.852814, 0.230661, 0.166948, 0.363869, 0.632546, 0.254265, 0.532657, 0.575344, 0.169936, 0.0712457, 0.457933, 0.984276, 0.600384, 0.242243, 0.696713, 0.371901, 0.644418, 0.160538, 0.198849, 0.128904, 0.616534, 0.829061, 0.783569, 0.379652, 0.512671, 0.260965, 0.898807, 0.649728},
{0.661975, 0.422878, 0.885475, 0.608656, 0.991076, 0.755823, 0.553954, 0.307265, 0.248934, 0.0315726, 0.290803, 0.459481, 0.713473, 0.748157, 0.857642, 0.139535, 0.867434, 0.307574, 0.662873, 0.296812, 0.289758, 0.609865, 0.366429, 0.598108, 0.371601, 0.884789, 0.352715, 0.888892, 0.38311, 0.92018, 0.743203, 0.452776, 0.960926, 0.9004, 0.951629, 0.753653, 0.124545, 0.764147, 0.0529721, 0.380895, 0.161333, 0.00630938, 0.689867, 0.4392, 0.242356, 0.0343098, 0.463371, 0.664273, 0.994373, 0.399934, 0.0630417, 0.838051, 0.513751, 0.321425, 0.84905, 0.445962, 0.966948, 0.910144, 0.151553, 0.510599, 0.309419, 0.0436742, 0.602644, 0.630472, 0.456924, 0.260874, 0.119883, 0.420081, 0.883386, 0.809848, 0.882166, 0.856206, 0.867104, 0.556628, 0.0876605, 0.982466, 0.774469, 0.186982, 0.121584, 0.543133, 0.703791, 0.208259, 0.742751, 0.506435, 0.621076, 0.0150549, 0.507876, 0.499258, 0.13225, 0.999005, 0.941765, 0.159123, 0.910145, 0.580755, 0.251882, 0.911217, 0.818578, 0.753337, 0.407566, 0.752987},
{0.717363, 0.0288758, 0.53116, 0.199235, 0.596161, 0.402153, 0.0888951, 0.0199052, 0.217181, 0.460003, 0.749656, 0.393745, 0.303924, 0.766942, 0.648714, 0.198477, 0.452637, 0.857759, 0.832857, 0.561856, 0.918015, 0.726601, 0.843183, 0.434992, 0.929483, 0.0187435, 0.730672, 0.599311, 0.496522, 0.547744, 0.14125, 0.246685, 0.795026, 0.873417, 0.926931, 0.548296, 0.193307, 0.373315, 0.680125, 0.937028, 0.931992, 0.725003, 0.603896, 0.0528895, 0.0898077, 0.795825, 0.246997, 0.464508, 0.353691, 0.192677, 0.317917, 0.0516452, 0.33649, 0.565627, 0.255295, 0.00807839, 0.936875, 0.7265, 0.355342, 0.55737, 0.694712, 0.775848, 0.157945, 0.899904, 0.293582, 0.265953, 0.365135, 0.356213, 0.299127, 0.332978, 0.798023, 0.303432, 0.359065, 0.462629, 0.801844, 0.853068, 0.118287, 0.0427771, 0.348845, 0.471133, 0.159697, 0.427395, 0.777133, 0.942853, 0.632809, 0.168518, 0.180337, 0.239469, 0.366134, 0.271923, 0.437528, 0.00568892, 0.936965, 0.0860334, 0.145554, 0.877888, 0.797627, 0.0656104, 0.890293, 0.655716},
{0.381989, 0.927563, 0.321547, 0.383272, 0.576009, 0.339326, 0.334033, 0.619118, 0.509006, 0.713839, 0.623282, 0.935011, 0.929117, 0.4534, 0.201223, 0.263655, 0.449488, 0.493523, 0.605896, 0.170289, 0.446101, 0.675569, 0.608781, 0.491273, 0.79813, 0.0542065, 0.996319, 0.804124, 0.730537, 0.562587, 0.88141, 0.459737, 0.245855, 0.798799, 0.152427, 0.0511391, 0.223152, 0.817188, 0.352407, 0.710027, 0.986693, 0.375431, 0.44742, 0.532662, 0.744454, 0.764077, 0.338668, 0.252675, 0.0080835, 0.00716366, 0.109893, 0.0858475, 0.280215, 0.194305, 0.981244, 0.459593, 0.441304, 0.830612, 0.633998, 0.633827, 0.451042, 0.354245, 0.907132, 0.337634, 0.654921, 0.365515, 0.498776, 0.621746, 0.653962, 0.268523, 0.350975, 0.140296, 0.510272, 0.64085, 0.12469, 0.742099, 0.764973, 0.26045, 0.161523, 0.0471667, 0.697232, 0.66558, 0.186054, 0.117844, 0.691691, 0.762186, 0.338571, 0.548994, 0.57172, 0.477038, 0.573283, 0.567044, 0.0963497, 0.969342, 0.678088, 0.505221, 0.388038, 0.724985, 0.582152, 0.880835},
{0.550652, 0.748528, 0.447461, 0.095451, 0.69274, 0.750589, 0.538811, 0.777262, 0.0182426, 0.408859, 0.867362, 0.912465, 0.186042, 0.90038, 0.943341, 0.316998, 0.123927, 0.123735, 0.922499, 0.610646, 0.627145, 0.511281, 0.646457, 0.377523, 0.745966, 0.739239, 0.877541, 0.364284, 0.271205, 0.0669473, 0.694193, 0.296087, 0.757001, 0.759355, 0.545107, 0.335791, 0.615996, 0.730266, 0.907086, 0.77309, 0.259571, 0.206401, 0.375541, 0.915799, 0.874599, 0.777971, 0.917878, 0.723665, 0.187158, 0.631093, 0.432937, 0.248958, 0.100267, 0.350424, 0.326228, 0.639069, 0.929053, 0.685732, 0.840233, 0.859191, 0.19598, 0.994906, 0.874637, 0.89173, 0.210229, 0.616946, 0.950523, 0.467094, 0.665901, 0.993383, 0.32101, 0.757964, 0.375573, 0.923697, 0.356251, 0.0765258, 0.359084, 0.940341, 0.271595, 0.986566, 0.0452247, 0.180799, 0.845827, 0.0832964, 0.247594, 0.5209, 0.236728, 0.0532844, 0.94422, 0.565115, 0.841472, 0.520179, 0.982699, 0.666199, 0.655887, 0.665218, 0.760415, 0.477836, 0.503629, 0.486483},
{0.279205, 0.417124, 0.26855, 0.303134, 0.284547, 0.423371, 0.459706, 0.853251, 0.629096, 0.511668, 0.047396, 0.708648, 0.309671, 0.911387, 0.392116, 0.180096, 0.857524, 0.135772, 0.700566, 0.935957, 0.691763, 0.425592, 0.448757, 0.779677, 0.542225, 0.674283, 0.777726, 0.621766, 0.737024, 0.540683, 0.174723, 0.90651, 0.063841, 0.960236, 0.819024, 0.468793, 0.380654, 0.27553, 0.493874, 0.545357, 0.613209, 0.346076, 0.204116, 0.341327, 0.866549, 0.146542, 0.937549, 0.152636, 0.680944, 0.357116, 0.594377, 0.598191, 0.602344, 0.217659, 0.747714, 0.717107, 0.946799, 0.536475, 0.562905, 0.041075, 0.685707, 0.292909, 0.687088, 0.248639, 0.48673, 0.330111, 0.779557, 0.775573, 0.537051, 0.949893, 0.431041, 0.854161, 0.887644, 0.782803, 0.544466, 0.532571, 0.361868, 0.708055, 0.420198, 0.218016, 0.487816, 0.540364, 0.522231, 0.124457, 0.679392, 0.137861, 0.815924, 0.0739603, 0.444923, 0.641945, 0.135374, 0.0219407, 0.0984096, 0.472075, 0.964934, 0.136553, 0.199148, 0.0386725, 0.918513, 0.139678},
{0.108545, 0.797453, 0.86614, 0.943893, 0.0334208, 0.708831, 0.417159, 0.873281, 0.926089, 0.880509, 0.926752, 0.015814, 0.791315, 0.403473, 0.0647483, 0.638876, 0.574, 0.244633, 0.910323, 0.654148, 0.734527, 0.169121, 0.576607, 0.683821, 0.88198, 0.921154, 0.0374295, 0.0901495, 0.37208, 0.682391, 0.962156, 0.024107, 0.268574, 0.339068, 0.942204, 0.40764, 0.885187, 0.395593, 0.823836, 0.582018, 0.382898, 0.834164, 0.610499, 0.853092, 0.255918, 0.767063, 0.532317, 0.856229, 0.600172, 0.0554506, 0.592122, 0.206625, 0.678398, 0.792226, 0.601997, 0.093489, 0.582421, 0.803517, 0.111732, 0.165905, 0.130919, 0.905095, 0.920756, 0.284199, 0.126461, 0.545676, 0.176356, 0.563607, 0.0180799, 0.111053, 0.226272, 0.1898, 0.18759, 0.462563, 0.924381, 0.574549, 0.023552, 0.632578, 0.566559, 0.496839, 0.316576, 0.519452, 0.615203, 0.933266, 0.493761, 0.311802, 0.936756, 0.160439, 0.0427044, 0.0367612, 0.200443, 0.260406, 0.72589, 0.0596295, 0.819759, 0.127958, 0.911407, 0.154674, 0.269145, 0.462729},
{0.911041, 0.374445, 0.516981, 0.301233, 0.113828, 0.602184, 0.585671, 0.578855, 0.498866, 0.783458, 0.991385, 0.722536, 0.920352, 0.137597, 0.770513, 0.61589, 0.0604854, 0.879886, 0.692837, 0.941042, 0.486473, 0.801479, 0.758993, 0.718732, 0.189377, 0.126781, 0.735359, 0.178074, 0.899314, 0.908905, 0.449315, 0.702597, 0.89302, 0.359636, 0.384406, 0.85557, 0.032979, 0.182326, 0.189238, 0.75193, 0.131921, 0.0863366, 0.9236, 0.291037, 0.382385, 0.572191, 0.262223, 0.995125, 0.772343, 0.283664, 0.234688, 0.574876, 0.733092, 0.206734, 0.742123, 0.11272, 0.246349, 0.564288, 0.848527, 0.765535, 0.686565, 0.740133, 0.953254, 0.368639, 0.0356262, 0.251158, 0.648277, 0.362514, 0.018289, 0.241386, 0.301466, 0.309304, 0.679706, 0.284465, 0.414277, 0.0239898, 0.633669, 0.0527749, 0.0364305, 0.346725, 0.0660286, 0.621455, 0.515597, 0.108865, 0.109705, 0.00422803, 0.995905, 0.696849, 0.246561, 0.390986, 0.829757, 0.149287, 0.588579, 0.738596, 0.587955, 0.213514, 0.97684, 0.350515, 0.147165, 0.81396},
{0.427146, 0.744196, 0.0898523, 0.107241, 0.813271, 0.409271, 0.49933, 0.307661, 0.868594, 0.221884, 0.864941, 0.539947, 0.986423, 0.229564, 0.168965, 0.885224, 0.645979, 0.122937, 0.435315, 0.434884, 0.0965356, 0.275365, 0.407743, 0.523014, 0.291182, 0.356164, 0.0155561, 0.920051, 0.632354, 0.0570502, 0.417831, 0.698477, 0.973942, 0.629571, 0.493957, 0.0830678, 0.264277, 0.50623, 0.995209, 0.907785, 0.315628, 0.93116, 0.86559, 0.0428252, 0.838435, 0.808676, 0.699296, 0.363231, 0.657824, 0.369032, 0.343601, 0.422032, 0.36024, 0.817225, 0.833116, 0.385181, 0.930511, 0.075999, 0.233347, 0.552929, 0.474893, 0.340897, 0.605674, 0.334495, 0.0450011, 0.891724, 0.825682, 0.234175, 0.555096, 0.00746693, 0.166441, 0.29676, 0.00686965, 0.263041, 0.909533, 0.854564, 0.0708189, 0.591745, 0.906618, 0.555566, 0.50059, 0.606233, 0.326805, 0.372418, 0.747341, 0.381133, 0.340658, 0.89457, 0.332308, 0.302574, 0.286738, 0.385598, 0.613161, 0.894006, 0.451321, 0.166845, 0.0205466, 0.00467044, 0.0823721, 0.815007},
};

static const std::vector<float> costs = {542.074, 402.561, 994.917, 577.815, 435.856, 947.836, 533.875, 176.504, 575.971, 962.791, 575.048, 331.53, 293.31, 428.008, 748.771, 150.697, 903.95, 682.123, 248.663, 80.0958, 715.932, 714.703, 596.646, 177.01, 114.409, 635.414, 151.907, 703.087, 800.449, 563.632, 341.834, 402.186, 956.216, 159.515, 735.833, 378.006, 174.477, 929.135, 410.263, 784.826, 725.16, 991.43, 227.872, 560.991, 117.201, 903.282, 752.619, 973.294, 90.0464, 343.948, 661.126, 542.126, 815.591, 46.3283, 949.386, 923.474, 335.758, 646.084, 340.914, 385.296, 115.606, 230.803, 899.108, 519.602, 714.165, 623.012, 290.182, 865.813, 521.124, 213.783, 417.445, 867.979, 799.567, 328.604, 295.748, 729.763, 378.531, 342.683, 517.419, 628.345, 565.38, 528.22, 17.7201, 81.2801, 110.024, 268.609, 362.095, 225.255, 789.572, 156.927, 370.988, 695.838, 93.5707, 637.071, 673.654, 918.667, 162.293, 747.423, 669.268, 965.647};

static const std::vector<float> min_impressions = {0.590836, 0.881404, 0.358034, 0.104862, 0.197324, 0.190944, 0.096148, 0.381608, 0.342883, 0.779067};

//
#endif
