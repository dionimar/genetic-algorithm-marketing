#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{6.71096,2.29835,2.37195,7.35654,4.7359,1.04559,4.97523,4.87707,7.64867,1.52521},
{9.155,8.70195,6.10889,1.07912,7.04664,7.11581,4.72643,9.13071,2.33351,2.53867},
{1.0795,5.6678,9.06105,2.68272,4.80175,2.18056,1.64336,9.1597,9.80556,3.38448},
{9.5309,6.03783,6.11584,2.46539,6.87239,3.72894,4.43989,7.27796,2.20331,2.1935},
{6.99841,6.86154,8.17269,8.11853,7.19705,1.2027,5.97195,9.52575,5.89119,5.58169},
{1.07575,5.57923,7.7914,1.19043,4.94229,5.49852,2.16369,6.81715,4.03108,5.35533},
{4.64284,6.95597,9.66947,7.06132,5.38208,8.23665,5.74404,3.52397,5.97074,6.85716},
{5.81179,5.31845,2.41491,4.37734,3.56984,1.0005,9.58779,5.35081,6.99791,7.80762},
{9.07822,3.41373,3.52543,4.82102,6.1803,1.93585,9.84221,8.3996,1.81168,8.28376},
{2.89607,6.67109,8.47126,8.29864,2.78842,5.47897,8.80625,9.94875,6.20744,4.90818},
{2.87145,8.23387,6.01769,7.77509,5.0958,7.11295,5.62886,2.6925,3.66339,7.6187},
{9.46792,3.98214,6.41804,4.69827,1.34554,4.03334,5.29781,7.47505,1.42954,4.12096},
{5.59676,6.09761,4.43384,5.62713,9.5512,3.54416,8.34919,7.36843,7.58633,3.81102},
{1.98452,4.74105,7.70706,9.73729,1.46068,9.99304,2.67261,7.29761,8.66398,1.97408},
{2.38347,9.96276,3.1136,4.3088,2.12701,4.03194,6.86482,3.403,8.619,7.65368},
{6.99457,7.58434,1.26692,8.15827,2.74366,9.79834,7.27048,4.60072,5.29088,1.65177},
{5.87899,9.56187,4.88854,4.21187,4.76672,7.6949,8.35581,6.40107,7.54282,9.36929},
{9.96276,8.45091,3.27493,4.06543,4.41696,3.67993,3.69183,6.44339,4.22247,5.10176},
{9.48869,6.91585,8.71744,4.62867,4.48339,5.92103,7.82436,9.75248,1.51177,5.01143},
{8.94275,2.00875,1.32864,8.47698,2.7962,4.91369,2.30357,8.30645,1.63142,2.26345},
{3.93772,4.77904,7.59078,6.68269,8.69391,4.725,8.07729,8.87101,1.60082,8.34229},
{5.01684,6.42328,1.96701,2.05583,4.54122,7.05714,9.93917,8.18834,4.30791,2.71122},
{6.69222,7.67247,6.4404,2.32559,3.56494,8.00518,9.54149,3.1445,2.86921,6.77512},
{9.36347,9.32257,3.08184,5.4086,9.09086,8.033,6.59673,1.22669,5.59941,9.41641},
{1.87229,5.95634,3.10171,4.64945,8.8377,5.44782,9.93787,8.59336,4.94017,9.9484},
{3.24746,7.71696,6.15084,1.5299,8.9828,3.8254,8.35738,5.28,4.60374,1.50132},
{2.22449,5.04117,3.0063,9.41872,6.21836,3.39879,1.23313,7.04061,1.78482,6.09425},
{7.20556,4.90979,6.19986,2.29696,1.57937,8.67961,6.49389,5.4547,5.06061,4.48815},
{1.00286,7.31704,4.10463,6.12515,9.18862,8.26193,9.12906,8.23923,9.07931,6.91505},
{3.6558,2.01786,8.79149,2.12432,7.37909,8.74709,7.27035,2.3101,3.55036,6.56074},
{7.99245,8.2927,9.89795,1.84877,3.17682,1.45622,3.80648,1.28871,8.95573,2.34938},
{6.23407,9.22439,2.29966,6.31069,2.99532,3.78307,2.65428,3.25654,9.99387,2.03001},
{3.49634,6.83461,8.33684,6.75823,3.20282,9.79367,9.35555,2.69439,6.48301,5.42753},
{9.38281,7.43995,6.45356,9.83703,2.85675,4.99717,6.51577,7.01321,8.14138,3.38242},
{8.31707,9.56843,6.03609,8.28199,1.14825,2.94807,2.02986,8.87453,8.12766,6.89836},
{2.22588,5.91452,9.61352,9.45115,7.83082,4.94648,6.62526,3.43546,2.96202,8.87586},
{1.29776,7.86592,9.01797,9.71159,7.45116,2.98166,5.83823,6.03778,7.11249,5.01444},
{3.71356,6.04827,9.20727,9.39586,5.55121,4.97566,7.73253,5.65557,4.47744,3.79843},
{9.51992,7.28889,5.38719,1.41828,9.55392,7.17936,7.91221,9.87063,4.12971,1.20757},
{7.67259,3.23729,9.76758,7.61878,6.22342,2.05533,2.36858,2.19449,7.25861,9.75832},
{4.21128,5.42522,4.06329,5.81957,6.91542,7.68657,7.12417,6.269,9.58807,2.53196},
{2.04945,2.14488,3.67012,1.93504,4.91062,7.85424,9.35766,8.23897,9.55024,5.12173},
{8.25418,2.88724,9.90114,5.22402,1.6007,7.1646,6.72163,8.90724,7.48527,6.42418},
{6.9461,7.32524,1.67668,8.45652,1.70324,6.63165,8.35052,8.19951,7.2031,3.6547},
{5.59044,5.64382,5.51185,3.51023,6.71501,2.59793,7.35298,8.41845,4.98239,5.00142},
{6.62976,2.06807,6.02523,2.15797,5.88138,7.75894,1.29578,5.29588,8.50718,8.59828},
{5.63737,1.17223,1.21919,6.33434,4.40983,4.16394,4.8964,8.21908,3.03601,4.33085},
{1.7867,4.85027,5.67918,5.01673,2.50365,2.24351,7.29708,7.65277,5.90734,4.85096},
{9.2879,5.21195,1.14712,7.78856,6.43955,1.12765,5.80954,3.16985,8.42503,3.06},
{4.17458,4.06294,6.97273,8.12435,1.23183,5.40665,4.01188,1.2259,5.28715,8.2992}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {653.466,338.376,432.201,925.646,824.343,159.716,907.149,461.448,589.905,85.7982,767.217,687.284,717.43,864.37,653.928,904.917,425.109,355.657,897.186,452.545,110.254,338.072,332.931,727.973,935.752,696.029,643.382,620.389,694.859,997.039,297.836,200.807,103.805,576.026,682.602,107.005,520.829,201.068,983.553,198.465,905.98,261.614,206.046,829.257,821.138,317.31,446.025,24.6546,145.319,406.325};


static const std::vector<float> min_impressions = {25.5598,37.8552,32.4752,24.9636,23.963,30.5115,35.2375,35.0526,45.2051,30.985};


#endif
