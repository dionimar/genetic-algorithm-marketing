#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{6.66953,7.00216,1.33038,3.86118,8.13502,8.01599,1.39509,3.2321,2.16824,2.33901},
{2.12643,6.6836,9.85808,3.2216,8.42442,1.73159,3.89943,9.44963,2.69617,4.9056},
{2.30644,6.00274,6.06216,8.44951,8.37276,4.59048,2.42744,7.03174,2.16917,3.8008},
{6.71773,5.66221,5.87122,3.21044,4.35719,9.8641,8.85935,2.47646,7.69264,9.55912},
{8.89169,3.2586,7.71711,7.48111,2.80574,1.44812,2.99182,2.41582,9.94454,7.11614},
{1.70285,2.19234,3.61111,9.31862,2.81115,9.07255,1.841,1.01905,9.96345,8.87505},
{7.4952,8.69673,9.73753,1.13038,9.5064,4.47288,5.75335,6.67853,6.35774,8.29216},
{1.21492,4.53987,8.38822,7.487,5.01812,7.45745,4.9571,7.92928,1.03359,4.75777},
{2.86928,1.5603,4.38549,6.89897,1.45366,2.58498,3.26031,8.66367,7.85555,5.67511},
{1.79066,6.13749,1.52603,3.21359,2.68019,8.75806,4.46738,6.77633,8.45497,8.09561},
{9.46529,9.28925,3.80861,3.88448,1.8425,9.55278,6.8718,2.12014,5.98985,6.77285},
{8.48077,1.27422,8.17973,6.58017,4.29365,4.45454,1.25523,9.33289,6.33474,8.35436},
{7.08235,7.42363,2.76095,2.51583,3.09071,2.59228,6.38381,1.32797,1.2235,3.22795},
{7.15639,2.57239,5.54051,3.41653,6.79545,4.76278,6.80933,3.84107,8.27684,1.2156},
{4.69753,4.30833,8.95328,9.46586,9.49755,4.61287,6.72218,6.14233,8.49401,2.96576},
{9.98029,5.41519,2.55134,9.49656,3.50382,4.52967,4.4524,6.42694,9.3478,2.72512},
{8.3398,9.38544,6.62073,1.06907,9.08333,3.27806,4.09937,9.98249,5.42389,6.1993},
{3.84367,9.49517,9.32072,2.97201,9.95677,1.3205,3.5546,7.15164,1.13333,5.88836},
{2.05866,7.60074,8.54523,7.17759,2.45622,1.58167,2.54557,6.09358,3.58141,9.06722},
{4.75094,4.50244,7.67584,4.42118,5.77871,9.70846,6.54436,2.06745,7.21468,5.06316},
{9.71055,6.20307,5.29332,7.48051,9.08161,2.66259,9.22081,1.21504,7.2828,5.89141},
{8.12576,8.3154,9.14925,8.55043,1.19944,7.95503,9.67025,7.85539,5.32206,6.88849},
{4.16221,9.05494,2.12126,3.3264,4.13165,9.11923,5.40172,6.48789,6.42426,5.84721},
{2.40198,3.6307,8.7247,5.34728,9.19882,9.34555,3.08762,8.42495,8.02032,5.23499},
{4.45958,3.22875,2.53968,3.00818,4.86117,7.24006,5.24936,7.19195,8.72543,6.14934},
{1.68198,7.55409,3.92042,7.95176,3.77243,1.69762,2.23742,5.63388,3.65481,8.70897},
{2.01423,5.60173,3.71573,2.41272,7.26913,3.45435,7.4992,3.49263,3.54061,1.16125},
{2.32781,4.01967,5.57919,4.85189,7.30412,8.25499,3.32925,2.32412,2.91736,5.11536},
{8.16021,4.91292,7.68197,4.32407,5.3154,4.60535,5.6745,3.77866,1.8925,5.92124},
{8.52218,2.50364,5.31422,7.88663,5.56387,7.41647,7.15012,2.6997,9.53521,6.13963},
{8.47563,9.19753,8.1396,9.81824,8.65522,9.28584,1.64443,6.75083,1.37944,3.07372},
{7.1208,4.21329,1.66998,6.47918,5.14095,9.98209,3.54843,8.25928,3.58408,4.14058},
{5.3778,4.07817,7.14335,1.50595,4.9953,3.79779,5.13896,3.32708,2.60921,3.87755},
{2.11805,4.98144,2.82929,8.30872,1.07128,2.45822,8.77641,3.00808,2.46478,4.32882},
{3.48605,1.65223,9.10444,3.84313,2.09161,1.92718,7.24041,9.70218,1.27715,7.18328},
{7.62934,2.17924,4.55942,4.21606,3.06909,8.06509,4.93877,7.5992,3.86871,6.02253},
{6.64585,5.84788,9.24533,4.3864,6.33364,1.69226,7.48386,7.96974,9.93409,6.17461},
{1.3643,6.6018,9.19792,1.17487,7.84422,3.63496,4.7558,2.92599,5.77003,2.3262},
{4.84058,2.9906,2.2359,3.38193,9.22889,6.14955,4.75188,9.19517,9.56138,5.53838},
{8.98107,1.20172,8.83395,6.69077,5.81305,9.02689,9.48187,4.55341,1.93306,5.58948},
{9.73708,6.60412,3.08381,1.95433,9.60489,3.66367,8.88849,4.0937,7.42346,2.18623},
{6.45409,6.66504,1.42533,6.23106,2.34771,3.08422,7.17551,7.0707,1.04862,8.30865},
{8.67726,8.6535,5.86088,8.73247,8.07487,2.14018,3.37356,2.37594,1.67873,4.57919},
{1.19343,8.54252,7.80188,8.35474,9.38482,8.99899,9.10884,5.25043,9.28074,3.59188},
{3.74462,3.31233,6.01656,1.13745,5.22034,2.60867,6.17299,9.03506,4.57282,5.20106},
{9.80062,8.55499,9.09497,6.70659,2.91638,8.09908,6.87077,8.48663,1.98497,8.05463},
{7.32317,3.54342,8.90586,2.87821,7.17007,8.25004,6.6655,7.99455,6.32067,9.76618},
{8.04221,1.76356,1.09856,8.75739,7.92225,1.51592,8.13482,4.30571,6.38427,1.13867},
{4.90297,3.03524,9.77529,6.23701,9.40715,6.93869,5.69034,3.24073,8.35358,8.42403},
{7.94165,2.63392,6.55118,6.46477,4.58331,1.45278,3.57442,8.5477,5.19008,7.83464}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {667.281,5.65558,833.988,821.643,691.294,938.236,855.997,295.267,591.305,188.558,93.4329,922.707,733.503,894.371,742.692,922.88,714.311,728.108,277.282,688.911,249.257,991.16,794.327,16.0189,197.466,281.143,230.842,323.285,238.616,606.179,628.2,567.628,423.585,861.709,291.846,311.348,629.889,453.714,214.229,915.467,737.693,403.097,401.236,693.596,284.492,324.725,302.287,855.537,810.683,654.862};


static const std::vector<float> min_impressions = {49.3548,45.916,28.9748,29.8093,21.1012,35.324,20.1182,38.4089,34.1133,30.2517};


#endif
