#ifndef PROBLEM_H
#define PROBLEM_H
#include "syntax_tree.hpp"
#include <iostream>

#define PAPO

static const int media = 50;
static const int segments = 20;

static const std::vector<Syntax_Tree> events = {
    cons_event(0),  cons_event(1),  cons_event(2),  cons_event(3),
    cons_event(4),  cons_event(5),  cons_event(6),  cons_event(7),
    cons_event(8),  cons_event(9),  cons_event(10), cons_event(11),
    cons_event(12), cons_event(13), cons_event(14), cons_event(15),
    cons_event(16), cons_event(17), cons_event(18), cons_event(19),
    cons_event(20), cons_event(21), cons_event(22), cons_event(23),
    cons_event(24), cons_event(25), cons_event(26), cons_event(27),
    cons_event(28), cons_event(29), cons_event(30), cons_event(31),
    cons_event(32), cons_event(33), cons_event(34), cons_event(35),
    cons_event(36), cons_event(37), cons_event(38), cons_event(39),
    cons_event(40), cons_event(41), cons_event(42), cons_event(43),
    cons_event(44), cons_event(45), cons_event(46), cons_event(47),
    cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {
    cons_excl(
        cons_indep(
            cons_indep(
                cons_excl(
                    cons_excl(
                        cons_indep(
                            cons_excl(cons_indep(cons_excl(cons_incl(events[48],
                                                                     events[3]),
                                                           events[4]),
                                                 events[11]),
                                      events[18]),
                            events[9]),
                        events[0]),
                    events[1]),
                events[37]),
            events[19]),
        events[41]),
    cons_indep(
        cons_incl(
            cons_excl(
                cons_excl(
                    cons_incl(cons_incl(cons_excl(cons_indep(
                                                      cons_incl(cons_indep(
                                                                    events[12],
                                                                    events[30]),
                                                                events[11]),
                                                      events[47]),
                                                  events[34]),
                                        events[7]),
                              events[8]),
                    events[39]),
                events[42]),
            events[44]),
        events[26]),
    cons_excl(
        cons_indep(
            cons_incl(
                cons_incl(cons_indep(
                              cons_indep(
                                  cons_excl(cons_indep(
                                                cons_incl(cons_excl(events[38],
                                                                    events[30]),
                                                          events[34]),
                                                events[37]),
                                            events[19]),
                                  events[45]),
                              events[25]),
                          events[43]),
                events[8]),
            events[7]),
        events[18]),
    cons_incl(
        cons_indep(
            cons_excl(
                cons_indep(
                    cons_excl(cons_indep(
                                  cons_incl(cons_incl(cons_excl(cons_indep(
                                                                    events[32],
                                                                    events[39]),
                                                                events[44]),
                                                      events[9]),
                                            events[30]),
                                  events[31]),
                              events[46]),
                    events[3]),
                events[43]),
            events[29]),
        events[25]),
    cons_indep(
        cons_indep(
            cons_incl(
                cons_excl(
                    cons_indep(
                        cons_excl(
                            cons_incl(cons_incl(cons_excl(cons_incl(events[46],
                                                                    events[48]),
                                                          events[38]),
                                                events[33]),
                                      events[3]),
                            events[18]),
                        events[11]),
                    events[1]),
                events[24]),
            events[2]),
        events[49]),
    cons_incl(
        cons_indep(
            cons_indep(
                cons_excl(
                    cons_excl(
                        cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(
                                                                    events[29],
                                                                    events[44]),
                                                                events[32]),
                                                      events[1]),
                                            events[3]),
                                  events[49]),
                        events[21]),
                    events[38]),
                events[26]),
            events[37]),
        events[40]),
    cons_incl(
        cons_incl(
            cons_indep(
                cons_excl(
                    cons_indep(
                        cons_incl(
                            cons_indep(cons_excl(cons_incl(cons_excl(events[8],
                                                                     events[7]),
                                                           events[48]),
                                                 events[20]),
                                       events[49]),
                            events[37]),
                        events[23]),
                    events[38]),
                events[46]),
            events[3]),
        events[18]),
    cons_indep(
        cons_indep(
            cons_excl(
                cons_excl(cons_indep(
                              cons_indep(
                                  cons_indep(
                                      cons_excl(cons_excl(cons_excl(events[29],
                                                                    events[33]),
                                                          events[1]),
                                                events[35]),
                                      events[16]),
                                  events[17]),
                              events[36]),
                          events[6]),
                events[18]),
            events[44]),
        events[47]),
    cons_excl(
        cons_excl(
            cons_indep(
                cons_incl(
                    cons_excl(
                        cons_excl(
                            cons_excl(cons_incl(cons_excl(cons_incl(events[7],
                                                                    events[24]),
                                                          events[39]),
                                                events[3]),
                                      events[16]),
                            events[17]),
                        events[20]),
                    events[28]),
                events[9]),
            events[6]),
        events[31]),
    cons_excl(
        cons_incl(
            cons_indep(
                cons_excl(
                    cons_indep(
                        cons_excl(
                            cons_excl(cons_incl(cons_incl(cons_excl(events[39],
                                                                    events[33]),
                                                          events[26]),
                                                events[24]),
                                      events[40]),
                            events[38]),
                        events[42]),
                    events[16]),
                events[1]),
            events[12]),
        events[45]),
    cons_incl(
        cons_indep(
            cons_excl(
                cons_incl(cons_indep(
                              cons_excl(cons_excl(cons_excl(cons_indep(
                                                                cons_indep(
                                                                    events[28],
                                                                    events[39]),
                                                                events[38]),
                                                            events[9]),
                                                  events[44]),
                                        events[16]),
                              events[20]),
                          events[26]),
                events[37]),
            events[12]),
        events[1]),
    cons_incl(
        cons_excl(
            cons_incl(
                cons_excl(cons_excl(cons_indep(
                                        cons_indep(
                                            cons_indep(
                                                cons_excl(cons_incl(events[20],
                                                                    events[23]),
                                                          events[10]),
                                                events[30]),
                                            events[33]),
                                        events[32]),
                                    events[38]),
                          events[45]),
                events[34]),
            events[17]),
        events[27]),
    cons_indep(
        cons_excl(
            cons_incl(cons_indep(
                          cons_indep(
                              cons_indep(
                                  cons_indep(
                                      cons_excl(cons_incl(cons_incl(events[33],
                                                                    events[22]),
                                                          events[26]),
                                                events[25]),
                                      events[5]),
                                  events[29]),
                              events[19]),
                          events[23]),
                      events[42]),
            events[27]),
        events[15]),
    cons_indep(
        cons_excl(
            cons_incl(
                cons_indep(
                    cons_incl(
                        cons_excl(
                            cons_incl(cons_incl(cons_excl(cons_incl(events[3],
                                                                    events[16]),
                                                          events[48]),
                                                events[22]),
                                      events[38]),
                            events[25]),
                        events[41]),
                    events[23]),
                events[32]),
            events[9]),
        events[28]),
    cons_indep(
        cons_incl(
            cons_incl(
                cons_excl(
                    cons_indep(
                        cons_excl(
                            cons_excl(cons_excl(cons_excl(cons_excl(events[23],
                                                                    events[22]),
                                                          events[16]),
                                                events[14]),
                                      events[15]),
                            events[42]),
                        events[2]),
                    events[28]),
                events[1]),
            events[32]),
        events[49]),
    cons_incl(
        cons_incl(
            cons_incl(
                cons_indep(
                    cons_excl(
                        cons_incl(cons_indep(
                                      cons_excl(cons_incl(cons_excl(events[39],
                                                                    events[27]),
                                                          events[48]),
                                                events[41]),
                                      events[42]),
                                  events[37]),
                        events[46]),
                    events[11]),
                events[12]),
            events[26]),
        events[23]),
    cons_indep(
        cons_indep(
            cons_excl(
                cons_excl(
                    cons_excl(cons_indep(
                                  cons_excl(cons_incl(cons_incl(cons_indep(
                                                                    events[13],
                                                                    events[25]),
                                                                events[0]),
                                                      events[6]),
                                            events[18]),
                                  events[30]),
                              events[3]),
                    events[9]),
                events[2]),
            events[42]),
        events[23]),
    cons_incl(
        cons_incl(
            cons_excl(
                cons_incl(
                    cons_incl(
                        cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(
                                                                    events[28],
                                                                    events[37]),
                                                                events[42]),
                                                      events[9]),
                                            events[25]),
                                  events[44]),
                        events[8]),
                    events[12]),
                events[21]),
            events[48]),
        events[1]),
    cons_excl(
        cons_incl(
            cons_incl(
                cons_incl(
                    cons_indep(
                        cons_excl(cons_incl(cons_incl(cons_indep(
                                                          cons_incl(events[0],
                                                                    events[27]),
                                                          events[46]),
                                                      events[3]),
                                            events[28]),
                                  events[32]),
                        events[21]),
                    events[44]),
                events[5]),
            events[35]),
        events[20]),
    cons_incl(
        cons_indep(
            cons_indep(
                cons_excl(
                    cons_excl(
                        cons_excl(
                            cons_indep(cons_excl(cons_incl(cons_incl(events[2],
                                                                     events[1]),
                                                           events[30]),
                                                 events[49]),
                                       events[44]),
                            events[34]),
                        events[3]),
                    events[46]),
                events[11]),
            events[4]),
        events[29])};

static const std::vector<std::vector<float>> prob = {
    {0.0244881, 0.858464, 0.703503, 0.907468, 0.821449,  0.38337,  0.261953,
     0.839171,  0.92561,  0.76278,  0.736124, 0.461814,  0.208879, 0.273142,
     0.621664,  0.158914, 0.718797, 0.691426, 0.827824,  0.241822, 0.877346,
     0.184108,  0.306254, 0.427756, 0.371155, 0.323946,  0.682699, 0.311777,
     0.958309,  0.865111, 0.850599, 0.998223, 0.40158,   0.517639, 0.605065,
     0.923738,  0.847978, 0.423533, 0.942942, 0.0153832, 0.93256,  0.864442,
     0.587642,  0.981093, 0.892784, 0.63473,  0.896776,  0.49808,  0.501702,
     0.201927},
    {0.141835,  0.933988, 0.647184, 0.304271,  0.0375094, 0.801324, 0.00416359,
     0.725396,  0.218337, 0.85056,  0.66614,   0.299838,  0.267491, 0.656994,
     0.449469,  0.834487, 0.94982,  0.059657,  0.343946,  0.331868, 0.296076,
     0.900273,  0.385436, 0.910936, 0.107948,  0.86488,   0.262108, 0.473391,
     0.867325,  0.506737, 0.946847, 0.365811,  0.83926,   0.6738,   0.306816,
     0.214321,  0.32065,  0.47099,  0.0684835, 0.0929033, 0.43679,  0.629152,
     0.0667938, 0.554526, 0.855207, 0.851836,  0.140655,  0.120208, 0.408053,
     0.940829},
    {0.529279,  0.939104,   0.500106, 0.18987,  0.167388,  0.938727, 0.514899,
     0.0452569, 0.851357,   0.879703, 0.933642, 0.161583,  0.343809, 0.20158,
     0.341343,  0.00972841, 0.676629, 0.520673, 0.813628,  0.844076, 0.474524,
     0.280406,  0.719619,   0.306453, 0.4151,   0.664422,  0.377874, 0.0264123,
     0.373223,  0.706394,   0.869569, 0.715518, 0.263741,  0.760632, 0.906143,
     0.951362,  0.393326,   0.430353, 0.665313, 0.305837,  0.285084, 0.607559,
     0.0890394, 0.0334953,  0.361069, 0.492486, 0.0433872, 0.881533, 0.0507104,
     0.938703},
    {0.588369, 0.870392,  0.498016, 0.05231,   0.0753943, 0.137887, 0.262996,
     0.819408, 0.39381,   0.291362, 0.472203,  0.782382,  0.403688, 0.526275,
     0.14904,  0.28489,   0.181283, 0.141615,  0.765409,  0.355079, 0.130911,
     0.077829, 0.0034884, 0.968781, 0.476598,  0.900872,  0.777163, 0.660106,
     0.573163, 0.4374,    0.106343, 0.0798017, 0.539721,  0.729121, 0.958337,
     0.417504, 0.857467,  0.763113, 0.694187,  0.960963,  0.871933, 0.21117,
     0.662305, 0.3646,    0.248215, 0.463486,  0.70485,   0.418077, 0.755981,
     0.825293},
    {0.594688, 0.828065,  0.640928, 0.586052,  0.404655,  0.827424, 0.206558,
     0.669573, 0.0747037, 0.432358, 0.124801,  0.0271126, 0.515149, 0.888446,
     0.927833, 0.0902793, 0.469683, 0.85112,   0.427436,  0.807079, 0.826549,
     0.429503, 0.327657,  0.470004, 0.603272,  0.852482,  0.254416, 0.622855,
     0.42102,  0.550149,  0.854241, 0.855037,  0.285586,  0.433169, 0.39416,
     0.645091, 0.699239,  0.044845, 0.0923212, 0.049444,  0.604745, 0.717216,
     0.831789, 0.131471,  0.84642,  0.392804,  0.550049,  0.665389, 0.906758,
     0.345024},
    {0.373816,  0.251915, 0.9913,     0.157609, 0.725893,  0.168616, 0.749647,
     0.341186,  0.170677, 0.244961,   0.373029, 0.456701,  0.121389, 0.294556,
     0.812596,  0.278831, 0.00192204, 0.103311, 0.457557,  0.807673, 0.207791,
     0.734349,  0.304429, 0.815158,   0.526759, 0.0866227, 0.228836, 0.196923,
     0.174094,  0.200317, 0.102385,   0.226093, 0.777141,  0.689965, 0.665151,
     0.982731,  0.878476, 0.0669156,  0.679745, 0.80654,   0.99824,  0.718478,
     0.0779723, 0.855232, 0.497394,   0.181789, 0.926256,  0.68615,  0.913349,
     0.0719457},
    {0.83122,   0.739658, 0.229919,  0.0931576, 0.238974, 0.0570325, 0.411485,
     0.477277,  0.640969, 0.0524215, 0.818255,  0.905178, 0.476362,  0.932802,
     0.618716,  0.849789, 0.696007,  0.798873,  0.39736,  0.0175742, 0.91118,
     0.622024,  0.996768, 0.472033,  0.891414,  0.916518, 0.563526,  0.924201,
     0.923953,  0.79629,  0.979106,  0.63312,   0.276296, 0.357929,  0.149764,
     0.230161,  0.960423, 0.62403,   0.490751,  0.112578, 0.43652,   0.444976,
     0.0831672, 0.11605,  0.180114,  0.8973,    0.074701, 0.408321,  0.680373,
     0.233098},
    {0.908538, 0.0184131, 0.606079, 0.123557, 0.34882,   0.683286, 0.38213,
     0.437136, 0.708248,  0.311095, 0.860356, 0.177391,  0.901865, 0.671365,
     0.622409, 0.613783,  0.631034, 0.75177,  0.828325,  0.116104, 0.998886,
     0.786893, 0.78143,   0.310034, 0.48003,  0.955521,  0.690343, 0.107892,
     0.319299, 0.357609,  0.1519,   0.583439, 0.0201441, 0.249074, 0.230605,
     0.98674,  0.340526,  0.184021, 0.76653,  0.204379,  0.579736, 0.241743,
     0.649957, 0.299158,  0.758066, 0.668404, 0.0122501, 0.776853, 0.470032,
     0.0943229},
    {0.418625, 0.979314,  0.959878, 0.900845, 0.994953,  0.50476,   0.639444,
     0.760268, 0.450062,  0.42983,  0.221432, 0.693594,  0.917109,  0.59357,
     0.658454, 0.0186136, 0.502189, 0.811766, 0.790026,  0.793081,  0.398345,
     0.718223, 0.624953,  0.851368, 0.795356, 0.850425,  0.81315,   0.324712,
     0.174175, 0.100239,  0.178061, 0.342456, 0.131135,  0.946665,  0.999079,
     0.910019, 0.932801,  0.739392, 0.972183, 0.654462,  0.0617562, 0.636059,
     0.907558, 0.840879,  0.245082, 0.227048, 0.0134821, 0.26174,   0.123944,
     0.253408},
    {0.834799,  0.719891, 0.875655, 0.737584,  0.808044,  0.722823,   0.90925,
     0.0475909, 0.109048, 0.966421, 0.84212,   0.452707,  0.486994,   0.740828,
     0.604619,  0.178013, 0.492106, 0.0474476, 0.941653,  0.00339955, 0.64448,
     0.0670309, 0.266714, 0.174368, 0.311494,  0.0355622, 0.358391,   0.0494467,
     0.0355117, 0.348331, 0.64917,  0.867025,  0.409218,  0.0965293,  0.666605,
     0.268147,  0.290921, 0.626357, 0.39805,   0.526901,  0.590181,   0.786701,
     0.654282,  0.669952, 0.426107, 0.201855,  0.275422,  0.884802,   0.0401446,
     0.353062},
    {0.768599,    0.98948,   0.817951, 0.33988,   0.313504, 0.755372, 0.728453,
     0.0769321,   0.458415,  0.462902, 0.863441,  0.671757, 0.902137, 0.976812,
     0.205537,    0.462157,  0.982429, 0.971496,  0.917813, 0.873415, 0.647721,
     0.000641674, 0.0989762, 0.957484, 0.214862,  0.675324, 0.909438, 0.382338,
     0.688178,    0.353179,  0.493224, 0.441287,  0.996594, 0.687206, 0.289639,
     0.0446122,   0.59633,   0.113462, 0.0233887, 0.177688, 0.863265, 0.513563,
     0.949772,    0.14094,   0.871839, 0.823323,  0.993732, 0.442673, 0.368257,
     0.435113},
    {0.831193, 0.987927, 0.677499, 0.693061,  0.0396094,  0.539986,   0.962345,
     0.134359, 0.499945, 0.536486, 0.0851784, 0.339778,   0.791331,   0.589321,
     0.714829, 0.760617, 0.649488, 0.278593,  0.215096,   0.760312,   0.204103,
     0.393987, 0.288892, 0.891233, 0.78164,   0.00822759, 0.752863,   0.997804,
     0.876523, 0.482959, 0.336771, 0.301902,  0.0724986,  0.597941,   0.936212,
     0.676006, 0.026416, 0.824264, 0.712503,  0.0869932,  0.151137,   0.156035,
     0.590129, 0.87419,  0.319757, 0.766669,  0.909317,   0.00991954, 0.946852,
     0.330866},
    {0.081235, 0.21186,  0.115938,  0.935901, 0.0485317, 0.46275,  0.969033,
     0.26926,  0.32059,  0.335861,  0.844054, 0.726227,  0.794394, 0.443061,
     0.984654, 0.472563, 0.839681,  0.99298,  0.689728,  0.921555, 0.44035,
     0.645532, 0.52493,  0.668237,  0.880726, 0.988373,  0.291941, 0.243828,
     0.881607, 0.565683, 0.0406118, 0.238521, 0.41753,   0.152509, 0.0678258,
     0.379433, 0.193805, 0.0202764, 0.274325, 0.755,     0.4683,   0.609722,
     0.478226, 0.208976, 0.471461,  0.206601, 0.309976,  0.415558, 0.666256,
     0.0480784},
    {0.0554316, 0.478102, 0.463892,  0.651443, 0.919599, 0.268534,  0.0105073,
     0.139718,  0.740278, 0.509657,  0.138187, 0.130413, 0.257541,  0.290775,
     0.482543,  0.831489, 0.18931,   0.412077, 0.912513, 0.514614,  0.832788,
     0.936519,  0.295936, 0.287976,  0.613436, 0.146785, 0.360015,  0.668156,
     0.302395,  0.899037, 0.0327582, 0.380655, 0.885737, 0.310966,  0.531785,
     0.244198,  0.53371,  0.74934,   0.732788, 0.909997, 0.177855,  0.977722,
     0.946959,  0.56404,  0.516784,  0.991094, 0.839109, 0.0131408, 0.344617,
     0.990686},
    {0.881933, 0.510432, 0.70183,    0.0400924, 0.775323,  0.00456204, 0.643206,
     0.869748, 0.798567, 0.30483,    0.877341,  0.366707,  0.646138,   0.265428,
     0.85182,  0.913861, 0.711649,   0.671115,  0.18038,   0.167374,   0.721306,
     0.197068, 0.86243,  0.639179,   0.529279,  0.289632,  0.669262,   0.888658,
     0.835954, 0.523627, 0.410063,   0.931057,  0.809625,  0.106003,   0.971931,
     0.250894, 0.736834, 0.00617687, 0.608885,  0.0673899, 0.591887,   0.204418,
     0.381022, 0.413419, 0.282168,   0.899837,  0.256086,  0.233321,   0.44216,
     0.740947},
    {0.195238, 0.920291, 0.673791, 0.909984, 0.982115, 0.92365,   0.501907,
     0.474397, 0.19749,  0.796334, 0.121055, 0.335536, 0.0387367, 0.566292,
     0.795598, 0.445646, 0.51563,  0.446862, 0.237583, 0.487786,  0.908604,
     0.352801, 0.71482,  0.534828, 0.463182, 0.976547, 0.607009,  0.335524,
     0.871879, 0.716468, 0.115695, 0.800645, 0.732277, 0.0744396, 0.348431,
     0.52663,  0.501492, 0.964675, 0.874256, 0.202907, 0.152866,  0.288099,
     0.44229,  0.908284, 0.372626, 0.402331, 0.972696, 0.855589,  0.675245,
     0.713958},
    {0.867713,  0.451685,  0.908028,  0.918029, 0.962058,  0.890333,  0.100373,
     0.3752,    0.0635956, 0.921807,  0.142591, 0.220622,  0.924569,  0.828333,
     0.611838,  0.541145,  0.0049819, 0.860776, 0.362089,  0.509445,  0.612692,
     0.0527647, 0.798778,  0.513022,  0.642776, 0.551302,  0.486444,  0.12259,
     0.849157,  0.988741,  0.29939,   0.265521, 0.80023,   0.995006,  0.408972,
     0.703859,  0.660985,  0.271814,  0.848307, 0.0287526, 0.0458109, 0.0872722,
     0.731231,  0.443716,  0.528649,  0.53975,  0.157015,  0.377698,  0.463454,
     0.313506},
    {0.488569,  0.876498, 0.940249, 0.339398,  0.804361,  0.588862,  0.919259,
     0.153533,  0.589007, 0.139693, 0.674142,  0.0658969, 0.274434,  0.681327,
     0.679647,  0.726148, 0.661853, 0.0626446, 0.797871,  0.394316,  0.792414,
     0.173355,  0.814132, 0.921759, 0.113996,  0.949826,  0.539469,  0.0858784,
     0.277945,  0.568239, 0.646527, 0.928101,  0.221973,  0.411353,  0.155049,
     0.0498295, 0.564789, 0.387324, 0.267311,  0.908496,  0.518073,  0.461475,
     0.723783,  0.263713, 0.534706, 0.778056,  0.0131738, 0.0896608, 0.407511,
     0.681048},
    {0.830911, 0.967528,  0.753581,  0.122693, 0.34843,   0.383182, 0.722885,
     0.557921, 0.131839,  0.704282,  0.49544,  0.776912,  0.609976, 0.185352,
     0.886634, 0.571366,  0.0094786, 0.51379,  0.123805,  0.628737, 0.651304,
     0.495126, 0.0468483, 0.692586,  0.207626, 0.0323966, 0.575265, 0.920552,
     0.894098, 0.31861,   0.0192465, 0.268131, 0.836049,  0.379112, 0.448323,
     0.299606, 0.519194,  0.980117,  0.105683, 0.445267,  0.998143, 0.972766,
     0.505084, 0.366239,  0.454567,  0.595508, 0.740866,  0.46542,  0.235194,
     0.243832},
    {0.771782, 0.815488, 0.0396521, 0.359505, 0.803049, 0.479861, 0.945514,
     0.352164, 0.849194, 0.0284715, 0.765956, 0.981534, 0.165111, 0.00851886,
     0.909119, 0.666407, 0.727322,  0.600239, 0.544302, 0.730285, 0.59129,
     0.906387, 0.483307, 0.978549,  0.025578, 0.717665, 0.116887, 0.328537,
     0.722794, 0.758558, 0.426366,  0.432957, 0.463911, 0.266988, 0.626237,
     0.653799, 0.520823, 0.876496,  0.609363, 0.832151, 0.722342, 0.357607,
     0.780685, 0.324509, 0.212589,  0.530026, 0.562271, 0.750439, 0.977776,
     0.378603},
};

static const std::vector<float> costs = {
    16.174,  173.266, 284.59,  386.639, 334.402, 689.885, 966.409, 470.989,
    275.784, 948.153, 42.5342, 969.294, 761.51,  116.785, 891.373, 212.449,
    906.426, 137.614, 182.353, 732.189, 34.6987, 138.081, 318.634, 752.7,
    799.189, 936.985, 817.307, 689.665, 773.333, 674.806, 552.372, 317.38,
    667.927, 599.369, 1.67655, 490.24,  314.656, 369.78,  823.183, 191.82,
    491.017, 799.15,  186.615, 662.689, 561.071, 172.341, 831.027, 879.559,
    541.095, 781.186};

static const std::vector<float> min_impressions = {
    0.241723, 0.32598,  0.0799045, 0.683339, 0.364901, 0.708097, 0.0280686,
    0.014949, 0.173966, 0.0672184, 0.943732, 0.992294, 0.23878,  0.977832,
    0.110481, 0.129096, 0.924089,  0.826446, 0.605454, 0.488792};

//
#endif
