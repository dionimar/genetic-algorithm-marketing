#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{3.87482,8.72499,6.47632,6.69442,9.96991,6.97226,9.3677,6.14276,7.71609,2.02497,5.12334,5.32862,2.45054,1.02683,3.17694,1.38088,4.76067,8.59447,8.71076,6.51591},
{8.07955,6.99682,8.24095,5.48113,3.03233,7.67032,7.39569,6.86818,6.5842,8.16922,1.10662,7.71762,7.31778,2.17086,7.86913,2.16273,4.4769,8.74276,9.83081,9.30357},
{5.9038,6.5995,5.35999,9.86761,9.59548,8.3423,7.13807,7.0011,4.05704,2.51726,9.64728,4.48511,2.51549,7.72565,2.15472,7.99892,4.45426,7.10282,3.9569,6.29535},
{2.99433,4.57817,5.133,2.09866,9.81923,3.96998,3.8879,2.62575,8.21065,1.22852,1.65801,4.74948,5.04761,9.96216,7.19952,9.60231,4.59406,6.71965,5.59871,5.20695},
{5.64947,8.99409,8.4666,4.48709,1.61879,1.62357,4.67733,7.40701,5.58374,8.04704,6.62262,3.54453,2.52503,2.5707,5.05145,2.59626,8.1498,2.43835,7.70155,5.47316},
{8.79014,7.11305,8.74179,1.09151,4.53155,7.17525,5.8217,4.38912,2.04235,2.57296,8.8461,8.03302,8.04797,4.38638,2.52277,9.05384,2.6259,1.03769,5.37965,7.18262},
{8.65839,1.70258,9.47185,3.47787,3.8752,3.50216,3.38074,4.312,6.78376,4.42964,4.54691,3.94419,9.98036,3.04694,6.68235,5.05607,7.80701,3.80565,4.98521,1.43468},
{6.84705,9.11665,5.73149,6.48578,5.28184,3.67062,1.35565,5.9536,8.2449,1.51195,8.6827,9.87877,3.33848,5.92646,7.17233,2.99054,3.20592,3.93471,3.04528,6.58156},
{8.97155,5.56995,7.12972,6.64408,9.08816,2.20127,5.65101,6.0828,3.36665,3.31096,4.9006,6.93425,8.22944,4.61593,7.02887,6.5234,8.9004,2.74608,4.4746,9.53944},
{1.26488,8.87903,3.39358,8.90375,4.111,3.99638,7.99363,1.25361,7.97741,2.09812,3.33625,1.23558,7.63695,8.89473,3.06528,5.18452,8.50998,4.20489,6.17572,7.58331},
{7.86591,4.78311,9.94809,9.03878,6.68037,4.89805,2.96896,4.91335,6.04154,6.63562,8.07258,1.54417,6.99147,9.33105,9.31597,4.05515,6.37534,5.32323,2.55937,1.8805},
{3.1132,2.6197,1.89729,8.8996,4.75995,6.43443,8.87953,5.95019,7.53205,6.23996,5.77066,5.17271,5.47745,5.26044,2.57331,8.28499,3.88168,8.38035,1.99773,9.40761},
{9.4993,1.913,8.63593,9.99518,1.73297,9.32967,3.56409,9.65952,6.34259,7.69008,5.29506,8.49551,5.19938,3.16603,3.51335,6.60963,4.66401,6.52351,2.55137,1.51533},
{1.02138,1.32682,6.99199,2.13466,7.48244,2.12351,2.70988,4.73306,4.49537,2.16838,2.01201,6.76662,4.84313,2.42987,5.27626,6.19678,5.99112,9.36765,9.43773,6.95273},
{8.2908,6.1705,2.67844,4.71304,9.61574,2.23511,8.88707,1.49494,8.20395,3.57268,8.69573,1.29057,9.63304,2.22113,8.59027,2.63405,6.35971,9.62684,8.49395,8.5974},
{9.47869,7.8763,1.53052,3.91128,4.71332,2.68584,6.74891,8.93732,8.5109,7.52802,6.53865,3.81612,2.69609,3.00409,3.08687,1.98323,6.83009,6.90852,4.57257,9.39075},
{9.35311,7.43886,9.35794,4.3171,6.61633,5.30662,2.09646,1.59082,8.98445,4.96832,4.72702,4.64646,6.57055,4.87814,7.82649,1.13586,3.31205,7.97795,6.56185,8.37374},
{7.11162,5.75434,3.0888,8.97925,5.54458,6.61692,4.6354,6.17648,5.38377,9.10017,1.09343,3.44012,1.79741,3.75531,8.55173,9.07567,7.73384,6.69382,4.90393,3.74782},
{6.8244,8.28175,8.28193,7.49584,8.05239,1.26892,8.91904,3.29003,4.19906,2.10205,1.6333,1.58968,2.46633,7.01182,5.9956,9.28811,2.21052,5.63802,2.01492,3.88762},
{6.4189,5.38972,6.82698,6.92544,8.67706,7.50085,7.23337,4.54678,4.62932,8.52685,4.63438,3.21052,7.39014,5.41075,7.42572,2.32112,3.60124,8.7629,8.8186,4.74081},
{8.69142,6.44105,1.38606,1.76272,3.66128,2.04755,3.21351,3.03255,3.10819,9.65031,6.32237,3.26389,8.17075,2.06438,8.69088,9.07322,7.10851,2.61246,3.82063,7.15985},
{2.45558,6.92469,7.49397,9.77539,8.46174,6.81275,9.06926,8.90609,4.3573,6.89353,9.76111,8.26325,6.65462,7.09107,9.58383,1.3624,1.21026,7.12916,2.27959,2.44189},
{1.08062,6.59995,7.87561,9.30849,9.99938,2.56173,8.26221,7.37584,3.65245,8.01657,8.0974,3.35139,1.17358,3.67642,7.68841,6.24359,3.025,7.42258,9.95107,2.75036},
{9.40929,1.18141,9.02505,2.90117,6.36104,3.66055,4.06231,4.36182,6.65157,2.98168,4.93692,4.45704,8.16943,5.36407,8.30225,3.05521,2.21562,2.38325,1.61483,6.60279},
{6.30817,2.68381,1.11294,6.25828,9.55303,6.34558,3.23736,6.49875,4.89058,5.70001,4.52955,1.24286,4.0799,5.00622,4.01474,6.52277,6.27678,2.86117,2.69355,2.61092},
{1.21118,4.22414,5.06346,5.43597,5.59545,6.99155,7.17217,7.98206,5.95082,4.65087,9.53699,9.26567,8.10204,8.77846,8.57692,3.62088,1.52091,7.00342,9.94035,8.06343},
{2.60101,7.8504,2.41872,3.97842,8.03717,7.23105,6.61025,2.10873,3.55733,3.21727,2.06526,8.23535,2.9142,6.3094,4.83259,6.0367,9.08734,4.96486,2.87514,7.68229},
{8.1771,3.15007,8.83575,7.44396,9.50091,1.96588,1.06573,9.35267,4.25277,1.49618,9.04484,2.01494,3.71978,3.61745,7.39185,9.37755,2.57253,1.37132,6.85564,7.60536},
{6.61579,6.13422,2.21974,5.29329,7.2232,8.69398,6.55112,9.58716,9.70832,2.41324,4.14674,6.91748,3.92851,2.37745,5.4839,4.33645,4.02854,2.94011,8.92446,1.64395},
{7.71143,3.16926,5.54013,6.77879,2.2816,3.61895,6.79104,6.10674,4.83699,3.93491,3.63774,5.95345,8.91615,8.09418,3.88619,7.31333,4.74694,6.74463,1.48285,2.98548},
{9.82857,8.39141,5.70685,9.05182,1.38306,5.25059,2.14167,3.11412,2.3057,4.46341,3.53212,4.3712,4.99178,5.41253,4.85536,6.87375,9.0114,4.11735,8.40899,3.69434},
{9.49073,2.57594,3.85317,9.24398,5.31275,1.7495,9.98208,3.17515,7.01427,3.66883,2.31783,6.58578,1.60949,6.93295,8.72186,9.70813,8.98266,7.50032,7.73073,7.49152},
{8.09478,9.71351,8.20156,3.82099,2.5349,5.15599,8.25549,5.49378,4.35671,1.45455,8.54909,2.51352,1.1609,8.91607,1.86247,4.70904,2.48636,9.6311,6.34333,1.77069},
{3.43419,7.81952,9.00315,2.56501,2.37722,4.54506,8.63182,8.03165,7.51832,1.97487,6.44254,2.42294,8.55468,1.88836,6.76182,5.89257,8.67707,3.789,2.399,1.85474},
{9.30791,7.91273,4.13195,1.12161,5.73583,3.73119,9.53997,4.66258,3.9241,4.21053,1.9648,4.63481,2.68021,6.35358,3.95879,4.50144,4.71845,3.32892,5.52316,2.18261},
{4.62266,7.61249,7.75799,5.89194,4.4825,1.00437,3.84655,3.18016,6.59487,5.02679,8.19334,4.41487,5.18632,1.69723,5.22053,4.85839,1.51776,9.89226,3.34528,3.46791},
{1.34158,3.06291,5.40838,4.52324,1.08439,5.76516,2.66378,8.72566,3.60354,9.00223,6.79375,5.53023,5.75985,1.22439,9.44529,5.04067,1.55803,7.02027,1.33541,3.02514},
{4.92999,6.45572,3.24378,1.34275,8.10789,2.2048,1.78997,9.43087,1.17501,3.35195,2.22545,5.91237,1.84645,7.64908,6.1929,5.04525,2.60488,5.96076,3.95407,3.23836},
{9.76611,8.87534,8.82701,8.47431,9.62086,4.19622,2.64637,6.14752,8.26087,6.66789,2.35859,8.78174,2.36707,2.21962,4.40067,6.10134,3.70079,4.97783,6.21601,7.8189},
{3.10767,8.23721,7.31316,2.11787,6.17038,3.36307,4.6138,5.09516,3.32445,3.76607,2.17515,3.17519,7.98445,5.11975,7.45793,1.60939,6.76549,9.42787,6.6352,6.95958},
{4.76212,9.65326,9.64046,6.82428,7.37466,1.66933,6.01738,7.52699,3.14314,7.80815,9.98846,3.68948,7.03286,3.20254,9.48785,5.75583,4.2384,1.79133,4.36432,5.59395},
{5.83433,9.47639,3.43124,8.07373,2.8278,4.81656,7.9905,3.6939,1.47315,5.25995,8.19112,2.13357,4.71274,2.74872,6.15902,8.80577,5.59525,1.86845,3.50851,2.75055},
{9.78014,7.0062,7.80266,5.24658,8.98544,6.91559,3.44817,3.14533,4.68685,2.46536,9.03403,2.62475,6.17652,3.37859,9.60703,6.19423,3.20976,2.04061,4.57951,8.12954},
{3.95986,8.91386,4.74768,9.43431,8.70062,2.33345,5.06975,3.03678,5.53576,5.28876,2.14855,2.34361,9.94141,3.91917,8.33893,7.1846,9.7884,6.87888,5.1086,4.56164},
{9.15941,2.42237,7.72012,9.62025,3.99905,9.66326,2.8583,9.07745,6.08358,8.48349,3.28733,4.59296,1.59902,6.81917,4.31592,4.45901,3.47823,5.04842,1.22497,6.99738},
{6.13933,8.8272,2.44018,2.44931,5.34991,9.45749,2.75881,1.69704,3.63819,6.16631,5.10701,3.66845,1.73227,6.10854,8.52262,2.02962,5.29087,6.50863,5.22502,5.14671},
{1.46831,4.41661,3.01735,3.80197,8.82419,6.436,9.90636,3.94308,7.97828,7.90593,5.26591,5.38933,3.75495,6.37977,1.53644,5.65012,1.6268,3.71248,9.29942,8.27627},
{8.8607,5.21145,5.49234,7.23401,4.51649,5.07107,4.57264,7.89681,9.77893,1.53693,9.3145,6.68448,4.43476,8.56195,7.56535,3.89552,4.43339,8.97707,9.01913,4.09704},
{9.86777,9.04033,6.86835,2.67105,6.79243,6.12576,8.355,3.83279,2.67949,4.44352,8.4896,8.03537,4.30605,5.67531,4.6931,7.5889,4.72217,6.21873,6.37115,7.08242},
{8.09644,4.96047,3.8053,1.55598,3.93566,8.20516,2.83716,7.40847,3.8653,8.33072,7.77623,3.06576,2.66247,4.29912,6.97488,4.4383,9.57843,9.1054,8.75267,2.15814}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {682.741,883.828,635.176,92.0026,810.155,970.188,464.667,409.867,872.037,753.645,245.037,931.519,900.374,414.067,786.047,337.216,459.707,613.336,816.259,401.763,959.683,485.634,350.382,540.082,274.98,717.373,717.007,617.764,86.1012,642.839,423.455,781.274,955.839,795.604,758.446,953.538,88.9547,214.795,408.974,99.4437,439.237,434.008,198.693,917.595,344.096,630.042,891.687,665.107,596.187,845.882};


static const std::vector<float> min_impressions = {27.7724,29.7945,33.9274,31.4716,22.0467,35.0461,38.9867,27.546,42.9504,34.0741,48.8299,26.1285,21.6428,31.2781,24.4567,22.3789,46.3425,40.753,26.2355,34.7637};


#endif
