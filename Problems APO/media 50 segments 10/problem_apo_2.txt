#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{1.05659,5.47093,5.6553,2.44292,7.26569,8.60216,1.86123,6.93214,9.05577,5.82283},
{2.86603,1.30455,8.4616,3.06153,3.95787,6.62771,1.08124,6.27255,5.50099,1.46787},
{8.75204,8.90557,6.09178,4.43688,2.85222,9.11913,6.48925,8.87532,9.40888,3.72017},
{1.89568,1.59019,5.47464,5.92398,2.63972,8.79209,1.62811,9.17887,3.40203,4.52002},
{7.53346,1.03867,6.03531,2.28927,6.28504,7.84942,1.97851,3.32064,4.49547,7.81111},
{3.43695,8.77124,8.52961,6.99958,4.8867,7.88639,7.23545,5.32101,2.23616,4.99955},
{4.32319,1.30032,3.39443,1.05995,3.50952,5.62304,7.38915,8.00193,8.26556,6.29089},
{4.386,4.31979,1.25369,7.46401,3.49516,5.4915,7.81109,2.68785,9.31118,4.33522},
{4.26387,7.71385,9.83937,9.83243,7.07788,3.89934,3.88276,3.02437,5.25653,7.48065},
{2.16962,3.68298,8.11365,2.11686,5.15479,5.63354,3.33431,3.25628,5.15513,5.79247},
{3.08601,2.4523,8.05037,9.87153,9.08068,1.82982,2.87395,3.42573,8.78022,1.24754},
{9.09975,5.83644,3.45473,1.77502,6.87212,8.0814,8.69392,4.78929,3.57062,9.21611},
{4.45729,3.86186,8.39674,4.40776,1.04983,9.2365,2.81941,7.62518,2.02964,3.67515},
{6.1974,5.78805,3.48339,8.29401,9.14003,6.707,4.63125,1.68614,3.94831,1.29273},
{2.08501,1.51094,4.54481,7.21345,5.52248,4.17496,2.87853,2.82953,7.28703,4.15342},
{5.21417,8.12831,8.27588,7.83249,5.78222,9.69287,6.98759,7.86427,3.5384,4.062},
{2.54564,1.29134,7.68354,8.86874,7.08737,1.77003,1.59919,3.60799,3.73072,9.4083},
{8.87315,9.90178,9.15527,6.47945,6.9278,5.395,3.82412,8.17053,7.22206,3.09461},
{6.75663,8.27444,5.37113,1.47463,6.70517,8.5558,5.36519,9.86774,6.01821,7.97557},
{3.03668,3.85021,5.26485,3.46633,1.19225,2.50882,1.56467,4.31878,6.72987,2.0032},
{8.5353,1.1372,5.69567,5.57093,3.18823,2.91846,2.47472,2.61735,9.0317,2.08937},
{2.45179,3.20386,2.38242,8.96327,6.74897,5.44543,3.04172,4.23144,2.54807,4.78371},
{9.20067,2.96871,4.87555,5.25422,6.97212,1.43318,9.45948,9.02864,6.0697,4.18091},
{4.24995,7.80115,6.68156,2.90421,1.05468,9.56533,2.54756,1.31348,9.0608,7.95535},
{5.06828,7.19428,5.77299,1.7096,3.19654,1.6719,2.62205,2.43849,6.02309,4.67452},
{7.48722,4.33036,7.33743,3.22829,8.31987,6.73512,9.08078,7.35917,2.1892,3.40968},
{9.81969,9.19286,6.24566,7.28193,6.96995,7.62813,3.69495,9.7969,9.05737,7.5071},
{4.98524,5.25939,3.69361,3.41125,8.69248,8.48364,7.12015,2.70692,7.52991,4.93551},
{6.73074,3.65004,7.79394,5.81138,8.98268,7.33267,7.79194,2.68902,2.94257,1.24615},
{3.90829,9.46719,8.21794,2.94494,5.76859,9.9036,2.60209,3.54976,1.49342,7.86383},
{2.64021,4.12341,8.85267,4.72871,1.50843,3.61989,9.72128,1.38879,3.90894,2.49057},
{7.15598,8.55492,1.9196,7.97527,4.58948,5.69636,7.3285,1.52288,1.26929,9.00936},
{7.55161,8.05336,7.64589,4.57428,8.57976,5.48044,2.31596,9.82668,6.25306,8.55223},
{8.81362,9.82799,5.88072,5.58263,3.00254,6.5991,5.99542,7.50914,8.89829,3.67614},
{9.799,5.09657,2.48227,4.75855,9.0328,9.80867,5.02609,3.87718,6.0056,6.80591},
{9.49143,9.16521,7.0287,2.0283,7.31423,7.11962,8.67889,2.40229,1.24797,7.46939},
{3.53091,4.8238,6.66537,5.121,1.97322,7.29652,5.23147,5.54257,4.95459,6.62755},
{5.05623,4.30456,5.31522,5.21902,4.73517,3.94273,4.39263,2.98677,7.72342,9.01813},
{4.94541,7.21408,8.94586,7.78129,7.45815,6.86118,1.53684,7.94893,4.89907,2.5675},
{7.21324,3.28063,5.09043,4.66585,3.13728,3.11227,4.92967,9.60761,9.05583,2.52526},
{7.27478,2.17542,4.29281,9.97928,5.56926,2.57421,4.13659,5.84136,1.82783,9.75575},
{2.45288,5.13001,3.3637,3.57879,1.36922,5.58227,9.04122,3.06227,9.30477,2.23209},
{9.14383,5.12723,9.80343,2.10659,1.20249,5.13781,6.4436,4.86809,9.34702,9.54136},
{7.33463,6.13857,8.01598,8.60755,7.79197,4.55905,5.73705,2.24308,9.24676,2.57568},
{4.66171,6.18173,4.77238,9.9446,3.6282,1.34885,6.09409,4.05198,6.43878,9.10513},
{6.08676,2.11127,3.14463,8.34306,3.64557,7.14292,2.59008,9.70374,6.44684,2.64931},
{7.2287,9.42772,3.4184,7.2781,2.12533,9.85863,6.72159,9.21517,2.55569,1.83198},
{7.9047,4.69217,3.88269,2.79026,8.57992,4.97211,8.8604,3.51811,4.70602,9.69395},
{3.65011,8.85093,3.82007,4.68191,1.01805,6.51841,2.35553,5.52798,6.83353,6.77946},
{1.02189,3.40276,5.56591,9.32317,4.22351,7.46842,9.87976,3.97235,2.53357,5.02552}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {297.762,934.546,919.648,362.074,213.188,115.75,813.179,513.18,557.959,153.561,484.121,111.924,713.235,794.711,785.333,331.071,269.285,334.105,476.233,979.941,841.801,551.506,662.875,370.71,132.683,312.093,623.021,284.327,935.825,769.403,766.446,286.916,389.518,451.154,282.818,741.171,745.949,775.661,591.877,731.155,9.26709,541.953,532.311,889.248,309.45,876.45,881.644,827.628,279.615,96.1065};


static const std::vector<float> min_impressions = {24.7656,40.5538,28.3748,36.9628,43.6001,48.2602,37.7579,39.5036,30.174,42.8253};


#endif
