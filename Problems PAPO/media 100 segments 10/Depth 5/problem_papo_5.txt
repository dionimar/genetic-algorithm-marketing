#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(events[75], events[82]),events[87]),events[33]),events[12]),events[11]),cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[97], events[52]),events[37]),events[44]),events[25]),events[47]),cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(events[86], events[39]),events[48]),events[64]),events[46]),events[19]),cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(events[19], events[53]),events[85]),events[31]),events[73]),events[27]),cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(events[16], events[48]),events[62]),events[36]),events[29]),events[37]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[93], events[58]),events[53]),events[56]),events[16]),events[8]),cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(events[92], events[76]),events[35]),events[82]),events[25]),events[45]),cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(events[71], events[19]),events[59]),events[69]),events[46]),events[39]),cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(events[44], events[66]),events[28]),events[61]),events[74]),events[56]),cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(events[30], events[89]),events[23]),events[78]),events[12]),events[88])};


static const std::vector< std::vector<float> > prob = {{0.531145, 0.93158, 0.610247, 0.154114, 0.908051, 0.598094, 0.322706, 0.152656, 0.762204, 0.0419029, 0.831736, 0.460377, 0.64289, 0.775552, 0.825895, 0.598764, 0.101969, 0.0828271, 0.546254, 0.64827, 0.17543, 0.123155, 0.213604, 0.331512, 0.509084, 0.27272, 0.988037, 0.2079, 0.10215, 0.613258, 0.309776, 0.976498, 0.735017, 0.22245, 0.917714, 0.313203, 0.705451, 0.613479, 0.893204, 0.66733, 0.0607074, 0.986013, 0.900509, 0.603311, 0.00594878, 0.0107056, 0.304116, 0.0949214, 0.876631, 0.873443, 0.732581, 0.705681, 0.975395, 0.8917, 0.33043, 0.999664, 0.860115, 0.99352, 0.632797, 0.738916, 0.421662, 0.686515, 0.8165, 0.241925, 0.900062, 0.691222, 0.158941, 0.719424, 0.890648, 0.822357, 0.719927, 0.874786, 0.501083, 0.777081, 0.978963, 0.499668, 0.0913621, 0.393129, 0.800925, 0.439392, 0.544759, 0.601286, 0.213777, 0.979645, 0.268599, 0.52619, 0.0739949, 0.810036, 0.841392, 0.774592, 0.763005, 0.699138, 0.795174, 0.730297, 0.0101811, 0.426192, 0.519782, 0.455419, 0.544017, 0.428506},
{0.21724, 0.868447, 0.4461, 0.901217, 0.810298, 0.69901, 0.378926, 0.539819, 0.0638976, 0.727901, 0.237807, 0.362021, 0.0863347, 0.345552, 0.81557, 0.872971, 0.44417, 0.486956, 0.874715, 0.502564, 0.741736, 0.388574, 0.465055, 0.0585804, 0.927362, 0.956816, 0.369948, 0.811375, 0.528347, 0.629346, 0.0912665, 0.107508, 0.127557, 0.863248, 0.114717, 0.308447, 0.911476, 0.565513, 0.303427, 0.297819, 0.969051, 0.525709, 0.534816, 0.925848, 0.703708, 0.904832, 0.367672, 0.648431, 0.66232, 0.196791, 0.551327, 0.883808, 0.901137, 0.540774, 0.757685, 0.732814, 0.539705, 0.10772, 0.661079, 0.239865, 0.105815, 0.775088, 0.134156, 0.0819455, 0.309539, 0.422938, 0.819099, 0.954838, 0.383067, 0.433677, 0.5039, 0.686502, 0.487977, 0.43705, 0.135724, 0.95483, 0.311937, 0.268124, 0.250695, 0.151758, 0.670554, 0.213483, 0.32199, 0.669896, 0.293483, 0.929643, 0.80247, 0.634147, 0.165192, 0.353214, 0.353671, 0.548597, 0.113877, 0.851347, 0.397923, 0.213123, 0.0652201, 0.806605, 0.302172, 0.373669},
{0.900344, 0.597092, 0.929723, 0.909689, 0.905501, 0.456133, 0.601611, 0.436663, 0.815771, 0.799447, 0.702845, 0.118304, 0.693231, 0.562984, 0.415878, 0.297477, 0.185309, 0.88096, 0.402918, 0.0605989, 0.681924, 0.123442, 0.0643191, 0.0453459, 0.507326, 0.934171, 0.638989, 0.931286, 0.251674, 0.678786, 0.347139, 0.73913, 0.182721, 0.00406743, 0.760136, 0.289216, 0.153082, 0.377539, 0.70354, 0.322565, 0.483567, 0.573566, 0.0775772, 0.273687, 0.879163, 0.698946, 0.37741, 0.83599, 0.296553, 0.226456, 0.587503, 0.044319, 0.364123, 0.413261, 0.967895, 0.61831, 0.854077, 0.308123, 0.714753, 0.726862, 0.123195, 0.296081, 0.202458, 0.31139, 0.518149, 0.282012, 0.170132, 0.417647, 0.0494078, 0.812231, 0.733174, 0.498474, 0.64262, 0.831728, 0.274853, 0.714957, 0.579497, 0.452794, 0.911793, 0.0943287, 0.704355, 0.49327, 0.396832, 0.348226, 0.341467, 0.146441, 0.201865, 0.81534, 0.850915, 0.297939, 0.136184, 0.783002, 0.962438, 0.419875, 0.440379, 0.0957888, 0.584467, 0.225071, 0.133393, 0.924104},
{0.36592, 0.803689, 0.214821, 0.908088, 0.343263, 0.642868, 0.928379, 0.219038, 0.282695, 0.519626, 0.378768, 0.736055, 0.641174, 0.408454, 0.294156, 0.577375, 0.294176, 0.0213722, 0.936363, 0.322496, 0.889578, 0.0199905, 0.660056, 0.935995, 0.301104, 0.798219, 0.629481, 0.891984, 0.0404211, 0.784293, 0.440789, 0.833054, 0.96595, 0.699289, 0.798277, 0.810956, 0.271499, 0.88119, 0.71119, 0.224345, 0.464224, 0.838087, 0.705069, 0.589682, 0.175463, 0.112161, 0.433189, 0.345183, 0.197507, 0.85103, 0.796434, 0.936901, 0.445297, 0.635449, 0.696238, 0.375613, 0.33754, 0.53293, 0.864244, 0.482657, 0.33367, 0.839836, 0.24829, 0.606977, 0.943013, 0.375187, 0.331366, 0.823939, 0.512317, 0.25488, 0.945768, 0.0362046, 0.362711, 0.295275, 0.260781, 0.593837, 0.319495, 0.176522, 0.686198, 0.376922, 0.713978, 0.763676, 0.773728, 0.833589, 0.138314, 0.329596, 0.345212, 0.078175, 0.0408135, 0.181507, 0.613838, 0.544369, 0.178978, 0.267729, 0.601456, 0.0103857, 0.64881, 0.0270778, 0.66536, 0.366204},
{0.274957, 0.355212, 0.0182867, 0.489471, 0.142141, 0.0300052, 0.309592, 0.0342842, 0.593601, 0.208823, 0.137297, 0.806496, 0.469881, 0.246782, 0.564341, 0.557021, 0.565746, 0.689955, 0.989713, 0.216577, 0.866996, 0.410511, 0.382282, 0.358742, 0.684156, 0.294381, 0.212905, 0.349903, 0.263997, 0.199719, 0.876525, 0.265518, 0.26519, 0.921486, 0.302341, 0.928454, 0.579645, 0.643347, 0.655621, 0.807211, 0.465759, 0.704185, 0.301817, 0.733583, 0.659214, 0.819976, 0.66527, 0.300781, 0.36677, 0.678506, 0.777244, 0.20229, 0.398002, 0.215791, 0.191799, 0.747195, 0.671548, 0.390802, 0.82403, 0.633841, 0.742962, 0.595189, 0.0554996, 0.417299, 0.426443, 0.599338, 0.589977, 0.42561, 0.718484, 0.926173, 0.266924, 0.0157332, 0.500249, 0.845404, 0.166049, 0.747382, 0.0461538, 0.653474, 0.101867, 0.429298, 0.843888, 0.0950691, 0.438431, 0.68375, 0.340958, 0.961116, 0.057805, 0.472322, 0.681015, 0.853795, 0.00499133, 0.558031, 0.88342, 0.180451, 0.660924, 0.936135, 0.307178, 0.0877788, 0.391216, 0.538386},
{0.566457, 0.00209292, 0.849505, 0.357922, 0.119829, 0.51817, 0.461818, 0.121535, 0.267084, 0.572404, 0.439406, 0.346405, 0.587244, 0.684725, 0.64896, 0.665943, 0.333542, 0.29337, 0.991182, 0.560919, 0.452775, 0.56158, 0.619319, 0.0686005, 0.239074, 0.151876, 0.901762, 0.341367, 0.838508, 0.489169, 0.927805, 0.59471, 0.913261, 0.520552, 0.131282, 0.826567, 0.721727, 0.225191, 0.188248, 0.358254, 0.822508, 0.838611, 0.4974, 0.654698, 0.41504, 0.678426, 0.630448, 0.946464, 0.052739, 0.385625, 0.124067, 0.127851, 0.81599, 0.869493, 0.744072, 0.673632, 0.251595, 0.442358, 0.0811396, 0.947021, 0.395731, 0.416804, 0.492278, 0.0188572, 0.279202, 0.524072, 0.0722663, 0.663772, 0.707813, 0.233442, 0.215236, 0.0137467, 0.56247, 0.639006, 0.830052, 0.356526, 0.122973, 0.765673, 0.0824966, 0.894061, 0.653686, 0.823039, 0.772812, 0.0985164, 0.755546, 0.679889, 0.0911482, 0.752727, 0.842469, 0.186963, 0.98434, 0.609946, 0.443873, 0.914387, 0.71479, 0.109152, 0.916523, 0.0693808, 0.786806, 0.812343},
{0.622809, 0.777039, 0.146408, 0.108772, 0.45444, 0.322136, 0.40043, 0.547134, 0.909202, 0.43798, 0.139054, 0.609968, 0.884871, 0.012042, 0.568537, 0.331923, 0.523167, 0.450291, 0.79409, 0.434074, 0.706005, 0.97144, 0.316974, 0.327493, 0.717261, 0.453615, 0.602687, 0.245172, 0.376832, 0.91934, 0.750519, 0.721082, 0.762707, 0.177393, 0.101834, 0.660623, 0.576155, 0.45478, 0.0285164, 0.576908, 0.112351, 0.827136, 0.887944, 0.590955, 0.498308, 0.52666, 0.781287, 0.550059, 0.741154, 0.824446, 0.754305, 0.396756, 0.670751, 0.623837, 0.880296, 0.877581, 0.797034, 0.778762, 0.579014, 0.491741, 0.869265, 0.353328, 0.507964, 0.882946, 0.902094, 0.684906, 0.710258, 0.91998, 0.119052, 0.176852, 0.714229, 0.980781, 0.0139043, 0.46779, 0.28862, 0.893278, 0.352134, 0.405152, 0.00332272, 0.998937, 0.768604, 0.411084, 0.442115, 0.417258, 0.028242, 0.842632, 0.389125, 0.147281, 0.391514, 0.306362, 0.252318, 0.181449, 0.312905, 0.183282, 0.0971595, 0.110598, 0.329729, 0.542354, 0.775844, 0.50869},
{0.801722, 0.392051, 0.283837, 0.508901, 0.237726, 0.298464, 0.865152, 0.328023, 0.250507, 0.825603, 0.73541, 0.454594, 0.6107, 0.0208366, 0.546773, 0.738732, 0.767492, 0.424775, 0.524672, 0.625051, 0.8552, 0.746566, 0.113539, 0.926217, 0.892837, 0.552287, 0.744632, 0.403402, 0.558236, 0.405748, 0.39941, 0.146326, 0.336247, 0.719222, 0.671701, 0.0436123, 0.553219, 0.542649, 0.982131, 0.696988, 0.801634, 0.265317, 0.665023, 0.279092, 0.118194, 0.413289, 0.381436, 0.00288746, 0.632546, 0.544649, 0.260792, 0.865969, 0.245197, 0.200095, 0.984205, 0.884244, 0.183522, 0.990881, 0.00359095, 0.615486, 0.217327, 0.202048, 0.754366, 0.631069, 0.345825, 0.772357, 0.00659574, 0.0336932, 0.436227, 0.0854528, 0.951881, 0.0284788, 0.480801, 0.75262, 0.590819, 0.99001, 0.740737, 0.408809, 0.882348, 0.817878, 0.0600329, 0.912695, 0.604175, 0.705102, 0.138554, 0.371125, 0.687548, 0.362768, 0.313894, 0.684804, 0.796673, 0.446383, 0.62179, 0.0694104, 0.30859, 0.366205, 0.474047, 0.694965, 0.948042, 0.707605},
{0.421112, 0.00380329, 0.337954, 0.793043, 0.0823844, 0.596817, 0.975318, 0.943243, 0.200737, 0.247705, 0.199665, 0.315758, 0.993872, 0.535363, 0.996171, 0.173224, 0.364698, 0.811733, 0.0885409, 0.767625, 0.159959, 0.269966, 0.316411, 0.300091, 0.6549, 0.351867, 0.66964, 0.592626, 0.0154147, 0.558638, 0.301333, 0.8159, 0.619159, 0.562756, 0.888855, 0.972924, 0.444738, 0.715394, 0.696194, 0.375425, 0.0541959, 0.757732, 0.295605, 0.331807, 0.975563, 0.280111, 0.36308, 0.264989, 0.283326, 0.823222, 0.866616, 0.422377, 0.843573, 0.175358, 0.891661, 0.0998911, 0.126587, 0.627454, 0.838011, 0.556763, 0.0369695, 0.923373, 0.628642, 0.0660254, 0.0186913, 0.408133, 0.947206, 0.790871, 0.576815, 0.678064, 0.885408, 0.142204, 0.479327, 0.169516, 0.900942, 0.849494, 0.748164, 0.0409074, 0.800908, 0.488561, 0.584982, 0.01863, 0.158771, 0.538309, 0.979005, 0.276886, 0.451109, 0.631144, 0.308011, 0.14968, 0.64437, 0.765275, 0.117543, 0.806022, 0.618621, 0.0242246, 0.7482, 0.164138, 0.722225, 0.987788},
{0.0947308, 0.0531043, 0.895147, 0.582721, 0.2905, 0.992551, 0.0999129, 0.506447, 0.169168, 0.371646, 0.131103, 0.945221, 0.707941, 0.887923, 0.376859, 0.715996, 0.324762, 0.308431, 0.502995, 0.570271, 0.34185, 0.487536, 0.0510226, 0.976368, 0.769101, 0.997918, 0.412083, 0.199872, 0.542316, 0.726416, 0.944232, 0.971608, 0.58349, 0.678734, 0.735739, 0.430879, 0.511332, 0.774711, 0.424671, 0.793851, 0.053905, 0.166507, 0.610643, 0.90547, 0.0920199, 0.507834, 0.696064, 0.430315, 0.827339, 0.378763, 0.302397, 0.649841, 0.438756, 0.0598661, 0.00594779, 0.835551, 0.0309395, 0.532816, 0.567168, 0.0794667, 0.73843, 0.481102, 0.0612803, 0.165606, 0.577522, 0.0207186, 0.907617, 0.427469, 0.0222161, 0.234006, 0.412185, 0.165855, 0.904238, 0.281643, 0.337579, 0.593971, 0.991127, 0.824696, 0.300316, 0.588205, 0.0183474, 0.982907, 0.324253, 0.894588, 0.408836, 0.656339, 0.922624, 0.830398, 0.209055, 0.934645, 0.808057, 0.380839, 0.524274, 0.347551, 0.955492, 0.149181, 0.497989, 0.872843, 0.831153, 0.108201},
};

static const std::vector<float> costs = {872.617, 935.386, 828.808, 390.909, 358.893, 918.891, 229.043, 745.195, 420.98, 535.719, 807.712, 496.813, 50.6467, 925.436, 950.046, 241.95, 848.023, 510.896, 843.948, 704.76, 991.858, 521.224, 163.267, 677.206, 190.984, 36.4579, 512.55, 942.435, 483.078, 165.946, 78.5842, 658.171, 697.222, 207.761, 608.04, 327.972, 493.3, 628.973, 141.764, 870.359, 233.852, 83.5125, 792.603, 730.054, 245.779, 438.441, 979.988, 574.007, 812.495, 22.6659, 992.637, 38.8913, 949.724, 560.306, 69.6811, 618.901, 688.319, 636.955, 315.189, 406.44, 255.768, 209.822, 596.831, 764.375, 325.659, 562.706, 461.195, 748.6, 91.7623, 761.489, 491.378, 632.351, 277.964, 168.749, 671.948, 23.5674, 448.69, 609.703, 111.78, 541.598, 624.783, 53.8972, 7.54923, 550.342, 1.11482, 326.993, 869.459, 858.641, 393.182, 216.428, 455.969, 220.836, 750.241, 910.078, 190.658, 172.258, 280.764, 818.645, 227.235, 38.8886};

static const std::vector<float> min_impressions = {0.584632, 0.336506, 0.0338438, 0.40921, 0.524606, 0.39096, 0.230978, 0.243742, 0.871201, 0.857209};

//
#endif
