#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(events[24], events[55]),events[8]),events[51]),events[70]),events[94]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(events[76], events[48]),events[52]),events[40]),events[93]),events[34]),cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(events[17], events[39]),events[54]),events[10]),events[30]),events[19]),cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(events[54], events[21]),events[17]),events[38]),events[0]),events[10]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(events[24], events[19]),events[72]),events[31]),events[43]),events[87])};


static const std::vector< std::vector<float> > prob = {{0.952983, 0.48036, 0.028183, 0.620591, 0.934326, 0.0647549, 0.957475, 0.456345, 0.384887, 0.112196, 0.729719, 0.211111, 0.362675, 0.675797, 0.849164, 0.917335, 0.347496, 0.60169, 0.201472, 0.0123484, 0.148707, 0.93627, 0.15313, 0.672361, 0.185102, 0.607646, 0.902532, 0.250905, 0.439466, 0.224466, 0.928841, 0.995158, 0.732665, 0.511161, 0.428603, 0.700055, 0.92677, 0.676241, 0.366316, 0.419381, 0.861581, 0.192036, 0.671319, 0.688374, 0.193541, 0.86005, 0.688045, 0.376881, 0.774951, 0.230556, 0.712259, 0.881304, 0.493709, 0.197442, 0.256871, 0.33886, 0.357256, 0.90283, 0.528695, 0.225527, 0.963304, 0.323539, 0.953891, 0.816252, 0.121904, 0.865983, 0.342092, 0.485972, 0.684788, 0.977943, 0.11736, 0.511207, 0.708186, 0.558722, 0.240765, 0.849227, 0.634947, 0.998096, 0.147462, 0.128218, 0.294975, 0.958287, 0.707244, 0.0681985, 0.271291, 0.567987, 0.403601, 0.962822, 0.365195, 0.988433, 0.64075, 0.23135, 0.613025, 0.687618, 0.62721, 0.515021, 0.593851, 0.882733, 0.626721, 0.658147},
{0.0551223, 0.218913, 0.873324, 0.85025, 0.268778, 0.274525, 0.182863, 0.181042, 0.0634739, 0.710803, 0.482679, 0.0692946, 0.946104, 0.177188, 0.503638, 0.40728, 0.980398, 0.550191, 0.600056, 0.771984, 0.282062, 0.391432, 0.114746, 0.249315, 0.0885902, 0.401422, 0.701824, 0.669024, 0.309005, 0.861914, 0.618996, 0.0903955, 0.502291, 0.84299, 0.573938, 0.869822, 0.980269, 0.270273, 0.568491, 0.432371, 0.589176, 0.946203, 0.791516, 0.386916, 0.427042, 0.842417, 0.980549, 0.736122, 0.434196, 0.0637659, 0.697031, 0.664708, 0.164141, 0.00572299, 0.536239, 0.0021635, 0.550767, 0.275867, 0.455461, 0.524101, 0.640991, 0.28292, 0.409886, 0.0146448, 0.804312, 0.130441, 0.452659, 0.725753, 0.168258, 0.772529, 0.30535, 0.938274, 0.437944, 0.386724, 0.906887, 0.158449, 0.52257, 0.717846, 0.203759, 0.304267, 0.285639, 0.89894, 0.991356, 0.627732, 0.595642, 0.597338, 0.596596, 0.0587114, 0.106027, 0.413605, 0.239665, 0.264495, 0.882145, 0.402911, 0.417638, 0.562398, 0.247206, 0.681336, 0.441109, 0.647697},
{0.266488, 0.0194457, 0.99549, 0.203163, 0.0276907, 0.235107, 0.998299, 0.355229, 0.78926, 0.133872, 0.472119, 0.878215, 0.970926, 0.485496, 0.163792, 0.817489, 0.901019, 0.466829, 0.0285598, 0.960671, 0.340026, 0.902609, 0.365236, 0.994385, 0.437166, 0.360824, 0.697462, 0.545448, 0.348636, 0.414873, 0.219401, 0.260359, 0.0584396, 0.229385, 0.0203074, 0.631234, 0.522688, 0.998998, 0.199193, 0.930098, 0.41087, 0.145667, 0.533729, 0.396104, 0.636087, 0.361397, 0.532765, 0.978817, 0.849808, 0.395782, 0.651523, 0.401726, 0.944156, 0.16268, 0.0905632, 0.765854, 0.394014, 0.132005, 0.0357688, 0.382503, 0.025391, 0.815512, 0.495002, 0.622551, 0.4834, 0.305322, 0.61419, 0.268959, 0.447301, 0.482975, 0.936338, 0.447202, 0.749217, 0.359605, 0.166355, 0.960728, 0.805411, 0.519822, 0.0700486, 0.883609, 0.60035, 0.0291231, 0.280882, 0.0136567, 0.0611398, 0.765796, 0.259669, 0.396026, 0.319193, 0.00511529, 0.904613, 0.930393, 0.30854, 0.51788, 0.472054, 0.766046, 0.272233, 0.215994, 0.469616, 0.0738837},
{0.855468, 0.477719, 0.624743, 0.489032, 0.468937, 0.321688, 0.66507, 0.0132973, 0.235029, 0.381286, 0.156375, 0.844867, 0.437198, 0.194726, 0.700055, 0.856988, 0.182054, 0.641713, 0.217144, 0.537893, 0.554462, 0.820019, 0.00561214, 0.33321, 0.438192, 0.849484, 0.341787, 0.707981, 0.40978, 0.0870752, 0.544965, 0.832934, 0.635654, 0.727812, 0.98928, 0.767127, 0.00211418, 0.768717, 0.900206, 0.62547, 0.240542, 0.441676, 0.109431, 0.926942, 0.512431, 0.262703, 0.506895, 0.730255, 0.381452, 0.992133, 0.794578, 0.683592, 0.197053, 0.726273, 0.0543793, 0.38219, 0.681909, 0.810165, 0.938575, 0.395117, 0.337268, 0.464634, 0.736748, 0.36693, 0.993919, 0.419124, 0.696753, 0.276839, 0.699904, 0.152299, 0.729107, 0.282054, 0.283741, 0.795233, 0.0920624, 0.68511, 0.242575, 0.254456, 0.930127, 0.598387, 0.52968, 0.909607, 0.236955, 0.529499, 0.856643, 0.225348, 0.798558, 0.371879, 0.258618, 0.315747, 0.310732, 0.787003, 0.996968, 0.625212, 0.502558, 0.354841, 0.631163, 0.980453, 0.862713, 0.494709},
{0.191502, 0.244071, 0.237925, 0.529193, 0.771511, 0.655471, 0.751995, 0.947931, 0.425051, 0.195511, 0.834399, 0.585887, 0.834378, 0.132104, 0.54696, 0.220816, 0.0473713, 0.836859, 0.0987998, 0.473582, 0.456099, 0.8331, 0.408713, 0.138129, 0.953497, 0.994961, 0.869008, 0.200575, 0.094693, 0.650046, 0.561108, 0.337226, 0.689984, 0.425447, 0.64311, 0.624187, 0.402678, 0.424572, 0.960538, 0.888249, 0.651621, 0.26561, 0.0849467, 0.692364, 0.700582, 0.0734227, 0.939233, 0.701385, 0.187151, 0.238241, 0.203239, 0.624633, 0.168771, 0.573749, 0.320134, 0.949052, 0.307912, 0.0534597, 0.41302, 0.19215, 0.998724, 0.649669, 0.984605, 0.962692, 0.22394, 0.978205, 0.40874, 0.698371, 0.270248, 0.186341, 0.159542, 0.667875, 0.531247, 0.350577, 0.777571, 0.739759, 0.0333617, 0.0485997, 0.77878, 0.929051, 0.596096, 0.924997, 0.995028, 0.956681, 0.0185971, 0.841396, 0.324464, 0.585065, 0.890057, 0.775796, 0.227437, 0.881284, 0.0343305, 0.898881, 0.709737, 0.494619, 0.261942, 0.81965, 0.478832, 0.97449},
};

static const std::vector<float> costs = {793.589, 362.847, 467.746, 513.608, 634.508, 148.404, 617.693, 768.077, 130.325, 744.487, 681.353, 26.5276, 481.64, 652.613, 416.398, 718.28, 442.897, 457.063, 887.959, 445.717, 719.656, 309.826, 383.039, 97.0289, 403.199, 128.443, 382.126, 140.541, 30.0893, 228.133, 331.072, 564.525, 875.604, 276.992, 485.054, 588.339, 656.54, 506.547, 309.348, 114.882, 516.26, 38.4112, 295.323, 674.928, 563.655, 528.16, 134.657, 126.767, 673.045, 633.861, 366.124, 856.482, 435.934, 258.711, 637.15, 153.728, 996.009, 697.243, 275.769, 116.196, 747.114, 10.5273, 175.941, 565.889, 289.902, 582.366, 688.65, 361.958, 954.401, 745.881, 689.793, 699.468, 380.539, 254.195, 1.44405, 788.35, 712.5, 813.1, 714.643, 658.648, 385.067, 939.189, 535.765, 421.95, 887.566, 906.11, 383.956, 501.57, 444.101, 198.345, 394.618, 850.796, 668.582, 166.105, 322.582, 540.322, 638.098, 433.631, 278.801, 31.7676};

static const std::vector<float> min_impressions = {0.915453, 0.242733, 0.505835, 0.763593, 0.771523};

//
#endif
