#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[42], events[15]),events[4]),events[32]),events[39]),events[12]),cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(events[12], events[29]),events[9]),events[37]),events[10]),events[46]),cons_indep(cons_excl(cons_incl(cons_incl(cons_incl(events[37], events[31]),events[17]),events[26]),events[11]),events[24]),cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[32], events[13]),events[6]),events[10]),events[18]),events[9]),cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(events[28], events[42]),events[9]),events[19]),events[41]),events[47]),cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(events[33], events[31]),events[25]),events[34]),events[5]),events[27]),cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(events[30], events[28]),events[27]),events[26]),events[11]),events[5]),cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(events[31], events[48]),events[40]),events[47]),events[39]),events[45]),cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(events[48], events[1]),events[49]),events[10]),events[4]),events[14]),cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(events[46], events[10]),events[5]),events[18]),events[13]),events[11]),cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[12], events[24]),events[40]),events[39]),events[6]),events[17]),cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(events[3], events[41]),events[1]),events[32]),events[16]),events[25]),cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(events[32], events[13]),events[2]),events[35]),events[9]),events[49]),cons_indep(cons_incl(cons_excl(cons_excl(cons_indep(events[28], events[16]),events[6]),events[38]),events[32]),events[5]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(events[4], events[48]),events[36]),events[21]),events[16]),events[34]),cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(events[27], events[39]),events[49]),events[4]),events[10]),events[24]),cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(events[27], events[22]),events[49]),events[47]),events[31]),events[15]),cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(events[30], events[20]),events[35]),events[25]),events[33]),events[31]),cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(events[30], events[1]),events[6]),events[27]),events[21]),events[23]),cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(events[7], events[34]),events[9]),events[43]),events[35]),events[31])};


static const std::vector< std::vector<float> > prob = {{0.173798, 0.118476, 0.536525, 0.90792, 0.365232, 0.371893, 0.170515, 0.669611, 0.680713, 0.0548159, 0.540977, 0.795754, 0.741977, 0.734273, 0.0406214, 0.300964, 0.915039, 0.345606, 0.103954, 0.962614, 0.89627, 0.388263, 0.807903, 0.551919, 0.666726, 0.00758283, 0.200188, 0.0191801, 0.255028, 0.747509, 0.498271, 0.48236, 0.590788, 0.200487, 0.382065, 0.85948, 0.451092, 0.608903, 0.574161, 0.308818, 0.434409, 0.894626, 0.992607, 0.347234, 0.834237, 0.469174, 0.90776, 0.190921, 0.832742, 0.713227},
{0.36473, 0.681372, 0.527418, 0.149489, 0.403488, 0.0291121, 0.802497, 0.151426, 0.734389, 0.789581, 0.726136, 0.347445, 0.00899523, 0.889569, 0.135062, 0.536121, 0.860147, 0.427015, 0.802691, 0.337831, 0.260658, 0.0791703, 0.200823, 0.667696, 0.588854, 0.0978781, 0.684877, 0.24798, 0.245238, 0.88639, 0.129115, 0.298461, 0.822659, 0.801709, 0.0938793, 0.538292, 0.716669, 0.239573, 0.237829, 0.600219, 0.63236, 0.221568, 0.347641, 0.464562, 0.213999, 0.549475, 0.992491, 0.0165465, 0.748219, 0.159029},
{0.284238, 0.924774, 0.635474, 0.470898, 0.364913, 0.520569, 0.19022, 0.365978, 0.308908, 0.637554, 0.366869, 0.0759702, 0.918122, 0.938606, 0.0732742, 0.183389, 0.827482, 0.443479, 0.717077, 0.613678, 0.599074, 0.223462, 0.286839, 0.11795, 0.292274, 0.645138, 0.800315, 0.337037, 0.205446, 0.538237, 0.0230397, 0.914689, 0.675271, 0.305486, 0.873893, 0.106436, 0.404058, 0.210465, 0.167342, 0.728436, 0.644282, 0.0814162, 0.349291, 0.7762, 0.446278, 0.791411, 0.502244, 0.783344, 0.531552, 0.187091},
{0.775356, 0.616944, 0.736835, 0.408058, 0.10003, 0.60875, 0.109489, 0.735162, 0.518071, 0.543356, 0.584954, 0.304446, 0.130257, 0.597183, 0.877434, 0.662188, 0.821974, 0.924304, 0.764291, 0.199627, 0.684469, 0.548443, 0.354787, 0.225684, 0.31323, 0.421073, 0.707211, 0.455902, 0.0293413, 0.82537, 0.24112, 0.896531, 0.276833, 0.354979, 0.671047, 0.0094141, 0.702712, 0.993524, 0.472261, 0.782208, 0.261468, 0.742665, 0.0926312, 0.200177, 0.193928, 0.469469, 0.837579, 0.759306, 0.286628, 0.847284},
{0.164971, 0.592442, 0.979041, 0.584976, 0.776722, 0.789976, 0.85219, 0.360571, 0.8061, 0.525175, 0.719299, 0.384395, 0.446141, 0.768847, 0.659977, 0.884035, 0.483421, 0.611349, 0.0479463, 0.26682, 0.789771, 0.903241, 0.236011, 0.349747, 0.670474, 0.602154, 0.56116, 0.599332, 0.505436, 0.704735, 0.504885, 0.444179, 0.116497, 0.769473, 0.678033, 0.178768, 0.070631, 0.0381956, 0.130621, 0.832954, 0.923837, 0.426047, 0.566335, 0.630814, 0.28655, 0.0376521, 0.999125, 0.827141, 0.708623, 0.205244},
{0.921644, 0.450411, 0.32375, 0.289723, 0.855028, 0.920679, 0.713753, 0.863625, 0.0018911, 0.423966, 0.808998, 0.354755, 0.763871, 0.779085, 0.547344, 0.995547, 0.948697, 0.94976, 0.616725, 0.787653, 0.451453, 0.222903, 0.616342, 0.304447, 0.778358, 0.672565, 0.704254, 0.787415, 0.714225, 0.146705, 0.74663, 0.266132, 0.666324, 0.252076, 0.892263, 0.423848, 0.645726, 0.482356, 0.328279, 0.763738, 0.125941, 0.749928, 0.737912, 0.0225701, 0.837953, 0.360388, 0.611811, 0.799534, 0.0453763, 0.937934},
{0.760022, 0.691515, 0.693465, 0.394377, 0.479099, 0.640837, 0.207056, 0.035839, 0.796523, 0.988067, 0.109395, 0.905192, 0.0858064, 0.909936, 0.678313, 0.126232, 0.071093, 0.542062, 0.193103, 0.962004, 0.361963, 0.702309, 0.0767785, 0.244427, 0.159871, 0.83206, 0.494047, 0.175165, 0.963564, 0.606347, 0.220862, 0.928412, 0.105703, 0.795361, 0.353402, 0.130753, 0.137923, 0.213317, 0.828624, 0.783472, 0.488562, 0.486905, 0.165777, 0.882601, 0.227629, 0.966411, 0.392535, 0.62695, 0.41288, 0.977001},
{0.0555696, 0.949252, 0.396756, 0.0221751, 0.0368827, 0.316232, 0.526693, 0.653455, 0.0517373, 0.731828, 0.139005, 0.567992, 0.647623, 0.384974, 0.0484407, 0.763568, 0.480886, 0.78247, 0.586105, 0.735264, 0.128923, 0.739891, 0.892696, 0.120723, 0.989899, 0.786358, 0.224732, 0.190918, 0.583661, 0.97988, 0.143403, 0.0745939, 0.157791, 0.55933, 0.641409, 0.589774, 0.853024, 0.955712, 0.894505, 0.897579, 0.847264, 0.22374, 0.300701, 0.6325, 0.840075, 0.78181, 0.743598, 0.888874, 0.464575, 0.436624},
{0.212808, 0.241978, 0.803746, 0.885757, 0.752054, 0.732364, 0.762043, 0.329043, 0.487048, 0.689856, 0.585706, 0.348586, 0.213445, 0.869642, 0.912408, 0.336538, 0.787405, 0.433574, 0.0229019, 0.360903, 0.761543, 0.0135273, 0.483247, 0.617291, 0.798389, 0.850808, 0.883665, 0.306071, 0.531426, 0.391979, 0.55283, 0.425133, 0.611646, 0.750746, 0.684877, 0.406859, 0.937497, 0.883484, 0.529913, 0.193526, 0.0279546, 0.07181, 0.769983, 0.973661, 0.0661073, 0.247001, 0.735663, 0.136761, 0.318072, 0.439076},
{0.975795, 0.44359, 0.544495, 0.241859, 0.472208, 0.742321, 0.29999, 0.997488, 0.260685, 0.361113, 0.481614, 0.870774, 0.810632, 0.0648877, 0.685571, 0.668026, 0.556881, 0.665122, 0.747741, 0.630324, 0.359138, 0.0490314, 0.534905, 0.436313, 0.486388, 0.374682, 0.995216, 0.18262, 0.0121692, 0.921274, 0.790211, 0.326122, 0.747496, 0.592403, 0.710306, 0.669036, 0.727194, 0.480255, 0.481548, 0.301401, 0.657591, 0.684056, 0.188239, 0.923386, 0.135, 0.942834, 0.905417, 0.788814, 0.199257, 0.738598},
{0.352764, 0.940446, 0.0333905, 0.438582, 0.662622, 0.81368, 0.635238, 0.168612, 0.916563, 0.905976, 0.541497, 0.630821, 0.0796794, 0.895495, 0.754501, 0.345256, 0.67537, 0.587463, 0.0278313, 0.484511, 0.231083, 0.152354, 0.810416, 0.856287, 0.918097, 0.873904, 0.102051, 0.343955, 0.220915, 0.955937, 0.70471, 0.296538, 0.671859, 0.934038, 0.833751, 0.212108, 0.311181, 0.406442, 0.534318, 0.0417479, 0.547487, 0.179394, 0.318129, 0.550622, 0.955949, 0.671187, 0.398961, 0.385767, 0.140289, 0.553327},
{0.781295, 0.818446, 0.912843, 0.810508, 0.0733224, 0.864704, 0.456123, 0.334919, 0.746733, 0.768517, 0.195423, 0.912118, 0.0853784, 0.0444583, 0.46033, 0.299955, 0.643382, 0.84395, 0.135818, 0.189918, 0.598594, 0.517226, 0.606213, 0.211042, 0.790565, 0.495119, 0.578167, 0.0525712, 0.968838, 0.326326, 0.913099, 0.405654, 0.900802, 0.631722, 0.837322, 0.289642, 0.369965, 0.92307, 0.12982, 0.183245, 0.592693, 0.69224, 0.513419, 0.063916, 0.717354, 0.223645, 0.727171, 0.125408, 0.590453, 0.137033},
{0.277382, 0.0837091, 0.0153094, 0.830291, 0.60084, 0.684158, 0.125556, 0.404456, 0.201352, 0.198133, 0.330866, 0.995568, 0.117875, 0.0745977, 0.997941, 0.36629, 0.715974, 0.56293, 0.423959, 0.754767, 0.00644657, 0.42617, 0.25232, 0.156849, 0.676646, 0.859711, 0.266797, 0.699551, 0.807941, 0.800285, 0.0652757, 0.970934, 0.950392, 0.295596, 0.154061, 0.695511, 0.490148, 0.0529473, 0.644261, 0.951905, 0.448534, 0.0635573, 0.0441426, 0.0620748, 0.472858, 0.635141, 0.458757, 0.813037, 0.993722, 0.803898},
{0.786742, 0.457373, 0.548755, 0.0928041, 0.673061, 0.323708, 0.451823, 0.0659999, 0.46062, 0.86489, 0.953563, 0.412562, 0.519969, 0.920514, 0.236068, 0.786229, 0.920877, 0.0104239, 0.315793, 0.0211302, 0.160621, 0.531542, 0.9442, 0.983182, 0.186746, 0.754631, 0.36428, 0.433918, 0.965897, 0.380634, 0.444845, 0.840908, 0.658214, 0.139299, 0.533078, 0.978671, 0.740942, 0.804156, 0.308688, 0.847301, 0.216996, 0.743833, 0.0991892, 0.307192, 0.359592, 0.331735, 0.213535, 0.0178206, 0.657724, 0.773137},
{0.0735214, 0.313531, 0.872316, 0.402084, 0.417985, 0.473803, 0.193956, 0.690396, 0.588308, 0.906171, 0.75568, 0.171336, 0.524281, 0.930018, 0.574618, 0.407229, 0.868937, 0.678739, 0.0326988, 0.0800831, 0.69625, 0.677822, 0.224028, 0.436797, 0.125602, 0.444633, 0.587364, 0.344355, 0.108858, 0.585486, 0.15342, 0.207962, 0.337395, 0.405175, 0.842761, 0.377599, 0.789652, 0.391704, 0.355873, 0.866651, 0.61699, 0.689211, 0.123558, 0.279568, 0.582003, 0.927815, 0.816317, 0.760519, 0.167721, 0.266817},
{0.447008, 0.622424, 0.34799, 0.704389, 0.775911, 0.652878, 0.45592, 0.948299, 0.517052, 0.506617, 0.307366, 0.924261, 0.0621317, 0.946919, 0.485561, 0.845803, 0.807855, 0.741979, 0.922001, 0.742692, 0.514375, 0.892375, 0.846278, 0.494488, 0.150954, 0.367915, 0.19492, 0.0217308, 0.126973, 0.367041, 0.250358, 0.112668, 0.246518, 0.534117, 0.426004, 0.446932, 0.416604, 0.950053, 0.319567, 0.482563, 0.161575, 0.310171, 0.688973, 0.969627, 0.763075, 0.689554, 0.420817, 0.41103, 0.79262, 0.485388},
{0.0139673, 0.743665, 0.947512, 0.958277, 0.144437, 0.378722, 0.226337, 0.910557, 0.95248, 0.842428, 0.840538, 0.819422, 0.268406, 0.043754, 0.609799, 0.542511, 0.588929, 0.190587, 0.446962, 0.770626, 0.958901, 0.806147, 0.352251, 0.346978, 0.729711, 0.869802, 0.0581912, 0.903849, 0.771598, 0.864029, 0.880908, 0.134871, 0.938909, 0.977149, 0.626375, 0.88364, 0.569303, 0.0636933, 0.854496, 0.779015, 0.16572, 0.0225139, 0.726259, 0.911595, 0.808851, 0.14428, 0.142842, 0.609009, 0.566058, 0.662784},
{0.38327, 0.770119, 0.307243, 0.883998, 0.444082, 0.0515853, 0.700338, 0.00409325, 0.612137, 0.598905, 0.0716854, 0.692421, 0.794718, 0.139552, 0.559488, 0.144206, 0.938104, 0.102629, 0.187617, 0.698924, 0.0696041, 0.453796, 0.310821, 0.403995, 0.25242, 0.362327, 0.71177, 0.704978, 0.6702, 0.247092, 0.456743, 0.779214, 0.467511, 0.931622, 0.0860291, 0.540334, 0.491704, 0.0863554, 0.193675, 0.804528, 0.478777, 0.656406, 0.108002, 0.0577771, 0.238471, 0.217663, 0.738253, 0.846676, 0.261666, 0.816915},
{0.54046, 0.102864, 0.497629, 0.995012, 0.178115, 0.171027, 0.813725, 0.343073, 0.185711, 0.825262, 0.0949346, 0.998441, 0.601253, 0.0545114, 0.525291, 0.606338, 0.0087321, 0.435056, 0.347816, 0.930739, 0.158302, 0.596714, 0.763073, 0.231261, 0.956419, 0.573775, 0.834738, 0.0826382, 0.223244, 0.321046, 0.527911, 0.923901, 0.471127, 0.375072, 0.804069, 0.714349, 0.809516, 0.157476, 0.96871, 0.228217, 0.927658, 0.0575542, 0.555122, 0.610261, 0.0714087, 0.29567, 0.274874, 0.0303193, 0.31159, 0.685279},
{0.66035, 0.379706, 0.343877, 0.62556, 0.359798, 0.914977, 0.101973, 0.840924, 0.430474, 0.941487, 0.687314, 0.462778, 0.894055, 0.352806, 0.591091, 0.271881, 0.526646, 0.349783, 0.140262, 0.48516, 0.636239, 0.784169, 0.946025, 0.266018, 0.321044, 0.93865, 0.59296, 0.120373, 0.84153, 0.486731, 0.336491, 0.756927, 0.705029, 0.960174, 0.428077, 0.598571, 0.956086, 0.772245, 0.107363, 0.723621, 0.687681, 0.698074, 0.482749, 0.928029, 0.814876, 0.97003, 0.599227, 0.924988, 0.316882, 0.207669},
};

static const std::vector<float> costs = {163.498, 460.554, 791.575, 583.601, 715.497, 784.295, 239.091, 804.293, 899.689, 795.76, 413.725, 989.917, 208.068, 97.2525, 523.95, 23.8261, 61.5031, 721.955, 132.779, 25.7283, 126.536, 311.833, 244.826, 571.243, 623.986, 302.606, 53.847, 75.0845, 253.349, 437.855, 823.951, 558.561, 178.097, 646.63, 305.864, 535.761, 983.911, 120.837, 79.3604, 684.796, 122.832, 842.218, 234.531, 810.015, 740.123, 807.883, 623.005, 218.88, 341.744, 397.088};

static const std::vector<float> min_impressions = {0.566993, 0.940972, 0.579952, 0.855442, 0.0340115, 0.618728, 0.591103, 0.307463, 0.411058, 0.233475, 0.173535, 0.520519, 0.724793, 0.474077, 0.601387, 0.00186974, 0.377434, 0.477575, 0.214862, 0.614247};

//
#endif
