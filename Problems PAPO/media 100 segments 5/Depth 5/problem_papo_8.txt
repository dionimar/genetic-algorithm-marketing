#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(events[32], events[95]),events[99]),events[66]),events[88]),events[4]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(events[68], events[39]),events[9]),events[59]),events[49]),events[30]),cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(events[16], events[38]),events[43]),events[87]),events[99]),events[66]),cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(events[14], events[49]),events[65]),events[84]),events[56]),events[46]),cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(events[49], events[87]),events[73]),events[36]),events[15]),events[17])};


static const std::vector< std::vector<float> > prob = {{0.515426, 0.521975, 0.179837, 0.0618944, 0.905771, 0.651882, 0.96558, 0.253225, 0.839726, 0.233807, 0.0538882, 0.30712, 0.283343, 0.931236, 0.672183, 0.119813, 0.856946, 0.88895, 0.661433, 0.592908, 0.135236, 0.707728, 0.226825, 0.668072, 0.175625, 0.113713, 0.56263, 0.964893, 0.993476, 0.186877, 0.204467, 0.319504, 0.196154, 0.40431, 0.226401, 0.304722, 0.0357887, 0.426861, 0.936282, 0.435812, 0.687401, 0.119908, 0.184096, 0.727959, 0.434489, 0.0446777, 0.461959, 0.122558, 0.712397, 0.828334, 0.221786, 0.329724, 0.209852, 0.839463, 0.559852, 0.103058, 0.222644, 0.477754, 0.0194093, 0.522342, 0.314628, 0.783599, 0.184271, 0.0088182, 0.574379, 0.149192, 0.00645267, 0.372389, 0.820624, 0.969875, 0.280127, 0.113242, 0.229987, 0.815882, 0.192321, 0.162903, 0.872574, 0.298241, 0.762951, 0.310685, 0.553716, 0.328032, 0.848705, 0.0278696, 0.677963, 0.241196, 0.138013, 0.997021, 0.682294, 0.0986369, 0.51704, 0.110851, 0.183659, 0.199214, 0.655226, 0.699477, 0.696274, 0.0618349, 0.854427, 0.831652},
{0.86278, 0.504004, 0.303036, 0.669716, 0.245481, 0.0644939, 0.917821, 0.0286795, 0.158565, 0.0801672, 0.582829, 0.0509043, 0.687211, 0.647738, 0.859587, 0.0464582, 0.855549, 0.762578, 0.460935, 0.262914, 0.487594, 0.92059, 0.366704, 0.821598, 0.496922, 0.501295, 0.271268, 0.613296, 0.404074, 0.223226, 0.791829, 0.544915, 0.414351, 0.867934, 0.512568, 0.309754, 0.0629297, 0.656043, 0.789902, 0.222519, 0.0155701, 0.773033, 0.918885, 0.29138, 0.265389, 0.19353, 0.584718, 0.270066, 0.175334, 0.98558, 0.48699, 0.321663, 0.802106, 0.116654, 0.360068, 0.746019, 0.39459, 0.974235, 0.00415794, 0.663856, 0.750189, 0.282054, 0.677006, 0.204898, 0.710265, 0.489378, 0.573542, 0.333817, 0.81037, 0.325592, 0.578776, 0.941461, 0.53546, 0.18502, 0.936781, 0.913478, 0.669545, 0.874383, 0.78896, 0.591702, 0.513805, 0.10007, 0.603418, 0.942196, 0.532099, 0.116671, 0.581634, 0.860744, 0.968384, 0.883639, 0.468143, 0.584887, 0.799028, 0.765697, 0.387729, 0.202193, 0.657549, 0.122229, 0.401962, 0.459999},
{0.546733, 0.32277, 0.223644, 0.763368, 0.680991, 0.63222, 0.882053, 0.699865, 0.669844, 0.479852, 0.675318, 0.0839275, 0.889212, 0.953491, 0.556759, 0.143551, 0.637409, 0.375798, 0.0385299, 0.438681, 0.268878, 0.00485202, 0.370646, 0.986276, 0.540968, 0.0608584, 0.498592, 0.698493, 0.30537, 0.796737, 0.015302, 0.529079, 0.261564, 0.0824602, 0.418248, 0.786516, 0.943427, 0.556577, 0.152357, 0.711537, 0.791301, 0.538838, 0.627973, 0.63808, 0.929273, 0.764329, 0.995221, 0.492566, 0.960983, 0.5785, 0.909072, 0.651171, 0.0917724, 0.748226, 0.414693, 0.433174, 0.641229, 0.392872, 0.20347, 0.451219, 0.515046, 0.627539, 0.55466, 0.455686, 0.710664, 0.0599457, 0.816559, 0.557296, 0.989625, 0.944985, 0.1655, 0.433289, 0.671214, 0.374764, 0.31734, 0.309022, 0.668994, 0.148138, 0.997176, 0.940053, 0.992778, 0.660245, 0.200635, 0.408178, 0.45609, 0.182435, 0.326809, 0.180766, 0.12951, 0.760052, 0.194812, 0.985017, 0.0103353, 0.294695, 0.175486, 0.776701, 0.00898028, 0.534315, 0.157799, 0.590333},
{0.969479, 0.0256088, 0.91111, 0.250854, 0.439656, 0.828121, 0.0954476, 0.126961, 0.11085, 0.542258, 0.511101, 0.932341, 0.416046, 0.635291, 0.443704, 0.330252, 0.496478, 0.951917, 0.978913, 0.0483389, 0.296447, 0.731862, 0.71216, 0.390761, 0.714486, 0.527808, 0.609494, 0.0202049, 0.782163, 0.691784, 0.333331, 0.400048, 0.791955, 0.581419, 0.919402, 0.697354, 0.156487, 0.476355, 0.447551, 0.454923, 0.273684, 0.0835924, 0.498737, 0.611673, 0.761288, 0.344622, 0.204299, 0.786731, 0.258262, 0.199593, 0.216966, 0.289885, 0.690888, 0.723314, 0.748925, 0.645058, 0.952534, 0.370611, 0.0240701, 0.73564, 0.267492, 0.574091, 0.948779, 0.159309, 0.27997, 0.333145, 0.281595, 0.404111, 0.159187, 0.60947, 0.486493, 0.278301, 0.750225, 0.586096, 0.0708688, 0.382835, 0.207922, 0.231438, 0.730494, 0.498074, 0.936117, 0.171739, 0.553537, 0.445238, 0.132101, 0.423833, 0.526526, 0.676051, 0.0188488, 0.237171, 0.348973, 0.29609, 0.900648, 0.671166, 0.51451, 0.506647, 0.775094, 0.89773, 0.100115, 0.121961},
{0.292818, 0.281897, 0.432973, 0.840131, 0.769465, 0.00772715, 0.850217, 0.423921, 0.329051, 0.896387, 0.164954, 0.128044, 0.457906, 0.896397, 0.73923, 0.729267, 0.109242, 0.268455, 0.74338, 0.201546, 0.109552, 0.50653, 0.591137, 0.837961, 0.325006, 0.333237, 0.687916, 0.334567, 0.439423, 0.0787078, 0.916472, 0.79703, 0.836089, 0.22171, 0.250529, 0.257316, 0.21812, 0.998968, 0.450501, 0.743507, 0.0977838, 0.194114, 0.145803, 0.994778, 0.0657668, 0.33077, 0.961173, 0.116718, 0.206188, 0.913623, 0.701907, 0.617387, 0.6802, 0.0640768, 0.592435, 0.327883, 0.635474, 0.530604, 0.917333, 0.243409, 0.207201, 0.164028, 0.331117, 0.417274, 0.333369, 0.967459, 0.0903957, 0.690922, 0.469766, 0.602195, 0.349911, 0.102915, 0.249857, 0.783852, 0.524183, 0.941967, 0.583688, 0.981471, 0.330047, 0.140704, 0.29838, 0.629899, 0.0867864, 0.194105, 0.00295637, 0.410905, 0.604032, 0.881288, 0.36855, 0.556897, 0.469263, 0.126263, 0.712779, 0.151172, 0.355035, 0.865937, 0.744018, 0.785989, 0.760205, 0.925547},
};

static const std::vector<float> costs = {998.562, 929.039, 394.922, 194.136, 137.694, 826.815, 287.152, 919.701, 433.214, 403.455, 785.029, 623.895, 901.347, 149.904, 946.798, 329.779, 609.205, 702.697, 583.213, 536.765, 795.629, 820.451, 683.22, 112.996, 851.921, 269.057, 663.834, 237.273, 998.163, 702.275, 392.525, 910.232, 756.555, 724.106, 315.889, 919.75, 674.396, 172.011, 698.388, 977.867, 714.429, 292.371, 66.0269, 565.574, 774.301, 732.559, 237.748, 992.163, 21.8351, 800.122, 222.881, 551.662, 86.602, 642.562, 286.671, 149.283, 224.614, 15.6726, 938.167, 277.678, 165.568, 208.835, 266.393, 653.112, 491.975, 104.797, 383.572, 56.4954, 14.1091, 914.861, 739.811, 996.532, 742.57, 490.747, 960.812, 868.54, 31.8983, 758.348, 518.772, 855.429, 922.359, 382.88, 766.383, 860.464, 567.153, 636.988, 427.525, 909.597, 224.882, 9.0538, 791.781, 936.95, 5.88723, 174.034, 469.552, 794.766, 785.49, 566.68, 987.337, 483.862};

static const std::vector<float> min_impressions = {0.709844, 0.125168, 0.121178, 0.449291, 0.665799};

//
#endif
