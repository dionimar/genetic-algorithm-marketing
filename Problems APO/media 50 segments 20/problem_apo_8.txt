#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{9.16099,4.83037,2.63043,4.65274,8.63883,8.82426,8.43599,2.13447,7.33737,5.48011,7.28358,5.95727,1.16036,2.76873,6.63526,2.02551,5.69175,7.90004,6.24496,7.26448},
{7.10508,6.68497,8.44175,8.54541,4.31298,1.20238,4.95462,2.37361,2.86185,1.42148,7.66504,3.89691,6.71605,1.91022,7.91878,6.57847,8.36584,7.67752,9.98757,3.89138},
{8.8293,6.9188,6.36159,4.60059,5.282,1.09814,6.82483,7.56558,5.37265,1.86929,4.57863,3.50766,7.04266,4.08465,2.90085,5.13473,8.27188,1.58679,7.71111,2.21405},
{7.96848,6.71846,1.08525,5.91772,1.87595,5.31519,1.03566,4.01708,5.33132,7.35907,6.22313,5.01822,8.61702,7.84098,5.29592,3.3644,6.28284,1.56419,9.26793,9.63843},
{3.81819,9.85821,7.39092,5.22838,9.15501,8.87005,3.45397,6.19508,2.37371,4.61656,1.5126,5.38481,7.95952,3.68085,6.09789,9.75773,2.69223,1.6399,5.75728,8.82002},
{6.51027,9.60614,1.80837,6.47008,6.68984,2.5057,4.70892,6.80033,6.62491,6.30405,4.16116,9.18407,8.7024,9.88966,9.59568,4.54738,4.42935,5.19339,9.70868,1.40442},
{5.11665,6.79599,8.34403,6.56659,3.31106,1.46697,8.44715,7.11492,1.78054,2.11956,1.98531,9.54815,1.38742,9.35085,6.29021,8.05247,7.75509,3.11759,4.93785,5.218},
{5.90091,1.35663,1.53555,2.68168,4.1226,4.35986,5.25791,7.41418,8.94483,7.67188,8.75144,6.83205,4.96555,8.53834,1.49354,5.69471,8.61814,5.40133,2.00267,1.85463},
{3.53765,6.81208,6.10566,8.0035,1.68304,6.05901,4.55774,4.33981,9.33212,3.86773,4.46127,4.7795,6.44719,1.82113,4.25242,9.62294,6.22811,7.39656,9.91921,3.12116},
{5.55482,4.69659,4.99438,5.81356,2.11047,3.44222,8.44732,3.95592,8.21163,5.27164,4.88888,6.97488,9.96142,5.20689,5.93608,7.49024,2.13065,5.17702,8.22456,1.25846},
{8.20064,5.42271,7.40652,1.76047,3.43984,8.81611,3.52414,9.60683,2.55792,8.07955,7.3014,7.37489,7.11651,3.67012,1.23295,6.81168,2.52474,3.42159,6.58056,2.01884},
{6.84093,8.57043,3.0112,8.04717,7.61814,4.64918,4.98256,2.66116,1.86859,3.18865,8.01968,4.18429,9.02175,2.06283,3.04677,7.30459,3.98104,3.34938,3.53383,7.47905},
{7.76863,2.50319,6.63077,5.2925,3.11973,4.02798,5.6776,1.67067,8.64897,2.21817,4.14539,5.50916,3.57177,7.87977,3.05651,1.74541,3.26757,9.78533,6.74413,9.44697},
{8.85823,9.74252,3.8697,4.63964,5.73597,7.30277,8.10059,2.40662,3.01748,9.10554,8.69058,8.97469,3.3781,7.44764,1.66622,2.68712,9.44139,6.60611,5.47034,4.18597},
{2.55924,5.13931,3.89899,8.33662,4.59447,5.97591,1.56127,3.96646,4.54514,6.91781,4.09945,3.11099,1.51473,1.7277,8.23021,6.93674,5.7084,4.9905,8.09596,5.51088},
{2.69217,6.98217,4.15483,5.28502,5.97039,4.2116,7.00757,1.05198,7.16567,6.28132,1.16567,8.30361,2.20763,7.11809,1.85251,7.6742,7.42257,4.85478,7.92035,7.18501},
{7.49191,9.39262,3.12475,3.10522,7.92022,9.67512,8.28636,4.07443,6.79966,5.63834,2.21221,5.08175,4.54057,2.13189,9.04318,3.99733,2.55173,3.03041,4.17776,7.61459},
{9.05244,9.39459,9.64339,4.8957,3.72092,4.94663,8.9859,9.08588,2.00032,8.37796,3.83401,3.47935,6.76556,3.83254,7.79997,1.54123,2.62541,5.11642,4.4142,3.43925},
{9.23425,9.19612,6.63083,6.66803,7.39766,1.97625,8.21675,3.44878,8.47553,3.06066,8.28937,9.08363,6.18786,3.30369,1.83887,9.01215,1.17578,4.57719,2.21271,1.62905},
{2.21188,9.20302,7.41172,9.97701,4.98388,8.32921,2.28469,6.57935,9.58297,7.87361,7.82954,3.64901,2.38263,2.02844,1.00139,7.34688,8.64698,7.9799,1.95403,2.69187},
{3.23075,7.51064,9.45327,3.25225,6.18653,9.77497,7.9015,1.78432,4.06946,5.62668,4.28302,3.6877,8.92462,3.63676,5.87755,7.06969,4.69164,8.2388,2.3357,8.27238},
{3.9637,9.9736,1.94867,1.38457,7.12808,6.53793,2.04268,5.52224,1.58373,9.03436,1.96271,4.49794,7.68809,9.09905,6.1412,4.70404,8.30454,6.45669,7.34019,8.61236},
{5.16211,5.21405,2.18909,5.30997,3.67253,9.87117,5.72948,7.67504,9.57528,5.34957,7.70653,4.33178,1.21231,6.75554,1.81022,9.35046,5.14759,7.29488,9.44621,9.56439},
{9.04446,2.62841,7.70007,8.83491,3.28251,7.70224,6.81305,5.96616,2.79124,6.72074,8.61054,9.81178,4.94743,9.25655,5.67317,6.28334,9.59852,7.90701,5.41109,1.01517},
{9.43429,2.27215,6.40426,1.92755,9.96252,8.16558,8.32612,2.06301,2.03698,3.57074,1.20091,4.5915,5.24935,5.75161,8.40683,6.337,3.35213,2.04868,3.57149,9.07097},
{7.21817,6.24444,8.0669,6.60795,5.3594,4.64186,9.35267,5.86989,4.72998,5.46268,7.62089,7.52399,1.30685,9.94233,3.30146,6.61547,9.76847,3.21854,1.7904,2.97933},
{2.2288,3.1362,4.26785,5.99324,7.45568,4.25489,7.51863,8.03856,9.49378,8.88939,9.82785,6.15101,3.95168,4.84011,1.12288,8.19304,5.31256,7.15908,4.29583,8.79539},
{7.13508,6.64307,5.17786,1.98087,1.21403,2.59149,5.97218,8.91691,8.15036,6.11784,6.04903,8.0129,6.56142,5.22822,7.59363,6.86836,1.37619,3.81531,7.23388,2.61984},
{6.26866,2.30753,6.66233,7.05815,3.41799,8.8233,2.13015,8.11902,2.99352,7.78122,2.15008,4.01127,3.19814,7.23577,3.83427,5.00895,5.31721,7.52396,6.71832,5.22902},
{5.38404,6.77276,4.86865,9.69037,3.55221,7.56727,3.79835,3.86158,1.50075,3.64924,1.12197,9.46909,2.03106,6.49882,7.13023,8.28045,5.86829,9.13197,4.59979,6.94105},
{7.75844,6.33824,6.93276,5.2493,5.98574,6.58437,7.90735,8.28408,5.11191,8.4574,8.5458,6.60503,7.86543,6.1015,9.97844,4.21164,5.8664,3.33723,7.2949,2.42097},
{7.76865,7.60654,3.94298,7.65602,6.86151,9.02619,1.55705,9.49665,4.96937,7.0911,7.94406,4.73611,7.2608,6.65821,7.81766,9.05208,1.14552,2.18763,5.50964,9.1854},
{9.9654,6.51028,9.49581,4.37649,8.43221,7.63723,8.4886,2.60628,3.7158,6.98669,4.02671,8.4191,8.65592,4.53888,3.80632,7.93934,9.17365,7.79341,5.06748,8.18406},
{4.06878,4.85275,2.90864,1.41411,6.93336,5.94039,9.74743,8.15994,4.42161,5.6714,3.65484,6.98353,2.95633,2.59735,8.04299,1.76739,2.59452,5.79695,9.61825,7.77366},
{3.31009,9.17569,8.40158,9.6125,2.10835,6.28079,3.09811,5.92211,7.63603,3.09008,4.70727,4.44903,2.80723,8.81447,3.42282,7.19022,3.98823,2.89818,6.56532,4.11443},
{3.43538,9.19623,3.39054,8.56615,5.49923,8.09719,3.75598,5.40193,3.03864,9.92788,6.18535,3.99037,1.10351,7.16032,7.51308,1.42183,7.23621,9.14997,7.47937,4.9531},
{8.01052,8.62352,8.52957,1.07609,5.78754,2.58421,1.54119,5.87716,5.31567,1.86494,4.87893,5.13023,6.37118,5.75186,2.7155,9.00328,5.99707,7.67134,4.06297,3.4376},
{4.63716,2.23521,2.30518,5.28427,7.53536,9.82103,3.57992,6.36736,8.97465,8.8427,8.84667,8.8971,6.23906,5.08079,2.00826,6.58652,1.18379,1.62482,4.4998,1.59684},
{1.18388,1.43372,8.44683,1.94055,6.00434,5.91546,4.1779,9.21919,2.76315,5.01822,1.76587,7.49369,7.38976,9.16155,4.74231,4.4945,4.08764,3.89269,7.32766,4.61351},
{5.3188,2.77781,7.04973,1.65148,7.21864,8.9621,2.03676,6.44538,9.84298,4.98407,2.51028,4.408,6.67277,9.1206,1.2194,4.69842,7.79935,4.71983,7.40614,5.26886},
{3.61285,6.17717,1.17005,9.06775,5.35996,2.79247,1.42373,1.26956,1.51034,1.98576,5.21905,3.5912,4.70401,5.80857,9.62916,3.34483,2.73575,1.9097,4.48725,4.24768},
{2.68946,2.07202,3.53968,7.73958,9.85226,5.10789,9.96461,8.30508,3.45496,9.24454,1.09211,8.3864,1.45977,6.98813,6.64966,8.28954,2.25647,9.38882,8.51135,4.33631},
{3.0709,5.65364,7.94342,6.44731,1.6043,7.61435,5.01569,4.56209,8.95615,5.56631,2.57829,6.35314,9.86116,6.10663,6.25287,2.92445,6.02885,1.33175,4.21088,2.32674},
{9.93414,2.78033,6.06647,1.79706,7.14562,6.03723,7.95439,3.59631,8.7607,5.0671,2.89108,8.88149,2.57271,8.40983,6.85559,2.65953,1.52371,4.48676,1.30638,7.42444},
{6.04984,9.83315,2.64426,8.04341,6.68794,5.70596,3.88148,8.09539,7.48729,2.43968,4.23696,8.80319,8.17526,1.79616,9.17756,2.17772,3.23337,8.63064,3.6768,8.07285},
{9.66868,5.25133,8.7445,9.91405,4.24828,5.79242,3.83506,4.198,9.83487,4.44285,9.82437,5.38499,1.14219,1.19563,3.80352,8.88242,4.48119,3.65309,3.46716,6.73958},
{9.18509,8.16683,3.91738,1.64628,8.48437,7.49235,9.36284,7.33023,7.50458,6.46116,8.19979,7.68471,3.27089,7.74325,8.92058,3.4824,8.88779,6.80057,4.36731,5.35316},
{3.00993,6.89707,5.62164,1.8849,1.10167,1.55286,4.71193,6.71803,6.75568,5.68146,3.40856,7.55642,3.03475,8.24502,8.12798,5.43347,6.44165,2.20821,6.83537,4.94256},
{9.05861,1.49112,5.86519,7.0236,6.12977,5.94348,4.29459,8.05496,8.48369,1.31382,5.29935,1.7338,3.55766,1.98607,9.20616,3.97287,7.86917,3.41012,5.13235,9.63007},
{7.38253,4.44647,5.42117,1.6021,1.40073,4.00429,5.94754,4.32549,8.88577,6.01479,5.16549,3.7975,3.44157,1.56518,1.12006,4.58287,9.65497,3.58773,1.40059,5.71249}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {925.999,901.789,305.477,80.4581,74.8203,51.9786,453.164,580.168,632.559,9.55816,162.469,541.063,713.061,975.617,608.146,179.474,953.921,766.713,503.68,537.695,194.052,120.869,485.941,309.804,304.18,66.3022,943.664,573.957,994.634,146.012,540.814,148.237,726.188,505.39,57.8628,154.376,98.9367,725.001,681.717,856.426,758.544,754.734,803.196,310.59,921.469,644.302,826.497,734.382,772.386,680.8};


static const std::vector<float> min_impressions = {33.5838,41.6087,33.7454,20.7948,40.4805,34.0187,26.6413,32.8641,42.9392,38.5349,31.3981,38.5223,38.0479,38.9271,36.4384,42.8828,36.804,31.5913,42.9609,41.9936};


#endif
