#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(events[37], events[169]),events[190]),events[109]),events[137]),events[134]),events[99]),events[3]),events[91]),events[56]),events[92]),cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(events[164], events[22]),events[89]),events[5]),events[17]),events[66]),events[128]),events[148]),events[33]),events[40]),events[21]),cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[45], events[111]),events[18]),events[175]),events[180]),events[56]),events[7]),events[71]),events[139]),events[88]),events[50]),cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(events[72], events[115]),events[180]),events[95]),events[129]),events[61]),events[86]),events[52]),events[144]),events[117]),events[134]),cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(events[39], events[14]),events[137]),events[197]),events[106]),events[33]),events[45]),events[57]),events[4]),events[144]),events[158])};


static const std::vector< std::vector<float> > prob = {{0.570157, 0.634498, 0.187865, 0.466625, 0.184885, 0.300508, 0.547098, 0.325578, 0.865545, 0.431404, 0.0882888, 0.768449, 0.421158, 0.361791, 0.4996, 0.472202, 0.592771, 0.872742, 0.519082, 0.0030336, 0.265491, 0.340697, 0.420858, 0.98211, 0.268368, 0.883072, 0.79831, 0.48188, 0.381169, 0.470947, 0.512262, 0.654948, 0.705716, 0.339659, 0.62358, 0.870705, 0.573029, 0.160557, 0.872185, 0.917453, 0.527989, 0.818512, 0.370138, 0.799374, 0.477562, 0.873613, 0.579367, 0.00381525, 0.608116, 0.912169, 0.869455, 0.195098, 0.682711, 0.0820252, 0.654807, 0.311147, 0.990754, 0.611575, 0.0444805, 0.152827, 0.620639, 0.431538, 0.543352, 0.297029, 0.70309, 0.233746, 0.950863, 0.67446, 0.97657, 0.00979788, 0.0351658, 0.166163, 0.049272, 0.594059, 0.145229, 0.29241, 0.593944, 0.609684, 0.660116, 0.0948992, 0.599755, 0.830045, 0.80491, 0.51808, 0.483311, 0.378838, 0.882171, 0.803885, 0.679444, 0.0951497, 0.24348, 0.708785, 0.782179, 0.538814, 0.27886, 0.286638, 0.0513509, 0.0822605, 0.91204, 0.2091, 0.274034, 0.633111, 0.0830507, 0.515874, 0.673165, 0.653303, 0.647332, 0.122229, 0.898285, 0.165716, 0.14357, 0.723472, 0.919994, 0.354165, 0.383926, 0.211322, 0.354129, 0.845519, 0.480003, 0.420712, 0.672053, 0.739662, 0.603643, 0.599216, 0.202651, 0.553038, 0.271701, 0.344598, 0.388756, 0.133568, 0.207425, 0.0379756, 0.625009, 0.767279, 0.433286, 0.68254, 0.112975, 0.326005, 0.272347, 0.631737, 0.822322, 0.575322, 0.283481, 0.0690763, 0.684334, 0.996834, 0.787723, 0.776641, 0.870479, 0.545272, 0.25964, 0.290057, 0.66643, 0.293626, 0.0378798, 0.10175, 0.467319, 0.294513, 0.759956, 0.531665, 0.797156, 0.282201, 0.603358, 0.419005, 0.362617, 0.0458125, 0.140445, 0.44701, 0.969629, 0.163508, 0.0315457, 0.901984, 0.731909, 0.976484, 0.311059, 0.950272, 0.186679, 0.650379, 0.25399, 0.225497, 0.623735, 0.395685, 0.27248, 0.779608, 0.32047, 0.295213, 0.654302, 0.611475, 0.340588, 0.739373, 0.240791, 0.689201, 0.641431, 0.796153, 0.639081, 0.400301, 0.905246, 0.541888, 0.822576, 0.662474},
{0.934273, 0.160963, 0.879783, 0.147033, 0.812396, 0.074082, 0.445318, 0.534958, 0.798155, 0.306582, 0.675281, 0.77871, 0.114903, 0.640979, 0.21036, 0.593428, 0.613374, 0.942267, 0.0764904, 0.386231, 0.245059, 0.729758, 0.706092, 0.454791, 0.391081, 0.111129, 0.0646083, 0.420701, 0.465294, 0.838382, 0.725403, 0.276533, 0.0680584, 0.431613, 0.940536, 0.707956, 0.981545, 0.644887, 0.26199, 0.394198, 0.485381, 0.795592, 0.804937, 0.195295, 0.0442676, 0.99653, 0.738893, 0.257065, 0.115263, 0.710464, 0.790544, 0.409109, 0.890222, 0.913604, 0.0365991, 0.0394251, 0.51222, 0.0122809, 0.311919, 0.375096, 0.830437, 0.683068, 0.922562, 0.26897, 0.724694, 0.579832, 0.304477, 0.602221, 0.291672, 0.334883, 0.327294, 0.217211, 0.0712661, 0.331532, 0.893445, 0.0330583, 0.0580613, 0.788235, 0.605349, 0.384178, 0.991282, 0.448051, 0.679219, 0.253112, 0.256683, 0.239859, 0.844694, 0.606207, 0.249841, 0.135825, 0.541718, 0.568079, 0.98166, 0.444634, 0.613585, 0.180883, 0.362742, 0.517847, 0.0502575, 0.859727, 0.682136, 0.645001, 0.529576, 0.956256, 0.911126, 0.284037, 0.047231, 0.044463, 0.490819, 0.279282, 0.657887, 0.695871, 0.33371, 0.988212, 0.952074, 0.185257, 0.160917, 0.612039, 0.551289, 0.322422, 0.33771, 0.878175, 0.292772, 0.665809, 0.461395, 0.123156, 0.242593, 0.356012, 0.73766, 0.925991, 0.607486, 0.977224, 0.527373, 0.379187, 0.667394, 0.96908, 0.060127, 0.880023, 0.519782, 0.238428, 0.191576, 0.536798, 0.791635, 0.195868, 0.450562, 0.236505, 0.897589, 0.514859, 0.0630707, 0.657959, 0.34985, 0.841519, 0.688522, 0.734757, 0.759569, 0.874412, 0.948647, 0.0774418, 0.0957023, 0.13297, 0.541656, 0.324692, 0.917353, 0.553568, 0.842572, 0.203314, 0.296724, 0.732145, 0.405712, 0.405484, 0.371475, 0.215362, 0.312037, 0.866835, 0.964067, 0.815944, 0.747422, 0.0353157, 0.386202, 0.796823, 0.979228, 0.62607, 0.375087, 0.202356, 0.874808, 0.126694, 0.185635, 0.346426, 0.723762, 0.0644278, 0.771917, 0.512758, 0.507725, 0.516871, 0.520188, 0.27575, 0.337194, 0.991734, 0.7948, 0.48628},
{0.570195, 0.106139, 0.9173, 0.428707, 0.706267, 0.843875, 0.2561, 0.166241, 0.77977, 0.694401, 0.276592, 0.253929, 0.740007, 0.866769, 0.544547, 0.481402, 0.399616, 0.309344, 0.277621, 0.90078, 0.929061, 0.419017, 0.388614, 0.461301, 0.337984, 0.212786, 0.324151, 0.963072, 0.471926, 0.485678, 0.0420139, 0.341538, 0.0536701, 0.190567, 0.478494, 0.590345, 0.997732, 0.669976, 0.000111818, 0.402888, 0.998437, 0.788197, 0.977772, 0.668008, 0.645067, 0.67826, 0.809437, 0.462971, 0.736477, 0.930941, 0.990782, 0.378842, 0.512245, 0.523504, 0.306906, 0.787706, 0.824247, 0.302205, 0.0493752, 0.939085, 0.216587, 0.012637, 0.590425, 0.0427721, 0.0802588, 0.473761, 0.642207, 0.126092, 0.216745, 0.624849, 0.492409, 0.0843488, 0.368521, 0.607531, 0.89115, 0.83823, 0.618725, 0.497741, 0.086515, 0.456284, 0.873789, 0.0853373, 0.80123, 0.51505, 0.525665, 0.0566417, 0.0670778, 0.665869, 0.246225, 0.638621, 0.176102, 0.812027, 0.228833, 0.26546, 0.206088, 0.667188, 0.494151, 0.168108, 0.276617, 0.791734, 0.563014, 0.695285, 0.395563, 0.84779, 0.481501, 0.211235, 0.1161, 0.248291, 0.468126, 0.142578, 0.720471, 0.433908, 0.00402456, 0.797532, 0.397055, 0.00124282, 0.174416, 0.499457, 0.675162, 0.549055, 0.0308179, 0.455741, 0.951248, 0.579622, 0.232244, 0.095952, 0.705142, 0.811161, 0.884025, 0.671033, 0.109632, 0.0172564, 0.852252, 0.493004, 0.70967, 0.739082, 0.810424, 0.874143, 0.515453, 0.0509048, 0.805177, 0.0596403, 0.331133, 0.0722358, 0.588113, 0.152018, 0.798659, 0.741637, 0.941206, 0.798428, 0.941351, 0.206965, 0.31619, 0.452735, 0.328991, 0.00155924, 0.503489, 0.197585, 0.379782, 0.787071, 0.0813422, 0.146286, 0.186084, 0.515209, 0.0547614, 0.420988, 0.990574, 0.547487, 0.947075, 0.42228, 0.354136, 0.209293, 0.113237, 0.985744, 0.22832, 0.00362659, 0.590137, 0.43076, 0.846962, 0.651347, 0.452642, 0.558869, 0.161542, 0.52787, 0.457055, 0.0864066, 0.44481, 0.267609, 0.675741, 0.0862691, 0.831404, 0.826509, 0.0685564, 0.0132215, 0.955576, 0.685168, 0.833347, 0.909061, 0.361298, 0.617204},
{0.239559, 0.228913, 0.453319, 0.596106, 0.21477, 0.865544, 0.215578, 0.173378, 0.121115, 0.522446, 0.114266, 0.383474, 0.550326, 0.926906, 0.37315, 0.162911, 0.57978, 0.297255, 0.219841, 0.0700111, 0.945931, 0.799531, 0.234562, 0.61244, 0.923311, 0.354536, 0.998655, 0.414987, 0.664235, 0.337615, 0.517216, 0.635936, 0.39113, 0.0186245, 0.918554, 0.907198, 0.135333, 0.540171, 0.610079, 0.49754, 0.412201, 0.361362, 0.903346, 0.773125, 0.408518, 0.353819, 0.420251, 0.322867, 0.606736, 0.482498, 0.674758, 0.615733, 0.269723, 0.422016, 0.167659, 0.808794, 0.444834, 0.341065, 0.38291, 0.0274049, 0.025289, 0.501993, 0.936635, 0.222355, 0.184685, 0.498983, 0.808517, 0.71887, 0.760193, 0.447128, 0.647706, 0.603455, 0.915513, 0.313496, 0.906258, 0.473099, 0.263225, 0.492123, 0.317337, 0.689354, 0.668245, 0.2053, 0.892284, 0.345572, 0.937209, 0.0921252, 0.155897, 0.265245, 0.498457, 0.372177, 0.260076, 0.893823, 0.0390952, 0.521055, 0.983575, 0.624252, 0.289424, 0.627677, 0.591668, 0.292386, 0.191209, 0.971801, 0.372164, 0.20347, 0.64673, 0.786932, 0.276519, 0.763623, 0.240132, 0.343725, 0.890446, 0.831211, 0.264148, 0.971841, 0.316684, 0.0373419, 0.565305, 0.251466, 0.579978, 0.529997, 0.710359, 0.864389, 0.1616, 0.319788, 0.586497, 0.140939, 0.720738, 0.503799, 0.032505, 0.414774, 0.921518, 0.36035, 0.877492, 0.147369, 0.908674, 0.704664, 0.0763125, 0.061693, 0.890925, 0.934371, 0.437745, 0.549525, 0.794207, 0.676746, 0.0810085, 0.062275, 0.404278, 0.374649, 0.4829, 0.499826, 0.920258, 0.955395, 0.122664, 0.940357, 0.219755, 0.769342, 0.797917, 0.293471, 0.951022, 0.975159, 0.32001, 0.170871, 0.672512, 0.225017, 0.481651, 0.461701, 0.796979, 0.712497, 0.575276, 0.922727, 0.377376, 0.675684, 0.966509, 0.748906, 0.943481, 0.699884, 0.570672, 0.643828, 0.750271, 0.240991, 0.0358922, 0.328517, 0.0388558, 0.993899, 0.12923, 0.355074, 0.404779, 0.449071, 0.98996, 0.429491, 0.313258, 0.978768, 0.521238, 0.929604, 0.628625, 0.0522019, 0.979028, 0.591114, 0.601808, 0.103684},
{0.416646, 0.773075, 0.718838, 0.541689, 0.842907, 0.750506, 0.146389, 0.932893, 0.681, 0.81277, 0.498035, 0.0104695, 0.351332, 0.75262, 0.644824, 0.592661, 0.684626, 0.614106, 0.384482, 0.291049, 0.812322, 0.976392, 0.91044, 0.563216, 0.445181, 0.486549, 0.580222, 0.686372, 0.111684, 0.996644, 0.990047, 0.204401, 0.503091, 0.621406, 0.681371, 0.748764, 0.547727, 0.341324, 0.536919, 0.538165, 0.164056, 0.745628, 0.357035, 0.53538, 0.752377, 0.63672, 0.410655, 0.652216, 0.138929, 0.885173, 0.0776659, 0.43618, 0.178293, 0.299221, 0.112655, 0.69365, 0.00634652, 0.477144, 0.307223, 0.590661, 0.992366, 0.646445, 0.620287, 0.71468, 0.786138, 0.591205, 0.507096, 0.27623, 0.908598, 0.902621, 0.0373981, 0.460102, 0.374173, 0.136948, 0.72028, 0.377851, 0.476453, 0.342299, 0.637966, 0.249804, 0.702407, 0.88505, 0.50018, 0.314154, 0.655415, 0.728738, 0.37336, 0.527856, 0.439104, 0.213737, 0.831888, 0.466788, 0.959207, 0.0330039, 0.462645, 0.719766, 0.307802, 0.497869, 0.318514, 0.421344, 0.710587, 0.300963, 0.814394, 0.504314, 0.809646, 0.982875, 0.191713, 0.327371, 0.255662, 0.616017, 0.532034, 0.333541, 0.139248, 0.39573, 0.124476, 0.224205, 0.352035, 0.28374, 0.0536448, 0.884078, 0.452313, 0.493879, 0.706851, 0.174423, 0.0667942, 0.913625, 0.0973564, 0.676728, 0.438857, 0.523769, 0.679781, 0.700401, 0.929644, 0.0938491, 0.181043, 0.243439, 0.455172, 0.195492, 0.411169, 0.155996, 0.172943, 0.686273, 0.00430945, 0.294151, 0.0241793, 0.612311, 0.698692, 0.612667, 0.0602947, 0.882653, 0.146404, 0.176469, 0.348125, 0.510247, 0.318973, 0.732864, 0.506905, 0.752118, 0.679892, 0.310507, 0.884404, 0.775911, 0.674831, 0.537313, 0.378264, 0.895901, 0.120728, 0.685878, 0.199385, 0.280724, 0.515654, 0.916616, 0.918605, 0.602595, 0.90508, 0.41323, 0.132131, 0.241081, 0.433699, 0.90298, 0.173015, 0.25234, 0.250205, 0.487806, 0.523842, 0.935926, 0.780528, 0.540375, 0.534413, 0.603602, 0.375864, 0.944835, 0.396163, 0.273309, 0.84834, 0.540457, 0.440445, 0.852361, 0.76869, 0.0522478},
};

static const std::vector<float> costs = {690.743, 104.9, 743.672, 600.997, 310.837, 197.273, 347.706, 875.14, 72.1297, 853.144, 972.268, 36.6623, 693.48, 139.327, 941.943, 844.656, 466.804, 193.693, 599.089, 197.235, 482.379, 36.0621, 681.421, 427.915, 651.702, 670.684, 860.333, 321.514, 804.296, 478.659, 889.309, 403.934, 935.01, 741.631, 407.788, 362.157, 411.961, 555.829, 514.918, 523.935, 189.854, 697.912, 275.17, 244.971, 385.047, 648.762, 930.737, 311.419, 139.792, 433.356, 59.093, 769.505, 930.285, 860.318, 153.234, 158.247, 404.064, 278.235, 274.356, 937.635, 760.592, 839.234, 522.765, 1.31245, 138.306, 905.903, 601.579, 678.302, 486.782, 641.184, 629.06, 325.253, 348.837, 81.3402, 65.8609, 375.241, 377.746, 603.695, 153.934, 714.871, 59.0435, 53.1763, 614.426, 577.127, 670.64, 612.56, 822.183, 57.9172, 904.067, 488.12, 109.307, 686.28, 91.1349, 541.199, 359.896, 575.134, 847.427, 69.4827, 135.554, 305.188, 321.97, 424.089, 518.395, 962.706, 758.092, 371.686, 393.442, 919.303, 847.82, 450.167, 358.622, 414.86, 180.957, 215.475, 782.399, 289.549, 658.232, 660.049, 235.856, 552.293, 998.959, 993.343, 184.248, 916.36, 948.779, 914.421, 13.4396, 712.633, 610.561, 777.613, 178.684, 537.729, 483.544, 401.795, 653.387, 731.782, 580.329, 554.123, 253.604, 39.4083, 264.957, 321.338, 555.817, 510.795, 550.728, 572.659, 469.813, 485.132, 863.136, 38.6388, 276.754, 8.68091, 179.792, 759.859, 457.725, 878.93, 59.7984, 919.451, 434.548, 532.725, 263.258, 647.999, 703.34, 510.743, 298.711, 579.051, 431.711, 459.794, 875.302, 346.898, 608.501, 594.741, 376.238, 684.082, 246.187, 691.201, 859.356, 533.297, 833.88, 959.065, 29.88, 856.589, 361.917, 326.457, 482.302, 3.33137, 696.203, 322.834, 955.808, 39.653, 151.345, 880.58, 850.94, 1.34934, 675.278, 292.047, 717.662, 996.221, 85.1381, 936.509};

static const std::vector<float> min_impressions = {0.395241, 0.263003, 0.486061, 0.870269, 0.160166};

//
#endif
