#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{4.61535,7.2499,1.6909,3.47398,4.22027,9.14684,5.37384,5.01444,5.43957,7.29663,6.72296,5.29299,3.20316,4.28161,2.51362,5.00633,8.37992,8.36431,8.68283,1.94341},
{5.8445,8.73032,1.19478,5.6369,8.18639,1.43233,6.70907,3.32524,6.33731,2.13814,6.682,9.14416,5.92339,9.50694,7.47376,3.07227,5.06784,5.17449,1.77555,5.46656},
{4.70424,2.95069,8.09926,7.39465,2.82507,4.85218,8.55643,9.223,3.60791,5.01258,6.97813,5.45367,9.28329,7.73916,2.64313,6.31441,2.87931,5.17521,6.68192,5.46534},
{5.69173,3.33624,4.75685,6.0622,7.77077,6.98717,4.82779,6.74375,1.35599,6.43548,9.62512,7.9747,9.48738,9.60337,1.75485,1.5185,2.91991,3.49072,9.18197,9.60785},
{5.74748,3.7406,6.10906,2.70199,5.30206,9.48464,3.5473,8.49248,1.52843,1.16981,8.60846,1.26492,1.99583,4.02263,3.56359,5.59407,2.80696,3.8851,4.89859,2.57083},
{5.97604,1.69151,6.96652,7.18893,8.54849,6.19392,5.2235,9.53426,2.52506,8.42073,5.03286,8.79064,3.26534,8.94072,1.33082,9.66308,6.2282,2.37023,8.79924,2.95908},
{2.51628,2.98469,5.07895,9.9986,7.69862,7.72558,8.25083,5.62272,2.89517,6.64713,3.47183,7.54112,1.0503,5.06944,3.62037,1.28944,1.81838,5.05381,5.9528,6.11191},
{7.57208,5.00697,2.57627,8.08828,4.90924,2.10487,9.07687,2.61781,2.58591,6.203,7.38498,6.03131,9.00652,5.84489,4.91924,6.44404,3.6693,5.55248,7.09263,3.57434},
{6.70656,8.55696,9.97865,6.36277,3.34584,9.61657,8.79177,9.68566,8.78136,7.64936,6.16213,7.53624,2.7318,4.72174,9.8036,7.98247,8.70754,3.73139,2.88772,6.38455},
{3.14779,4.76417,7.9275,8.33382,6.57569,5.15585,8.06685,8.34395,8.95664,9.68098,5.63559,7.14128,8.94317,1.18811,8.36388,2.16968,4.95689,1.81339,4.04971,5.10473},
{3.79796,8.92571,2.28569,2.89431,8.49583,1.94303,3.94646,8.06945,7.99443,3.87057,6.08039,4.02921,8.32217,6.26663,2.3704,2.38289,2.25293,2.94289,1.99576,3.77854},
{6.8224,5.6074,2.66837,3.08894,5.54321,3.3331,3.12202,1.1351,2.75908,7.4122,5.1707,3.49081,4.39069,7.8731,2.499,9.9805,1.28911,9.59823,7.59099,4.86294},
{7.05208,9.12232,9.61272,2.17219,4.29691,8.72101,6.48512,3.1721,8.65671,4.35149,7.0912,5.35914,4.40382,4.26257,1.42136,3.52967,6.79004,7.42635,4.99685,5.24772},
{5.81153,3.46411,5.96967,7.31498,4.32463,4.61567,5.1337,2.48838,1.41518,5.30525,5.20214,5.76038,2.92536,3.61771,1.31605,9.05888,5.50436,5.15048,1.2687,6.17246},
{2.35163,6.33548,7.63073,8.44581,6.72653,7.33676,8.45056,4.3974,7.39247,2.10091,4.21949,4.35741,3.27582,3.35718,8.4776,8.62036,6.46203,5.60485,1.7538,7.75434},
{4.98234,1.03104,9.92511,8.35068,4.68685,9.21232,4.82594,9.57584,5.37028,2.16727,8.41534,5.98692,1.74175,6.94729,9.50121,9.8043,3.02635,7.92264,5.17325,2.5888},
{3.68909,7.8403,9.16908,3.33817,7.21433,9.56069,4.97303,9.66582,3.63743,9.40326,8.80498,6.74351,8.26295,4.55377,8.56859,1.49582,2.64789,4.51306,3.85359,5.11484},
{5.84482,1.40382,6.16956,9.26796,1.06639,1.70123,9.79482,9.51523,6.09892,1.33148,2.48842,1.30228,3.57354,3.60149,4.20304,4.06751,3.59707,3.23171,1.33778,6.8586},
{6.38614,1.08212,9.65062,4.16199,7.73382,2.75433,8.02596,2.71111,1.46764,5.33837,9.28293,2.22144,5.42782,6.11825,4.9613,6.16633,4.99544,9.10846,5.50408,7.1167},
{5.65273,5.82676,3.49558,6.00448,4.0971,1.13472,6.4925,1.16686,4.76468,3.92284,6.12532,3.62314,2.56586,5.37869,7.63083,9.77848,1.56119,5.86592,3.63752,7.9446},
{1.2505,3.2887,6.44125,5.08002,9.00134,7.92324,9.73599,7.99067,2.91381,5.11738,3.52177,5.89206,3.54502,6.69672,1.17895,7.55593,4.85642,9.55842,4.63523,7.19346},
{7.69675,6.20955,8.63618,9.20263,7.94122,2.03273,7.91199,6.11534,2.31775,4.86092,8.35652,3.65061,9.10249,1.95117,7.36536,3.28324,3.74129,6.21212,2.93903,7.23599},
{9.91924,5.42812,6.14017,9.22834,9.77188,8.0206,9.11923,5.05934,6.37428,8.91305,8.07427,5.64863,4.56359,6.56344,9.10969,9.80288,7.39938,8.0965,7.71372,4.1196},
{7.45286,1.86687,2.92478,8.41003,7.42189,7.2699,1.59012,9.46684,1.89511,6.76249,3.70928,6.7524,8.22148,8.96943,7.01621,1.99474,3.34801,7.54883,1.07969,4.52098},
{6.56841,3.25378,9.0573,1.04328,5.20651,3.17981,6.30807,5.12786,8.21636,6.30627,8.38569,5.5131,8.6517,1.2465,2.84475,7.02405,5.62133,7.77007,3.39869,8.94287},
{5.95091,4.62544,3.347,2.09376,2.67736,4.87344,1.2716,7.25182,4.27427,5.22592,7.28616,3.90992,2.50616,3.61993,3.79156,8.4114,5.73368,3.41162,1.36791,1.95924},
{5.14944,3.24856,8.72264,3.31903,9.82356,6.28089,9.32704,2.80162,6.20807,9.22192,4.74834,5.01491,6.12252,4.19925,6.99707,1.28643,8.30157,3.51665,8.66301,9.32166},
{7.04778,7.03325,3.47639,6.48879,3.68995,6.85978,7.02764,9.14342,1.41726,5.28043,9.32147,4.61851,4.63635,3.38577,6.71584,3.38973,4.33586,1.96497,8.59028,8.19642},
{4.40219,4.66229,3.74194,9.2483,3.34356,7.77302,4.10592,1.34162,5.28083,6.76789,4.52551,6.77252,5.15282,4.94138,5.32898,6.00073,4.54869,7.28238,2.05681,5.40528},
{3.38594,9.7668,6.17634,2.53552,6.37238,9.5549,1.77671,4.09666,8.67134,2.61411,1.37994,7.6157,1.53494,3.74874,2.89594,1.28411,5.48102,1.81913,3.20522,7.46544},
{5.95,5.04411,3.88027,4.34141,7.43437,9.3998,8.86232,4.57084,3.68183,6.0746,9.94001,1.2003,7.67154,7.86445,1.67997,5.26083,8.94152,6.74761,5.77333,1.03636},
{5.54774,7.687,8.50142,6.89554,9.18516,4.175,8.50263,9.1136,6.11711,3.9328,1.7581,8.80459,6.47745,4.58562,2.63322,7.74686,8.0714,6.26927,1.36736,7.03504},
{5.16714,8.99689,5.69964,7.09742,4.58877,3.97621,5.99952,1.15415,3.36556,6.35901,9.60097,1.35737,8.86996,9.73482,1.75888,3.23302,5.8126,6.13203,3.91887,8.31065},
{7.91431,6.06362,6.30989,2.07812,2.0303,5.64064,5.92367,2.17632,4.97576,6.14569,5.73016,6.68159,6.23023,9.46067,4.66838,7.6064,6.2844,7.89754,7.51033,2.36707},
{4.71519,8.55698,6.87195,7.75942,1.6963,5.2454,6.65345,2.8515,2.89079,9.08254,7.62845,3.13948,2.64807,5.125,8.22504,6.50363,4.17057,2.82815,6.84343,1.6391},
{5.38839,4.15075,3.33964,8.28073,8.66906,5.78886,1.75555,5.18445,2.82851,3.2454,3.71729,7.74827,8.98721,2.45065,6.06323,1.74556,1.82806,4.24091,7.62818,1.3761},
{1.64171,3.25195,6.94292,3.52038,1.17386,1.91322,6.42419,4.54403,2.94916,1.29009,4.41843,2.2421,8.86629,1.79656,1.37839,6.42827,8.7621,6.61547,5.41792,1.29388},
{7.72635,3.74721,6.88044,2.60064,8.08728,7.14101,2.61084,4.91625,2.57916,9.71359,8.93521,1.64868,7.08969,1.23399,8.15313,6.73624,4.34516,5.59397,7.3612,1.13021},
{9.31726,5.09658,3.78751,3.56662,8.09713,4.96759,3.77275,9.15341,9.32761,1.85666,4.60008,8.89906,7.24601,1.1789,5.5416,1.01979,5.86556,9.41588,3.55273,2.394},
{7.80954,5.72923,2.36226,5.22302,9.38384,1.69426,9.3399,7.92172,8.18816,6.73966,7.67674,9.36978,2.32122,9.80644,6.66426,4.1459,6.8938,2.67119,5.0594,7.64642},
{4.04322,9.20372,6.5669,8.58223,4.35242,6.65462,6.5349,7.55293,1.07257,6.39342,8.74455,6.5065,4.01962,2.52604,4.0992,5.56067,7.16571,8.76558,8.71207,6.07873},
{5.34733,5.47728,7.09261,9.27853,9.67316,9.56911,4.98109,5.9356,5.91677,1.38085,5.76722,3.67516,4.38281,4.33244,6.42731,5.85239,7.5352,6.53249,2.24378,4.56168},
{5.99827,8.55805,7.97484,1.16543,9.2448,4.79847,4.50039,9.41581,9.72276,7.65562,9.42949,2.59232,3.43601,8.00326,8.73725,3.87252,5.68178,1.6919,6.9601,4.77628},
{7.22301,7.64472,2.39496,7.69694,1.39561,5.61372,6.6354,5.2836,3.07607,1.88112,7.53487,1.71968,2.78064,5.2947,4.79722,9.03594,3.36701,8.38872,2.87937,8.60792},
{3.8459,4.85186,7.85712,2.1336,5.39191,2.52882,6.71613,6.13431,7.41417,2.40432,6.39138,7.81068,2.94653,4.30338,6.21175,5.84272,5.01043,5.47343,7.28957,2.63869},
{3.65124,9.81526,5.42709,5.48365,4.18633,8.99957,4.62683,2.36425,9.37908,7.74896,2.95841,7.99987,6.5649,7.40847,3.97603,1.12958,5.66444,4.40571,7.91361,7.32281},
{3.72043,2.41096,4.56647,4.00223,8.63184,1.64254,2.75487,4.11253,5.92376,4.38716,4.66712,2.69706,6.38863,5.90173,6.13775,5.8415,5.77567,2.64277,3.71667,6.83186},
{4.11718,8.04476,6.35116,2.76868,9.00626,3.44079,8.26794,2.66656,7.16262,8.42795,1.67418,4.75342,3.79574,5.30675,1.33538,2.33549,6.77966,2.31205,4.68759,8.59017},
{6.2727,7.85075,9.37082,3.98769,1.88612,7.38451,3.89468,6.88459,4.18752,6.68984,4.60421,8.82191,9.4677,5.72744,3.9915,5.20828,9.10307,3.75271,8.60869,3.44791},
{4.03978,6.04903,8.23547,1.61767,1.22624,6.09949,5.71367,4.5582,9.75935,5.02796,3.8184,9.31681,7.01516,4.04453,4.7056,7.77995,3.6436,8.1736,5.79381,6.35256}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {907.215,918.193,403.493,585.385,737.71,912.901,681.941,404.098,97.4043,761.436,540.807,649.571,142.131,824.212,349.425,967.799,71.3774,602.465,128.812,842.27,416.916,829.969,868.701,151.83,492.345,596.374,663.215,728.961,505.93,839.827,23.0837,319.054,786.711,273.045,913.26,909.437,165.766,958.695,138.161,881.944,911.266,53.94,294.102,321.652,169.485,711.405,10.025,935.965,90.7255,903.702};


static const std::vector<float> min_impressions = {39.4886,38.6696,49.9263,46.0787,48.0526,32.5963,46.4178,36.7597,45.2999,45.2807,46.0572,47.6296,46.5529,33.8494,46.56,25.1148,48.939,29.6121,43.8393,41.4136};


#endif
