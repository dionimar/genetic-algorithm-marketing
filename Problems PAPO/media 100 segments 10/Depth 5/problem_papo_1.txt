#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(events[50], events[65]),events[46]),events[98]),events[15]),events[18]),cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(events[79], events[37]),events[98]),events[93]),events[62]),events[25]),cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(events[46], events[75]),events[90]),events[85]),events[45]),events[64]),cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(events[58], events[70]),events[26]),events[79]),events[30]),events[96]),cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(events[31], events[32]),events[8]),events[66]),events[63]),events[13]),cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(events[98], events[40]),events[46]),events[50]),events[80]),events[91]),cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(events[66], events[42]),events[37]),events[48]),events[31]),events[61]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[46], events[5]),events[84]),events[7]),events[78]),events[20]),cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(events[98], events[23]),events[33]),events[86]),events[36]),events[22]),cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(events[87], events[79]),events[43]),events[41]),events[82]),events[46])};


static const std::vector< std::vector<float> > prob = {{0.122467, 0.479983, 0.92257, 0.881562, 0.903921, 0.853285, 0.177953, 0.154362, 0.154612, 0.178182, 0.0249888, 0.49482, 0.67139, 0.245645, 0.554435, 0.146116, 0.31908, 0.726418, 0.655801, 0.718755, 0.0531862, 0.00750648, 0.850317, 0.156918, 0.288071, 0.786397, 0.345293, 0.713939, 0.364319, 0.702536, 0.17736, 0.733288, 0.631594, 0.553745, 0.813254, 0.105563, 0.0475703, 0.0965397, 0.348989, 0.491653, 0.164498, 0.614443, 0.674423, 0.234137, 0.920875, 0.875872, 0.365555, 0.118698, 0.949933, 0.00756627, 0.508727, 0.86134, 0.557305, 0.124192, 0.611484, 0.469252, 0.623498, 0.913112, 0.432769, 0.418713, 0.402686, 0.91187, 0.20661, 0.846523, 0.333201, 0.720082, 0.569288, 0.600898, 0.147614, 0.547725, 0.529989, 0.126208, 0.274565, 0.217659, 0.475942, 0.818329, 0.147654, 0.335507, 0.386364, 0.798037, 0.409603, 0.772902, 0.683689, 0.806829, 0.407328, 0.467792, 0.860689, 0.741196, 0.683899, 0.216006, 0.373783, 0.344594, 0.558574, 0.270822, 0.995805, 0.66902, 0.864624, 0.669071, 0.26367, 0.80294},
{0.911401, 0.320865, 0.397283, 0.229285, 0.14877, 0.134768, 0.326297, 0.130893, 0.323988, 0.97747, 0.104236, 0.0464996, 0.834905, 0.471333, 0.0810989, 0.642393, 0.465005, 0.037319, 0.237032, 0.988919, 0.403946, 0.644589, 0.824186, 0.636533, 0.981364, 0.195644, 0.77699, 0.408139, 0.33717, 0.878683, 0.0129833, 0.118947, 0.295566, 0.694644, 0.558625, 0.00859327, 0.530535, 0.719932, 0.606966, 0.0567791, 0.843815, 0.892832, 0.253602, 0.244423, 0.169018, 0.891924, 0.458739, 0.712516, 0.18666, 0.691592, 0.72692, 0.633099, 0.751164, 0.731356, 0.831161, 0.271714, 0.388967, 0.907561, 0.17544, 0.112206, 0.395176, 0.580201, 0.146476, 0.145881, 0.0729366, 0.322523, 0.239825, 0.69654, 0.242489, 0.388715, 0.388913, 0.995975, 0.889647, 0.237949, 0.268624, 0.573847, 0.846116, 0.790617, 0.292199, 0.9895, 0.354087, 0.624974, 0.262656, 0.358673, 0.284453, 0.519283, 0.616538, 0.334651, 0.11895, 0.993997, 0.00301202, 0.198342, 0.488291, 0.116221, 0.260245, 0.883401, 0.659446, 0.928882, 0.235435, 0.278274},
{0.478515, 0.203153, 0.747257, 0.903857, 0.841242, 0.500469, 0.248477, 0.969836, 0.578218, 0.479787, 0.548135, 0.318968, 0.128084, 0.234695, 0.0846268, 0.0261662, 0.72174, 0.265221, 0.786039, 0.103507, 0.247621, 0.285432, 0.625886, 0.715936, 0.206465, 0.807646, 0.0676017, 0.942866, 0.57873, 0.184322, 0.630747, 0.810729, 0.320046, 0.671933, 0.0851401, 0.708695, 0.19731, 0.292275, 0.260593, 0.819582, 0.719408, 0.914667, 0.803916, 0.990599, 0.922913, 0.801138, 0.70143, 0.0190008, 0.488112, 0.893303, 0.0544247, 0.784698, 0.0185134, 0.60274, 0.770196, 0.0534134, 0.748543, 0.971757, 0.00280661, 0.012911, 0.0574062, 0.157696, 0.522969, 0.696949, 0.605788, 0.326811, 0.893866, 0.315642, 0.590887, 0.594877, 0.759393, 0.637151, 0.942894, 0.198502, 0.352196, 0.256607, 0.0136686, 0.910374, 0.444201, 0.594596, 0.537871, 0.737374, 0.236906, 0.597873, 0.627445, 0.447675, 0.296174, 0.719789, 0.408832, 0.329155, 0.796704, 0.575912, 0.149746, 0.987252, 0.659797, 0.822171, 0.533785, 0.99544, 0.888332, 0.230311},
{0.308495, 0.863058, 0.0661676, 0.923494, 0.532338, 0.908147, 0.748237, 0.191942, 0.826542, 0.770391, 0.0101535, 0.914532, 0.94757, 0.339341, 0.302461, 0.268898, 0.169083, 0.181648, 0.643665, 0.0858121, 0.939975, 0.44695, 0.407871, 0.878149, 0.657883, 0.246084, 0.0536082, 0.933596, 0.733313, 0.698604, 0.931287, 0.975671, 0.62437, 0.939671, 0.412827, 0.902811, 0.461297, 0.73638, 0.290826, 0.685996, 0.101298, 0.412785, 0.453976, 0.477983, 0.857005, 0.448832, 0.400574, 0.366702, 0.769895, 0.381588, 0.233195, 0.517081, 0.807576, 0.815938, 0.423771, 0.128765, 0.0845284, 0.210437, 0.61064, 0.150399, 0.943002, 0.215737, 0.192047, 0.288146, 0.187444, 0.630809, 0.168967, 0.677585, 0.92738, 0.830246, 0.887761, 0.805899, 0.00514561, 0.227134, 0.742149, 0.683185, 0.142224, 0.0767998, 0.440536, 0.520776, 0.955858, 0.804881, 0.803111, 0.453155, 0.395063, 0.708537, 0.621287, 0.271482, 0.587367, 0.55386, 0.09895, 0.250637, 0.480075, 0.304753, 0.375324, 0.440712, 0.611149, 0.211854, 0.201269, 0.887292},
{0.353383, 0.672628, 0.915281, 0.276048, 0.816125, 0.879366, 0.759021, 0.752351, 0.296097, 0.685871, 0.782162, 0.0602226, 0.528912, 0.881091, 0.897304, 0.864394, 0.0498408, 0.3308, 0.931066, 0.853031, 0.710334, 0.802339, 0.991891, 0.388759, 0.177799, 0.0625014, 0.224243, 0.173831, 0.0139064, 0.311651, 0.456476, 0.914898, 0.713209, 0.691256, 0.459676, 0.764116, 0.70973, 0.24742, 0.942187, 0.583679, 0.313659, 0.904576, 0.60696, 0.81956, 0.261241, 0.100461, 0.695875, 0.299403, 0.910946, 0.067375, 0.334286, 0.569524, 0.279083, 0.571503, 0.424332, 0.383065, 0.771838, 0.506321, 0.633107, 0.743277, 0.393329, 0.342028, 0.790727, 0.355846, 0.797378, 0.213619, 0.589026, 0.263349, 0.0754413, 0.584668, 0.00516883, 0.241195, 0.974816, 0.757262, 0.312889, 0.263333, 0.816906, 0.733008, 0.603547, 0.243669, 0.670884, 0.0497624, 0.0420679, 0.974841, 0.826735, 0.560693, 0.40236, 0.602042, 0.358061, 0.202495, 0.786138, 0.786447, 0.427879, 0.44976, 0.670724, 0.909793, 0.334321, 0.840684, 0.133824, 0.187601},
{0.126832, 0.62981, 0.430407, 0.410867, 0.692723, 0.478388, 0.477483, 0.104464, 0.778267, 0.604248, 0.630342, 0.766226, 0.0364466, 0.868421, 0.0522198, 0.625241, 0.508118, 0.531565, 0.490971, 0.22697, 0.497637, 0.180138, 0.996526, 0.193787, 0.554876, 0.387233, 0.950625, 0.737289, 0.303101, 0.0304449, 0.114777, 0.291784, 0.0399423, 0.194626, 0.690656, 0.881491, 0.0634123, 0.663673, 0.864483, 0.169524, 0.830588, 0.613716, 0.722915, 0.00516171, 0.254846, 0.739923, 0.490586, 0.593101, 0.276696, 0.355321, 0.321794, 0.460414, 0.212595, 0.352304, 0.313473, 0.533953, 0.210914, 0.0142894, 0.571873, 0.926499, 0.915593, 0.0111605, 0.47191, 0.909627, 0.552207, 0.982445, 0.851019, 0.522304, 0.783711, 0.779032, 0.583683, 0.345224, 0.72277, 0.275985, 0.586202, 0.337189, 0.0110707, 0.387175, 0.0928935, 0.803193, 0.644042, 0.783319, 0.21776, 0.444418, 0.715202, 0.271794, 0.519558, 0.900634, 0.885135, 0.592519, 0.661186, 0.989938, 0.305688, 0.0703027, 0.255467, 0.888964, 0.306342, 0.0579529, 0.0468208, 0.850637},
{0.661408, 0.756672, 0.555455, 0.649674, 0.569709, 0.644664, 0.599084, 0.89698, 0.323086, 0.418698, 0.700568, 0.927846, 0.217204, 0.440074, 0.866105, 0.934273, 0.960729, 0.345486, 0.580734, 0.117966, 0.901157, 0.627425, 0.177625, 0.40157, 0.897975, 0.688827, 0.578916, 0.494263, 0.253953, 0.526066, 0.20342, 0.604079, 0.0767074, 0.846487, 0.845508, 0.861296, 0.660788, 0.392681, 0.0608319, 0.52607, 0.0229246, 0.561895, 0.800101, 0.6528, 0.477946, 0.940034, 0.349064, 0.690811, 0.377749, 0.489875, 0.807159, 0.985955, 0.0858274, 0.302532, 0.560934, 0.322683, 0.320615, 0.757712, 0.328253, 0.73413, 0.660168, 0.357294, 0.581294, 0.920763, 0.00446565, 0.249947, 0.79496, 0.928833, 0.0268578, 0.901349, 0.0481177, 0.248151, 0.863126, 0.930545, 0.158254, 0.46307, 0.616753, 0.958755, 0.28586, 0.840678, 0.228567, 0.764281, 0.327816, 0.761237, 0.697313, 0.942449, 0.711697, 0.462381, 0.903278, 0.156864, 0.879067, 0.460564, 0.58995, 0.903007, 0.590811, 0.394919, 0.428746, 0.185977, 0.478408, 0.789947},
{0.735891, 0.329825, 0.19293, 0.587783, 0.0953136, 0.937296, 0.932677, 0.2675, 0.845323, 0.970929, 0.783026, 0.682221, 0.919245, 0.846592, 0.789512, 0.609375, 0.186623, 0.620378, 0.0838702, 0.769487, 0.482173, 0.494912, 0.00170993, 0.148121, 0.570622, 0.316324, 0.114354, 0.377445, 0.0234947, 0.580418, 0.941429, 0.635529, 0.663714, 0.477521, 0.598541, 0.312136, 0.822822, 0.172463, 0.397859, 0.734922, 0.194845, 0.214132, 0.595359, 0.427724, 0.556309, 0.265681, 0.555304, 0.0163355, 0.567632, 0.285562, 0.807474, 0.567328, 0.604516, 0.445631, 0.895218, 0.760791, 0.531906, 0.87638, 0.830297, 0.384884, 0.304959, 0.680459, 0.776442, 0.500327, 0.599855, 0.205434, 0.147615, 0.18365, 0.381311, 0.970936, 0.269758, 0.954107, 0.697866, 0.669089, 0.0457522, 0.415067, 0.267923, 0.0778574, 0.488902, 0.172587, 0.993305, 0.075702, 0.22047, 0.637697, 0.900411, 0.204032, 0.186862, 0.0102513, 0.594867, 0.694507, 0.901829, 0.255622, 0.979827, 0.766874, 0.679065, 0.0928361, 0.8018, 0.865687, 0.569635, 0.142495},
{0.250623, 0.83782, 0.0433027, 0.912249, 0.593931, 0.796733, 0.420349, 0.566387, 0.423359, 0.808171, 0.373006, 0.708471, 0.128954, 0.46537, 0.835919, 0.918931, 0.838411, 0.439237, 0.484742, 0.712959, 0.404389, 0.764975, 0.281768, 0.512884, 0.392452, 0.22369, 0.90204, 0.915327, 0.201605, 0.952545, 0.993905, 0.603118, 0.531886, 0.160432, 0.155924, 0.052999, 0.246349, 0.389589, 0.714278, 0.232747, 0.0913409, 0.873888, 0.35112, 0.544889, 0.103509, 0.424372, 0.909676, 0.168807, 0.149723, 0.525111, 0.829465, 0.133361, 0.916757, 0.495464, 0.517968, 0.802663, 0.48195, 0.396846, 0.429143, 0.519322, 0.416894, 0.337041, 0.106213, 0.297722, 0.33389, 0.338104, 0.217561, 0.121443, 0.212428, 0.638455, 0.560205, 0.135057, 0.354029, 0.913036, 0.271889, 0.329577, 0.535161, 0.917204, 0.305777, 0.269287, 0.00970296, 0.390308, 0.50529, 0.867854, 0.764673, 0.884468, 0.636955, 0.291997, 0.179458, 0.159669, 0.124014, 0.521097, 0.0623074, 0.950446, 0.538926, 0.873112, 0.41442, 0.0166915, 0.784225, 0.256997},
{0.204834, 0.789515, 0.584033, 0.289291, 0.200878, 0.273032, 0.660175, 0.890374, 0.32402, 0.331752, 0.747573, 0.486019, 0.634983, 0.803942, 0.386989, 0.524078, 0.382366, 0.126373, 0.222052, 0.727996, 0.857566, 0.0645316, 0.459566, 0.778623, 0.92848, 0.349978, 0.334821, 0.964814, 0.401126, 0.590662, 0.976561, 0.00965862, 0.329669, 0.618656, 0.342498, 0.360745, 0.302799, 0.759955, 0.00721389, 0.588246, 0.334817, 0.392015, 0.734988, 0.66992, 0.425533, 0.694999, 0.745556, 0.885354, 0.221391, 0.309217, 0.0115345, 0.831215, 0.601502, 0.393738, 0.805342, 0.160082, 0.833504, 0.67246, 0.00787228, 0.339991, 0.0397348, 0.195514, 0.955671, 0.212596, 0.872405, 0.841309, 0.388378, 0.885259, 0.952639, 0.913036, 0.467352, 0.59444, 0.389141, 0.690034, 0.573814, 0.00272562, 0.738661, 0.429896, 0.429634, 0.706528, 0.855367, 0.65769, 0.784344, 0.692404, 0.948423, 0.913162, 0.544238, 0.813365, 0.863456, 0.516064, 0.820804, 0.934249, 0.358555, 0.417023, 0.323065, 0.719931, 0.37521, 0.935665, 0.0114975, 0.58966},
};

static const std::vector<float> costs = {474.672, 46.3372, 363.408, 842.658, 126.648, 990.586, 524.857, 851.812, 157.601, 66.1097, 563.637, 699.302, 786.257, 78.8995, 963.712, 939.891, 455.882, 460.443, 388.298, 690.884, 414.51, 956.699, 896.204, 337.583, 773.611, 968.947, 232.201, 411.448, 210.997, 713.405, 243.266, 603.668, 593.741, 151.755, 775.606, 87.4401, 456.791, 689.352, 64.8436, 730.649, 983.255, 119.192, 757.518, 891.347, 364.183, 192.334, 681.256, 469.076, 242.13, 1.14381, 509.203, 203.217, 541.335, 575.466, 348.422, 518.103, 173.356, 487.991, 88.3426, 259.444, 193.515, 240.876, 178.637, 9.0113, 822.278, 117.554, 179.864, 154.642, 932.966, 20.8629, 922.495, 783.405, 244.739, 831.903, 204.662, 223.663, 572.869, 310.685, 6.90993, 286.657, 205.92, 403.39, 159.718, 657.214, 591.217, 237.071, 754.933, 895.141, 714.114, 902.073, 975.581, 680.893, 516.195, 617.597, 687.716, 756.51, 802.501, 770.585, 774.348, 116.143};

static const std::vector<float> min_impressions = {0.625116, 0.342634, 0.385264, 0.876209, 0.826316, 0.961088, 0.2163, 0.480475, 0.208063, 0.375198};

//
#endif
