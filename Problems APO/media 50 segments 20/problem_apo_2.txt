#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{2.53023,8.53149,5.46956,1.16355,6.49108,4.69063,5.23807,5.47034,2.30447,6.91404,7.10484,1.81333,5.32868,7.45954,8.07829,8.8493,6.29371,2.97562,9.56873,9.80102},
{8.6786,9.01281,2.41726,5.99466,2.6114,3.44552,3.61187,4.31556,6.12062,4.25571,5.00351,4.72949,4.97402,6.66436,7.56382,3.8272,7.28666,4.07365,3.00574,6.66679},
{1.71056,8.7806,2.64933,5.52955,6.5894,2.37775,5.99223,4.69688,1.65414,9.36899,8.89998,4.95564,2.44015,9.53318,9.73195,7.09384,5.87254,9.31545,9.86089,4.65325},
{5.24881,3.04803,4.31599,5.92989,7.63369,9.90933,4.29476,7.05697,5.10434,6.03666,1.92948,9.4005,9.82586,9.01923,5.24321,8.03159,1.77533,2.75267,4.83567,3.94118},
{4.85286,6.76349,6.57427,7.16817,6.59275,5.79076,2.19311,3.22243,5.46861,8.07844,4.99013,8.8672,2.12481,4.75045,1.54669,4.95673,1.3561,1.44067,4.6939,6.09894},
{3.94188,4.81608,2.1993,6.20861,2.16651,3.74512,9.63448,7.10421,9.0552,3.58429,9.13865,5.40018,7.6278,1.96716,4.72164,9.8735,9.33293,6.04652,1.55955,2.21595},
{9.6773,5.31216,8.9515,3.77648,9.90836,7.52631,7.42999,3.55191,8.42151,6.21018,2.48709,8.8947,7.88249,7.89536,6.54712,6.07519,2.65755,7.70034,9.55722,5.95437},
{4.44103,5.65188,1.52077,8.34736,4.0332,6.98314,2.60142,1.43953,8.86811,7.7701,8.93151,3.46872,3.23532,8.848,2.03305,3.49889,9.99675,7.47335,8.94619,6.86376},
{7.69358,3.33876,2.9289,5.20812,3.808,2.75589,5.37306,1.31413,8.51051,4.54964,8.40925,3.67103,6.94496,4.41874,8.04447,1.80424,1.99232,1.47951,8.60493,2.15966},
{5.12745,5.56391,6.95762,8.93844,5.6994,5.2849,3.67351,8.24199,6.51236,4.23035,2.6051,1.00536,4.11154,4.81937,6.85635,8.08068,3.09151,1.34187,2.50549,9.02252},
{9.23558,1.1524,5.83793,6.15375,1.04685,1.39499,4.54666,7.96369,8.88337,5.64895,3.80854,7.82082,7.40353,3.29355,8.13192,3.75629,2.56425,2.43337,1.70821,2.5631},
{8.09071,4.36571,5.1318,8.19162,2.02654,7.17948,4.06041,1.71278,3.96338,2.11609,1.28031,2.41102,9.89621,4.83741,9.74354,5.17012,5.77199,7.43924,5.02601,3.49037},
{2.07957,3.52667,8.08861,8.25951,8.94199,7.53645,3.54999,2.93669,5.85772,1.2752,2.56697,8.93588,3.07033,6.16227,5.59306,2.78261,1.25572,3.27002,7.59968,7.84101},
{8.56603,2.10802,6.92095,2.78253,3.93775,1.12832,8.08597,2.39895,2.64362,5.49173,4.91613,9.6486,6.80892,4.3545,6.55754,5.31806,1.1957,5.386,5.62376,7.35736},
{6.38945,1.78785,1.17926,8.63132,5.99813,9.91159,3.7553,9.80129,1.22258,3.57196,8.75728,2.41364,8.04028,3.26768,3.65455,4.63513,4.66021,1.03214,7.03285,6.99002},
{9.55078,5.62972,2.11524,1.92747,5.13223,2.48653,5.28516,9.01252,4.58937,1.81495,8.795,6.73475,1.59195,3.68422,6.12382,8.84381,4.83036,2.35931,5.4535,2.65155},
{5.708,2.53124,8.09064,5.84411,3.10598,5.57138,4.89219,8.92495,1.0144,3.05568,5.32762,1.1677,6.02178,5.95454,4.34735,5.77043,3.98394,6.72956,1.77905,1.26816},
{5.75211,4.33917,3.13211,7.48435,8.01735,9.47099,4.64406,4.67786,8.5567,4.85233,1.10465,3.33847,5.73093,9.18629,5.19233,4.61365,9.78292,4.53723,6.78702,5.91427},
{9.50173,8.58777,6.92843,8.81043,8.94839,7.69753,8.59706,8.42086,2.44912,2.81662,3.23792,3.16207,4.00733,6.51787,2.91317,4.10437,5.38249,3.32173,5.67221,6.50549},
{5.464,1.32115,9.99685,6.40318,7.3532,1.45381,9.18235,2.5343,9.4545,4.10801,2.99031,1.27524,4.16965,7.94544,5.62182,5.00144,5.08381,9.88412,1.63412,3.9908},
{1.88622,7.30766,1.36287,7.03251,4.6067,1.5423,9.1809,1.9901,2.19217,2.68323,9.88548,7.30797,1.45509,7.34762,9.74476,4.53702,3.09437,2.67729,6.13637,6.32138},
{7.42523,6.53931,7.45936,7.60865,8.45364,6.94028,1.81807,3.59228,5.88905,6.00982,9.39151,5.56415,4.17744,9.08442,9.23436,7.14289,2.99493,8.88118,8.15828,2.806},
{5.16776,9.9163,5.08069,8.50032,8.29287,8.73904,8.27315,3.74358,1.22619,6.00296,7.14232,4.62943,2.47962,8.01585,7.64842,3.66606,8.2077,7.67305,4.30256,4.74163},
{1.46032,5.53504,4.68634,6.45925,6.13789,9.38819,5.71792,9.33644,2.68615,8.65016,5.08755,2.30073,1.30971,1.60799,3.43096,7.78913,3.71855,1.63951,2.86827,5.68864},
{5.99793,1.65185,9.49339,5.18219,3.58543,2.19213,2.72775,8.75321,1.0963,3.49902,7.80822,8.34433,8.20079,2.60656,6.20545,2.5164,6.34294,6.15686,1.12266,3.66229},
{2.08105,3.31289,2.15431,6.68005,7.05837,3.69157,7.50546,1.09127,6.88103,4.62318,6.67078,6.10771,2.68922,4.76973,3.41846,5.04113,3.07046,2.28021,2.6158,3.0775},
{7.78541,9.07789,9.23054,4.98385,6.166,5.23921,1.99177,3.17494,8.30188,1.36971,3.84198,1.63557,4.66638,2.38053,7.67487,9.30625,7.94804,7.3693,5.08427,5.36385},
{3.99965,1.18181,2.12991,8.49335,2.03241,1.76317,8.26777,3.35684,7.90976,6.87681,7.98544,8.47927,2.65669,1.88657,4.34694,6.31862,4.12774,9.27979,6.94273,4.08769},
{8.86948,4.46855,3.48121,6.90303,2.65554,6.62471,9.94296,9.93519,7.86851,6.81198,6.16927,8.16106,4.69981,4.54492,4.06175,4.59369,1.91353,1.60384,4.37249,4.8918},
{4.63981,4.44857,7.70219,9.85531,6.4864,4.32972,7.43949,7.52971,1.11729,8.11597,7.80798,4.64864,4.26678,2.53654,8.14201,5.98553,1.89444,7.62359,4.57811,3.1118},
{5.20238,7.64244,9.23903,3.57266,6.79537,7.84535,7.37336,6.58439,2.81587,8.26666,3.68144,8.00089,5.98594,9.33443,5.99614,7.82696,8.83387,7.25062,2.94442,1.76735},
{4.36981,5.94114,7.85235,1.76274,4.53855,1.04636,2.58224,2.81133,1.82458,7.40119,9.75508,8.96319,5.46722,4.8239,6.33331,1.99814,3.98936,6.28785,9.32662,9.52263},
{3.4168,3.35332,1.15505,8.45417,6.28632,8.12239,9.90452,9.22814,5.62325,5.52886,7.97154,7.64324,9.51691,1.79936,7.60118,4.86378,9.35243,7.74323,4.25346,1.97507},
{4.51081,8.00809,8.8489,7.46604,8.37515,5.86663,3.60166,3.3883,3.58113,8.90054,7.76845,1.32364,4.2163,8.87524,1.68317,4.74101,1.03151,7.05246,2.01863,1.75737},
{8.98322,8.00825,9.83824,9.98113,9.07926,3.24795,5.27684,5.70157,6.21294,2.58594,2.00142,2.1048,9.50514,4.25347,6.56333,4.97149,5.43526,1.97223,1.84292,5.41785},
{1.70569,2.70789,1.13898,8.94903,7.35099,2.8299,8.21832,9.34209,5.05724,1.06687,2.27889,9.2909,3.02528,1.37448,3.46777,7.20435,4.81335,9.37149,2.34015,4.09059},
{2.67316,7.40337,4.85879,6.7195,3.00572,7.48084,6.89782,4.77228,8.45794,8.55015,4.20765,6.65414,9.90103,7.03726,2.86934,9.71855,2.2176,4.1831,6.95152,7.33943},
{5.73917,9.12164,2.57707,8.41446,6.81765,1.68355,3.26897,8.03728,5.82199,2.40013,5.18273,4.60669,2.26323,6.08422,8.21304,5.93781,1.46247,5.44765,9.44581,6.38212},
{7.50399,5.94049,5.58176,1.47595,7.7408,5.13995,4.45733,9.33772,6.57742,5.98454,5.39844,6.24272,4.16958,7.52725,2.55845,2.05485,8.91578,8.79717,1.0422,8.57985},
{3.90738,2.05193,2.65744,5.04608,1.03034,9.52989,4.28083,2.79443,3.37229,4.98627,4.00293,1.70908,2.15449,7.18087,8.93064,5.95508,8.85295,6.89818,1.47256,2.52917},
{1.01105,4.85881,3.21741,9.74604,8.12281,3.06835,3.85083,8.56794,9.53918,5.80372,3.26227,8.94844,9.04405,2.84947,8.39307,2.78204,9.00822,6.82131,3.36971,9.42764},
{5.28455,3.812,7.33856,7.84086,1.01223,8.52905,8.39656,1.31985,8.83038,3.89064,9.10776,4.5348,3.85899,4.64073,1.12398,2.6264,6.24456,4.86826,5.06497,2.76117},
{7.92415,7.38268,9.91149,3.16072,9.02977,7.74176,5.64364,8.62307,4.65946,4.30445,8.66076,3.91419,4.74556,3.47254,6.62179,6.66034,8.89378,5.03949,4.6421,9.45192},
{5.88493,7.37751,7.72873,4.73958,1.42146,9.0573,9.48301,4.82276,7.03337,5.19339,5.3165,2.47255,2.23987,3.13509,3.27412,4.64691,1.61812,8.72525,4.98019,7.18638},
{8.5012,5.59748,1.05088,3.56505,2.40179,9.13154,5.56004,5.2324,2.07683,3.93387,2.11347,5.92259,4.39789,6.7894,6.76441,8.58157,6.77729,6.88921,1.52373,4.86606},
{6.16236,4.29074,2.8873,6.23474,2.52554,1.51818,1.8991,5.93198,4.33895,4.40515,6.04575,9.63255,7.24176,7.21643,7.66937,4.22908,2.69328,1.25567,3.90935,5.44899},
{8.56239,4.73576,6.17004,6.80615,8.14747,8.53901,2.95498,2.93058,9.40566,9.50912,9.33482,7.00851,9.52753,5.71253,2.32761,5.184,4.56923,3.25886,7.94924,3.99659},
{2.82401,7.28512,8.84324,9.9199,5.58704,9.36323,1.41231,5.47954,6.75279,1.42136,3.65293,7.5982,3.33661,6.00706,7.04297,9.50914,1.47861,5.02131,1.73805,8.64662},
{2.18069,8.64495,7.36606,6.91052,1.11329,1.83974,3.28177,7.46202,4.98435,5.71027,5.54386,3.10563,2.40389,2.42291,2.06063,1.41338,4.37477,1.53491,1.75344,2.44625},
{9.26075,6.77145,5.79738,5.28026,9.82177,6.53618,7.24475,6.05729,5.53659,4.16911,4.52314,1.51157,6.64578,7.88312,9.26849,3.35105,8.26869,1.05091,9.5004,3.9492}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {490.547,838.477,861.747,243.818,751.179,899.156,835.03,759.748,35.2453,74.5227,26.2233,321.938,43.0726,978.856,239.236,470.188,495.997,93.3166,68.8387,419.113,361.378,4.42519,266.126,677.212,856.593,367.821,382.862,600.892,94.842,912.936,361.543,668.385,123.203,642.398,615.447,727.153,114.048,655.356,907.993,115.951,122.633,363.783,336.219,825.279,671.636,440.792,209.242,164.16,525.585,149.317};


static const std::vector<float> min_impressions = {42.4916,47.2247,35.1127,28.9222,45.962,25.5177,45.4333,47.062,20.9543,42.3617,31.9283,33.4349,40.373,22.8866,20.7334,46.9764,45.791,42.7361,27.1549,46.6605};


#endif
