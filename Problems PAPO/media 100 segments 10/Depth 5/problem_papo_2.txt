#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_excl(cons_indep(cons_indep(events[19], events[37]),events[13]),events[64]),events[41]),events[21]),cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[56], events[93]),events[22]),events[55]),events[26]),events[39]),cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(events[52], events[84]),events[14]),events[35]),events[59]),events[36]),cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(events[98], events[97]),events[72]),events[74]),events[95]),events[6]),cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(events[46], events[59]),events[79]),events[45]),events[34]),events[95]),cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(events[31], events[36]),events[22]),events[33]),events[8]),events[15]),cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(events[30], events[46]),events[7]),events[13]),events[49]),events[82]),cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(events[83], events[94]),events[50]),events[27]),events[32]),events[10]),cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[67], events[50]),events[4]),events[48]),events[3]),events[28]),cons_excl(cons_excl(cons_incl(cons_excl(cons_excl(events[94], events[68]),events[26]),events[57]),events[55]),events[39])};


static const std::vector< std::vector<float> > prob = {{0.621236, 0.172347, 0.222666, 0.261697, 0.144794, 0.339643, 0.698698, 0.636368, 0.631496, 0.228818, 0.0851268, 0.888985, 0.764899, 0.705511, 0.0719325, 0.86521, 0.486757, 0.228627, 0.5402, 0.737332, 0.541083, 0.0229956, 0.253437, 0.928479, 0.668659, 0.624942, 0.200237, 0.748966, 0.923253, 0.633392, 0.0804797, 0.551276, 0.445216, 0.276338, 0.84915, 0.854783, 0.658745, 0.664239, 0.460326, 0.182934, 0.219866, 0.114729, 0.477873, 0.762317, 0.0786628, 0.0196385, 0.0146059, 0.217724, 0.828265, 0.135914, 0.523592, 0.594213, 0.981214, 0.787928, 0.42172, 0.53711, 0.4244, 0.824523, 0.600439, 0.151222, 0.461375, 0.0761294, 0.129461, 0.0744625, 0.48255, 0.694424, 0.00382233, 0.347531, 0.790711, 0.17246, 0.659692, 0.0409395, 0.519914, 0.530539, 0.87733, 0.482557, 0.0557579, 0.876432, 0.879902, 0.370178, 0.234828, 0.481118, 0.510715, 0.324421, 0.0115245, 0.311741, 0.667421, 0.979204, 0.0266899, 0.595807, 0.399843, 0.890207, 0.333922, 0.79578, 0.661632, 0.554892, 0.732521, 0.424412, 0.226288, 0.189886},
{0.710231, 0.600673, 0.730708, 0.90958, 0.298742, 0.216182, 0.944132, 0.227977, 0.370259, 0.31639, 0.41225, 0.458033, 0.0886168, 0.347332, 0.656823, 0.994778, 0.411039, 0.477455, 0.352916, 0.76298, 0.395105, 0.938736, 0.170266, 0.48061, 0.76162, 0.346064, 0.333436, 0.146933, 0.0168679, 0.372996, 0.652822, 0.282322, 0.149312, 0.205348, 0.603008, 0.931386, 0.0874843, 0.902351, 0.569018, 0.98112, 0.15146, 0.444142, 0.486969, 0.69542, 0.50623, 0.141496, 0.841796, 0.0226328, 0.0688018, 0.329303, 0.847374, 0.790058, 0.291926, 0.186671, 0.280117, 0.973098, 0.952678, 0.771968, 0.136481, 0.629987, 0.321416, 0.427222, 0.342796, 0.726505, 0.319999, 0.899929, 0.457673, 0.377993, 0.897183, 0.758129, 0.216116, 0.991255, 0.722284, 0.430253, 0.852729, 0.105878, 0.221536, 0.240274, 0.594311, 0.613216, 0.242719, 0.0289736, 0.671609, 0.990604, 0.621968, 0.40309, 0.311062, 0.151548, 0.378448, 0.196976, 0.294318, 0.259, 0.442426, 0.374731, 0.931594, 0.618327, 0.34125, 0.160152, 0.372069, 0.233996},
{0.00955631, 0.68757, 0.366481, 0.0298034, 0.19775, 0.268887, 0.373264, 0.560271, 0.63933, 0.512739, 0.223985, 0.0793114, 0.020015, 0.579584, 0.80854, 0.124648, 0.114084, 0.344531, 0.773465, 0.625501, 0.288307, 0.24276, 0.677032, 0.113451, 0.759458, 0.87461, 0.390761, 0.921154, 0.95371, 0.599224, 0.381368, 0.077129, 0.147511, 0.608653, 0.210886, 0.759156, 0.397792, 0.173216, 0.74077, 0.317727, 0.0142377, 0.819865, 0.142482, 0.127902, 0.283352, 0.80117, 0.740363, 0.77595, 0.727949, 0.705734, 0.584029, 0.986833, 0.590479, 0.55066, 0.961393, 0.903753, 0.905683, 0.466481, 0.571204, 0.851954, 0.394165, 0.320545, 0.661077, 0.0243801, 0.706205, 0.723112, 0.126723, 0.297195, 0.827756, 0.769249, 0.837665, 0.935522, 0.0485318, 0.888015, 0.0879709, 0.39542, 0.196427, 0.183882, 0.625273, 0.161992, 0.433591, 0.603828, 0.845302, 0.265705, 0.754087, 0.140251, 0.843354, 0.653083, 0.773739, 0.14023, 0.872287, 0.747849, 0.934212, 0.789658, 0.76947, 0.398156, 0.959344, 0.914038, 0.833942, 0.259009},
{0.116433, 0.179958, 0.629389, 0.682333, 0.516462, 0.607973, 0.0668069, 0.545175, 0.743675, 0.103465, 0.275343, 0.368884, 0.707243, 0.520221, 0.763539, 0.263843, 0.244087, 0.109967, 0.116072, 0.274255, 0.332924, 0.832847, 0.894731, 0.115323, 0.811669, 0.0869207, 0.34615, 0.719836, 0.203879, 0.301925, 0.0420163, 0.340156, 0.185826, 0.920818, 0.568813, 0.997691, 0.717264, 0.534978, 0.876006, 0.615865, 0.602763, 0.029443, 0.311545, 0.557626, 0.725852, 0.944675, 0.073695, 0.663981, 0.512112, 0.992448, 0.420037, 0.706336, 0.909314, 0.32104, 0.442672, 0.136487, 0.245012, 0.902173, 0.298807, 0.98512, 0.121266, 0.256579, 0.220509, 0.956363, 0.914255, 0.368782, 0.109746, 0.29777, 0.48095, 0.844369, 0.815333, 0.437788, 0.694143, 0.71191, 0.812058, 0.210135, 0.192986, 0.0434752, 0.676326, 0.470554, 0.809505, 0.624089, 0.297026, 0.831984, 0.998424, 0.422869, 0.930704, 0.949778, 0.572154, 0.262287, 0.618429, 0.87468, 0.126386, 0.960066, 0.625519, 0.32895, 0.622773, 0.967094, 0.351755, 0.134401},
{0.355913, 0.0375552, 0.31967, 0.992652, 0.712441, 0.102634, 0.70287, 0.125283, 0.95665, 0.307535, 0.247321, 0.1512, 0.0275189, 0.821736, 0.601971, 0.586866, 0.143503, 0.880052, 0.901009, 0.713892, 0.200415, 0.960654, 0.117848, 0.448946, 0.271672, 0.930364, 0.420631, 0.378106, 0.0274591, 0.330446, 0.607724, 0.501688, 0.877398, 0.921675, 0.540515, 0.721721, 0.0155809, 0.543017, 0.217878, 0.673422, 0.552834, 0.468705, 0.62512, 0.903858, 0.139606, 0.435092, 0.451301, 0.526608, 0.833573, 0.344981, 0.132984, 0.779614, 0.69867, 0.783553, 0.822882, 0.047305, 0.449253, 0.784849, 0.656812, 0.239524, 0.372955, 0.153487, 0.275857, 0.791514, 0.535227, 0.563265, 0.65684, 0.236547, 0.621199, 0.649504, 0.346798, 0.00687672, 0.129154, 0.350851, 0.982467, 0.522676, 0.0888622, 0.813133, 0.0322232, 0.417765, 0.713224, 0.995353, 0.443202, 0.481137, 0.00249544, 0.430025, 0.282941, 0.501509, 0.721968, 0.11327, 0.143445, 0.57452, 0.146268, 0.987978, 0.462073, 0.834013, 0.659551, 0.114926, 0.867576, 0.333998},
{0.528291, 0.00158477, 0.3335, 0.586309, 0.103102, 0.832065, 0.367065, 0.819477, 0.865989, 0.49512, 0.358215, 0.313385, 0.185904, 0.653941, 0.696761, 0.391682, 0.659452, 0.551165, 0.514774, 0.27487, 0.401891, 0.054159, 0.808729, 0.907993, 0.587815, 0.135463, 0.347179, 0.598723, 0.655646, 0.786145, 0.404107, 0.837592, 0.646927, 0.900528, 0.0108356, 0.571345, 0.512412, 0.673182, 0.353078, 0.152878, 0.0192353, 0.384996, 0.802503, 0.863236, 0.697634, 0.545917, 0.614313, 0.293864, 0.426975, 0.323977, 0.167318, 0.0258477, 0.564424, 0.189798, 0.729648, 0.59476, 0.926968, 0.193324, 0.387381, 0.228867, 0.102868, 0.514406, 0.159284, 0.651472, 0.863189, 0.993428, 0.563417, 0.590874, 0.063775, 0.189918, 0.846833, 0.804004, 0.137139, 0.960801, 0.499183, 0.854584, 0.627303, 0.814141, 0.534846, 0.752558, 0.291615, 0.81611, 0.714486, 0.161641, 0.9598, 0.0874738, 0.935538, 0.800754, 0.113718, 0.721737, 0.875143, 0.424481, 0.297602, 0.322967, 0.168457, 0.828082, 0.389038, 0.588504, 0.977492, 0.137519},
{0.308026, 0.858034, 0.401805, 0.0249761, 0.0504989, 0.0252578, 0.129116, 0.190295, 0.215666, 0.740857, 0.829433, 0.195702, 0.386374, 0.556082, 0.608957, 0.347076, 0.373782, 0.278708, 0.423105, 0.192598, 0.0110294, 0.351231, 0.0289095, 0.544648, 0.846585, 0.927685, 0.389376, 0.0972326, 0.872909, 0.301101, 0.0620535, 0.812934, 0.992493, 0.254604, 0.130586, 0.314059, 0.710407, 0.0565866, 0.323177, 0.307212, 0.736749, 0.960162, 0.0783022, 0.123287, 0.63047, 0.219104, 0.342069, 0.222751, 0.997397, 0.922674, 0.959865, 0.167496, 0.44645, 0.708432, 0.409119, 0.675443, 0.0751503, 0.388311, 0.420729, 0.14944, 0.339267, 0.160281, 0.875554, 0.607806, 0.251768, 0.116889, 0.1322, 0.59725, 0.405259, 0.23316, 0.724672, 0.99728, 0.40304, 0.588491, 0.373969, 0.316186, 0.580179, 0.246714, 0.731088, 0.978376, 0.762396, 0.472149, 0.572511, 0.0446361, 0.141361, 0.024448, 0.312454, 0.235496, 0.230057, 0.947109, 0.952457, 0.312918, 0.70482, 0.467975, 0.740252, 0.106679, 0.291322, 0.913473, 0.73844, 0.713735},
{0.760189, 0.483357, 0.757549, 0.802519, 0.991417, 0.963135, 0.68807, 0.672085, 0.469412, 0.00934506, 0.378101, 0.812304, 0.830587, 0.360239, 0.381131, 0.973906, 0.637413, 0.236209, 0.597771, 0.313056, 0.525924, 0.223678, 0.868868, 0.301763, 0.731194, 0.166126, 0.483505, 0.0534316, 0.579876, 0.457807, 0.108696, 0.190387, 0.862175, 0.740286, 0.293026, 0.304561, 0.00180203, 0.941242, 0.63634, 0.652644, 0.393048, 0.178416, 0.519184, 0.85945, 0.370783, 0.176928, 0.271661, 0.495044, 0.158119, 0.326021, 0.411719, 0.104507, 0.920173, 0.977986, 0.0691037, 0.921215, 0.210011, 0.366919, 0.384667, 0.644021, 0.987805, 0.131989, 0.617222, 0.292173, 0.84677, 0.320439, 0.978723, 0.47006, 0.352288, 0.386956, 0.229457, 0.0301575, 0.844366, 0.351308, 0.864251, 0.894956, 0.552032, 0.797119, 0.0109635, 0.374958, 0.515404, 0.0545045, 0.886793, 0.0193113, 0.886953, 0.421358, 0.404053, 0.0563976, 0.650004, 0.471478, 0.636016, 0.0116412, 0.292462, 0.624913, 0.319688, 0.611813, 0.358729, 0.418471, 0.754431, 0.231833},
{0.925159, 0.0977757, 0.34586, 0.99997, 0.257996, 0.667455, 0.638434, 0.987007, 0.268465, 0.216996, 0.205734, 0.262325, 0.881681, 0.598914, 0.787439, 0.542013, 0.902273, 0.355651, 0.360561, 0.527746, 0.265096, 0.864389, 0.0788427, 0.480644, 0.584756, 0.432379, 0.687166, 0.179808, 0.219939, 0.522831, 0.63641, 0.142692, 0.313941, 0.386618, 0.514925, 0.904086, 0.173016, 0.0327536, 0.715647, 0.969204, 0.819911, 0.880664, 0.599361, 0.0933486, 0.830303, 0.332333, 0.00447006, 0.0483613, 0.105667, 0.758092, 0.296334, 0.0656761, 0.53506, 0.129368, 0.537169, 0.0814601, 0.410032, 0.761893, 0.0873076, 0.522855, 0.783841, 0.304814, 0.537917, 0.898284, 0.695427, 0.691537, 0.397975, 0.968402, 0.126632, 0.789267, 0.845785, 0.072191, 0.44619, 0.164127, 0.330719, 0.693586, 0.445324, 0.810926, 0.985622, 0.598154, 0.266323, 0.535442, 0.608493, 0.540948, 0.364186, 0.734922, 0.440961, 0.839484, 0.0319905, 0.438843, 0.375229, 0.0238687, 0.521881, 0.257724, 0.721134, 0.840265, 0.322649, 0.995733, 0.970678, 0.316658},
{0.319264, 0.359991, 0.269125, 0.612054, 0.294563, 0.781172, 0.510922, 0.680647, 0.856995, 0.350132, 0.0314987, 0.206334, 0.362354, 0.254614, 0.45167, 0.157545, 0.0638417, 0.267031, 0.980406, 0.233927, 0.935239, 0.357553, 0.976223, 0.0496011, 0.385134, 0.0133575, 0.862168, 0.24334, 0.709533, 0.452703, 0.266837, 0.183035, 0.917394, 0.929538, 0.306266, 0.799096, 0.977994, 0.693934, 0.372525, 0.862, 0.837052, 0.274302, 0.731344, 0.9551, 0.566613, 0.27952, 0.17185, 0.972977, 0.0422284, 0.574687, 0.0624549, 0.0812407, 0.0377284, 0.525152, 0.48497, 0.0575928, 0.578736, 0.388334, 0.0138033, 0.335343, 0.422477, 0.0840923, 0.579693, 0.0647457, 0.146945, 0.885299, 0.393554, 0.590975, 0.483325, 0.225561, 0.694852, 0.0159751, 0.390788, 0.590302, 0.632806, 0.478138, 0.026725, 0.546691, 0.339009, 0.138937, 0.856036, 0.967274, 0.903185, 0.151589, 0.456969, 0.489624, 0.879438, 0.66683, 0.209504, 0.158824, 0.50765, 0.459499, 0.209598, 0.576495, 0.523789, 0.955253, 0.106579, 0.0929893, 0.552118, 0.140701},
};

static const std::vector<float> costs = {504.422, 951.915, 502.716, 589.85, 71.639, 183.973, 421.442, 368.647, 73.086, 166.643, 838.046, 161.204, 134.317, 552.766, 6.44783, 675.47, 170.606, 802.607, 882.187, 50.339, 221.476, 305.859, 427.56, 515.999, 443.397, 579.636, 448.703, 701.159, 547.926, 901.656, 916.172, 805.903, 636.085, 315.077, 231.233, 326.64, 642.157, 554.74, 494.394, 700.545, 954.413, 994.333, 494.613, 802.161, 892.575, 387.705, 576.545, 564.828, 597.323, 472.854, 522.019, 703.146, 136.614, 498.88, 230.738, 307.431, 518.624, 378.362, 983.729, 365.034, 446.07, 995.804, 261.316, 453.841, 156.139, 289.496, 715.223, 472.49, 680.331, 683.43, 738.474, 151.384, 483.993, 290.794, 771.383, 499.413, 227.124, 937.11, 572.585, 253.08, 130.267, 557.496, 17.6992, 403.423, 94.3767, 728.067, 726.947, 99.2074, 178.04, 462.521, 966.044, 988.273, 396.994, 132.719, 384.371, 359.288, 888.351, 592.148, 283.748, 694.63};

static const std::vector<float> min_impressions = {0.184818, 0.966018, 0.112828, 0.355214, 0.200185, 0.0702047, 0.000403702, 0.845609, 0.580445, 0.482629};

//
#endif
