#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{3.84014,1.73942,9.9386,8.0056,7.72066,6.762,1.48375,2.25613,5.51297,3.15661,9.72904,1.45383,1.8063,5.30012,5.9116,5.30542,1.1933,3.04041,5.60832,5.95955},
{1.65434,7.27431,5.09919,4.17031,8.90914,3.39361,8.68976,1.41227,2.05684,8.83463,4.80055,9.88566,9.98976,6.89543,9.42243,8.93033,2.36493,9.0152,6.89781,9.36801},
{5.35016,4.35193,2.57728,6.67793,3.24093,6.32006,1.40563,4.57483,7.82151,2.35708,4.3693,1.59409,6.75501,9.32692,7.70113,1.54504,8.27994,9.21026,5.63543,4.39407},
{3.21482,2.81951,9.52352,1.48172,7.80745,2.72287,5.86375,8.7513,8.55934,3.73854,4.43641,4.3387,7.61221,7.02728,5.49586,9.56621,5.65211,4.66502,2.18297,6.94653},
{9.60599,6.26826,5.60487,2.60527,4.43888,7.09639,8.39598,2.49191,3.66158,4.02189,6.07701,3.63587,9.27428,2.62983,1.0437,2.75293,4.78593,5.88031,1.78332,4.78302},
{8.41288,3.75167,8.15854,9.38606,6.18332,6.96649,3.29385,2.5734,6.94009,1.55714,7.16246,8.64628,8.38085,6.89808,2.52733,4.19447,2.01126,2.64851,1.75699,1.43687},
{2.85022,1.92363,9.20566,9.69463,4.80763,9.41746,6.2542,7.67334,6.97649,7.99574,8.13896,5.89512,3.43686,9.6493,9.30779,2.86968,2.12178,8.87319,1.08177,5.83593},
{7.75388,3.53339,6.60633,9.3039,6.90414,1.73229,6.06171,9.21783,5.92092,3.15297,4.16129,5.81206,3.3933,2.70617,8.21512,7.08608,6.79843,6.79937,1.84079,1.71241},
{5.01727,3.46725,2.75855,7.99405,2.55899,3.37727,6.56036,2.71835,5.01315,6.42391,9.30364,4.72823,7.59027,4.08143,8.63999,6.21723,2.74676,1.80752,9.25465,2.94839},
{6.30735,7.53874,5.42478,2.76422,4.50297,5.42072,4.39591,1.64323,6.02029,3.32118,6.02593,2.32244,7.32299,5.49827,7.29323,1.14377,5.01401,9.59238,7.59325,3.7214},
{8.85581,4.618,9.14424,3.25486,8.76497,1.79708,1.06572,6.11638,7.07546,3.85187,3.49483,7.1951,2.27981,1.89836,1.2671,8.72736,2.52642,5.77862,1.47256,8.66891},
{6.31316,5.45629,8.38068,2.97724,4.47986,3.36517,3.39019,6.04996,9.23635,6.22217,6.61792,7.01416,8.82318,1.76564,2.09437,6.03794,3.29734,3.6134,6.68763,4.11548},
{4.09649,6.34077,5.83012,3.92957,2.87298,6.76503,8.19047,5.36037,2.51035,5.3044,6.3054,2.29426,9.23289,6.48955,1.02651,7.33315,1.82224,5.21978,6.12399,8.79306},
{8.44715,1.65129,9.37824,9.91889,1.17119,5.38553,6.63111,5.81347,8.45599,5.86874,4.9917,1.69994,3.76598,9.56042,1.25801,4.14694,3.49169,4.27416,2.50386,7.39936},
{6.44379,7.93119,9.76474,5.91474,1.99073,9.59428,5.9843,2.41074,2.93662,5.26959,7.85461,9.59653,8.40641,8.80595,9.3143,2.49107,3.81869,4.58089,3.87993,9.58616},
{6.25438,2.99852,1.36858,5.96498,3.05741,1.69503,1.25909,6.78401,7.00521,2.48253,3.31124,7.66346,8.2647,6.68362,4.0956,6.36444,5.71199,4.40999,7.14488,2.82416},
{3.01373,6.16279,6.85357,3.06455,2.40465,2.98225,8.68019,1.12246,1.32102,1.44828,3.1493,9.39525,1.10544,5.71652,7.87173,8.52073,3.21212,4.712,3.33681,5.22205},
{8.55858,5.10166,9.87713,6.71129,2.79174,3.06239,7.64415,6.26859,7.29796,1.61051,3.3199,6.72984,2.88164,7.23287,4.49497,9.88879,5.07727,1.904,6.56792,1.21545},
{6.65615,8.64552,7.39639,5.80597,8.73192,3.71204,9.3484,3.8852,3.03786,8.23544,2.68292,6.93476,9.93711,7.3575,7.21602,7.69333,7.5657,7.37596,6.35835,6.97693},
{7.87223,5.08118,4.04182,2.24909,5.40172,4.01621,7.97649,6.63365,1.97557,8.02046,5.20805,9.99,6.59915,7.0432,5.19235,9.87716,9.47369,3.50468,9.36372,7.25463},
{7.60578,9.79648,5.25931,9.70523,3.61617,3.65068,1.44397,5.82723,2.24272,5.15207,1.45445,2.0558,7.39967,9.3654,2.18882,7.25156,3.66114,5.2313,5.57091,9.86187},
{1.30542,1.23779,4.98734,7.91745,2.82813,1.27085,9.19216,3.17784,7.01468,1.33831,4.3373,5.35015,6.31747,9.86665,5.88933,1.02252,8.2089,5.54123,1.28436,4.73404},
{9.93355,5.67273,8.88307,5.92719,5.13826,8.26873,3.93216,8.05543,6.7605,2.05625,7.73922,2.15738,4.23755,6.0386,1.58469,8.67297,6.89844,1.85562,8.58603,1.51661},
{9.9008,8.82045,7.69975,3.6876,4.33905,8.83126,7.16875,1.25673,7.99915,5.12342,9.16559,3.82922,6.17222,3.69037,5.79411,5.81715,8.08006,2.33047,9.76532,1.8262},
{5.32747,7.99023,3.83912,7.30701,9.51805,9.04518,4.97314,1.93495,5.6735,6.23302,3.74588,1.61665,1.8971,4.30252,8.77721,8.70635,3.79439,7.52325,6.01426,8.78598},
{1.42993,8.37536,8.95054,8.01633,9.11449,5.90101,4.77446,8.63894,7.09998,7.81008,5.21019,9.70048,2.49521,7.17743,8.72843,4.90369,7.89577,5.4548,4.25599,5.42574},
{9.0242,3.16834,4.9525,7.86398,5.49552,8.70935,7.64067,7.25972,9.1104,3.23295,6.14867,2.27505,3.54105,9.54929,6.98588,7.39873,3.16578,9.21536,1.39594,4.21347},
{6.53817,8.29192,3.24587,6.95664,2.5479,6.50874,8.82596,3.12944,1.6094,1.54403,1.57682,5.67445,2.07944,7.45278,5.05652,4.28303,4.75243,4.07851,6.09529,6.40346},
{5.99457,6.69137,3.39523,3.55094,8.83458,9.14519,7.10528,8.74361,8.51093,5.89619,5.27439,9.74371,3.7505,5.59333,5.5061,9.34451,2.81445,4.11128,6.31169,3.17127},
{2.45585,7.80807,5.01038,3.89574,8.20823,7.17034,4.70593,1.1377,8.59558,8.49128,9.00078,4.86561,1.54063,5.22473,2.96967,3.51418,6.22606,7.57621,7.0692,3.03123},
{3.93675,8.33248,7.9696,3.62741,5.36267,6.32404,6.31892,2.81625,9.18517,7.78224,6.96198,2.80521,1.2744,8.78125,8.21983,4.79332,3.72012,4.97497,4.34078,5.37758},
{1.04371,8.14857,8.56626,5.78463,6.86468,2.3679,5.4192,2.71108,1.90675,3.86494,3.02142,5.61306,3.47138,4.36564,8.24733,3.07559,3.45421,6.72457,7.09775,3.2998},
{4.40511,6.54264,2.62371,1.64375,5.06889,9.17538,2.12013,9.43002,5.58049,5.92051,9.12639,3.11802,6.29793,5.26134,7.90198,5.20449,7.9068,8.99998,5.16957,9.66999},
{8.8369,9.96557,5.22912,4.44582,7.56054,6.87921,3.66339,5.96255,5.97372,4.94107,4.98609,5.03687,4.67259,6.62961,5.95189,2.97574,7.19295,9.98372,1.77096,4.91511},
{5.83439,8.38311,4.93186,4.41689,2.49019,8.9128,9.93368,2.09935,7.29149,3.48837,4.45082,6.01266,8.52137,7.85366,5.83706,9.36983,1.34786,2.5416,2.99411,9.70543},
{4.36474,5.06747,9.22655,8.25971,1.1174,5.34901,9.32398,4.04024,5.94181,7.03206,8.73998,8.10855,3.5672,4.79234,1.56398,4.7504,9.26148,6.92604,6.18503,6.01764},
{3.9328,8.8654,3.17557,2.21735,6.05389,6.27238,9.05013,7.21091,1.19691,1.76553,4.33839,4.26258,8.50438,4.86338,9.52896,5.02898,2.44093,9.06351,9.79365,9.04863},
{8.18704,9.72235,9.42884,4.80672,4.68677,2.2156,5.79389,7.70986,2.93522,1.19079,3.89283,3.78216,2.01715,2.96951,4.35713,5.43464,6.56141,8.03848,7.31817,4.77142},
{6.96302,2.20268,1.84112,3.57752,5.34319,8.11609,1.95297,3.19948,7.92807,1.13944,9.75184,8.9655,3.9575,7.87033,7.06405,3.19325,6.54591,4.47335,5.65157,7.38315},
{5.30708,5.82817,3.91713,7.69025,6.83868,8.77163,7.13313,3.04431,7.7823,2.18379,9.08301,3.05361,8.23649,4.96078,4.77813,5.29098,1.18292,4.90132,4.76157,4.43495},
{5.48657,6.2851,7.88147,6.26344,5.36453,3.66702,2.66801,3.04766,4.55807,9.81506,9.21468,4.86893,5.47854,7.10974,1.10462,7.05905,5.56659,8.22423,7.03217,7.24623},
{5.02719,1.89172,9.86603,8.6369,3.96396,2.63831,2.21669,8.85606,7.95488,5.97597,2.87807,2.11708,2.0071,4.40317,4.2312,7.16265,6.51011,8.11456,6.24627,1.40061},
{2.92158,9.61774,3.42833,4.14952,4.2459,7.38956,7.77384,9.41049,4.72001,6.37544,6.70914,7.89101,2.73685,6.21662,3.84132,4.6847,6.20172,3.06401,8.62943,2.77143},
{4.33381,9.85775,4.55922,9.41395,5.41838,6.7188,2.65491,8.17959,4.81794,4.38183,4.82856,4.46823,5.69428,1.97833,4.97706,8.4516,7.2449,4.82302,6.37183,9.73371},
{5.93223,6.21519,3.57226,7.51898,5.43303,1.43336,4.33037,2.63501,8.04417,3.59171,3.00672,1.03685,5.43548,3.75467,8.46539,5.00843,8.86101,7.32391,8.77471,7.91835},
{1.08552,7.94246,5.96179,5.90291,6.03187,4.80646,6.37826,6.68522,7.05141,2.77258,4.42491,2.5056,3.22747,1.77433,6.83275,9.19639,6.1394,5.37844,6.83868,7.10876},
{2.9091,7.87374,2.91415,1.59739,7.81936,7.0894,7.19154,9.52921,2.17605,4.06446,8.72181,2.01931,2.94497,5.09039,6.43959,1.856,8.51843,4.17741,7.54753,8.85367},
{5.1343,1.75046,4.46922,8.82321,5.58889,7.12446,4.85408,8.60447,7.34972,5.36918,8.81149,9.71891,6.07064,8.0824,4.99869,9.66425,7.27126,7.08146,5.65651,3.72307},
{3.11753,9.5193,3.51493,3.93281,1.11882,4.6309,9.44708,6.5889,9.65573,6.71402,9.6783,2.33868,6.04164,8.38008,2.08234,6.02,6.17469,6.9565,4.31712,7.4306},
{7.50861,5.7301,6.13945,6.68533,9.61105,4.71678,7.65925,4.67795,6.35431,3.79069,9.26019,4.72597,2.61392,3.74781,2.06819,8.04765,1.00571,9.77314,9.45674,7.57367}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {599.367,881.855,350.203,156.334,83.9032,685.509,698.138,296.598,485.439,656.521,288.455,768.388,998.777,457.164,388.008,969.137,125.528,900.185,712.892,205.165,403.55,755.573,877.968,893.766,925.283,260.879,359.015,922.48,718.751,776.902,881.861,850.461,580.741,965.718,114.816,767.279,207.508,874.987,530.584,705.28,591.463,402.892,967.989,462.702,39.8747,835.355,616.167,283.579,833.668,159.701};


static const std::vector<float> min_impressions = {26.1597,25.8032,31.7336,25.553,28.3927,41.334,24.7014,37.3944,38.703,35.0084,39.7836,38.1411,24.8366,34.1553,36.1403,24.4146,36.4659,34.4153,43.2514,23.1069};


#endif
