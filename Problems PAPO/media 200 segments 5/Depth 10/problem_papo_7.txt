#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(cons_excl(events[167], events[17]),events[197]),events[2]),events[36]),events[185]),events[62]),events[11]),events[134]),events[8]),events[49]),cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[47], events[56]),events[43]),events[172]),events[17]),events[29]),events[24]),events[76]),events[8]),events[129]),events[128]),cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(events[149], events[2]),events[55]),events[182]),events[161]),events[76]),events[101]),events[159]),events[152]),events[123]),events[81]),cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[165], events[84]),events[113]),events[39]),events[110]),events[40]),events[22]),events[34]),events[153]),events[112]),events[117]),cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(events[26], events[133]),events[53]),events[83]),events[18]),events[40]),events[49]),events[73]),events[196]),events[162]),events[193])};


static const std::vector< std::vector<float> > prob = {{0.844959, 0.615862, 0.0253866, 0.57982, 0.0643067, 0.676289, 0.280121, 0.499359, 0.65799, 0.64393, 0.242085, 0.983914, 0.397362, 0.713742, 0.290612, 0.309368, 0.180083, 0.769017, 0.170846, 0.152853, 0.40543, 0.266385, 0.4417, 0.722857, 0.584494, 0.179851, 0.339361, 0.921742, 0.244979, 0.563347, 0.326669, 0.207463, 0.72752, 0.605765, 0.097435, 0.901766, 0.514771, 0.810349, 0.521783, 0.378368, 0.430215, 0.408001, 0.712966, 0.314571, 0.939179, 0.109059, 0.37791, 0.317303, 0.412244, 0.415797, 0.94406, 0.771056, 0.256751, 0.037802, 0.357842, 0.522006, 0.467465, 0.912004, 0.550885, 0.495241, 0.381321, 0.477811, 0.505426, 0.352873, 0.664113, 0.615624, 0.961882, 0.272013, 0.472477, 0.477929, 0.537943, 0.507559, 0.707087, 0.43864, 0.567997, 0.399014, 0.247587, 0.430368, 0.0814272, 0.81037, 0.163452, 0.937497, 0.119141, 0.557737, 0.984937, 0.370124, 0.765314, 0.90857, 0.225027, 0.458731, 0.434311, 0.0690001, 0.464271, 0.81158, 0.675004, 0.417171, 0.0832508, 0.371147, 0.855483, 0.91524, 0.667587, 0.0121078, 0.0567246, 0.477812, 0.317712, 0.0493512, 0.30806, 0.340771, 0.771251, 0.98588, 0.510311, 0.211449, 0.969071, 0.401036, 0.834429, 0.138726, 0.185484, 0.883619, 0.244838, 0.0233643, 0.903877, 0.572692, 0.291036, 0.26924, 0.116762, 0.608292, 0.653322, 0.609243, 0.150402, 0.579273, 0.483483, 0.240612, 0.12371, 0.958688, 0.113198, 0.250534, 0.473819, 0.722136, 0.0974942, 0.92245, 0.96185, 0.952069, 0.780625, 0.473068, 0.34355, 0.0737341, 0.516225, 0.2255, 0.65207, 0.203612, 0.742627, 0.497687, 0.121168, 0.560037, 0.594333, 0.552835, 0.0087015, 0.696317, 0.462835, 0.47583, 0.917205, 0.490118, 0.783069, 0.95756, 0.473465, 0.818824, 0.461573, 0.350526, 0.446419, 0.384546, 0.891923, 0.148153, 0.869228, 0.738222, 0.835887, 0.534332, 0.375757, 0.402974, 0.137383, 0.848702, 0.046283, 0.100324, 0.892747, 0.979799, 0.0513855, 0.913169, 0.392598, 0.888162, 0.4979, 0.859038, 0.456051, 0.223554, 0.703061, 0.627703, 0.447838, 0.6194, 0.724966, 0.734374, 0.695888, 0.462885},
{0.080308, 0.456654, 0.992198, 0.299265, 0.413783, 0.113753, 0.471684, 0.0692852, 0.175815, 0.439921, 0.0720291, 0.996451, 0.782445, 0.758425, 0.630098, 0.954791, 0.42742, 0.482005, 0.716599, 0.722375, 0.753649, 0.0307956, 0.00401493, 0.454328, 0.895226, 0.454767, 0.986629, 0.841633, 0.305359, 0.981864, 0.578869, 0.98299, 0.510864, 0.652927, 0.121733, 0.283384, 0.35626, 0.420413, 0.0512595, 0.903895, 0.988223, 0.704221, 0.74806, 0.705978, 0.945709, 0.62896, 0.873673, 0.314467, 0.648734, 0.31214, 0.0244484, 0.500826, 0.164183, 0.912959, 0.575967, 0.916533, 0.225288, 0.524164, 0.732459, 0.57057, 0.524025, 0.554628, 0.810859, 0.120199, 0.205712, 0.941737, 0.497766, 0.50638, 0.848972, 0.010509, 0.458595, 0.734409, 0.647739, 0.808351, 0.652049, 0.928901, 0.712205, 0.856843, 0.241952, 0.00656288, 0.905866, 0.162051, 0.0419229, 0.579353, 0.552675, 0.160085, 0.0501705, 0.432179, 0.566406, 0.461819, 0.534723, 0.524429, 0.364474, 0.957798, 0.81543, 0.527952, 0.141949, 0.196622, 0.119201, 0.800419, 0.783234, 0.321502, 0.525128, 0.394916, 0.182721, 0.881085, 0.540429, 0.979875, 0.714436, 0.554202, 0.285077, 0.383165, 0.0750188, 0.847831, 0.627389, 0.0626216, 0.779268, 0.459547, 0.862474, 0.0437556, 0.277636, 0.170713, 0.723579, 0.258923, 0.366742, 0.763737, 0.586869, 0.0573786, 0.21276, 0.109678, 0.363119, 0.209809, 0.0029896, 0.165135, 0.403988, 0.0969306, 0.0976999, 0.777064, 0.147009, 0.976843, 0.872716, 0.277457, 0.643234, 0.161104, 0.42959, 0.644677, 0.487162, 0.201416, 0.483284, 0.55704, 0.747517, 0.425605, 0.435484, 0.548711, 0.186684, 0.0591759, 0.100894, 0.845444, 0.586947, 0.939641, 0.952948, 0.985458, 0.007306, 0.0695495, 0.283435, 0.20721, 0.506852, 0.326694, 0.351574, 0.0964874, 0.164968, 0.228324, 0.0755319, 0.9344, 0.741243, 0.0431396, 0.819297, 0.818127, 0.343787, 0.192201, 0.741205, 0.492546, 0.213905, 0.889963, 0.355234, 0.352352, 0.0427313, 0.342732, 0.563067, 0.852276, 0.48301, 0.604345, 0.0237308, 0.302193, 0.31508, 0.297039, 0.223132, 0.15397, 0.0802513, 0.251258},
{0.473755, 0.519713, 0.617435, 0.679576, 0.636367, 0.0899153, 0.341509, 0.626557, 0.73599, 0.487011, 0.444819, 0.0425607, 0.249949, 0.0387307, 0.583476, 0.452745, 0.316191, 0.921179, 0.399998, 0.215628, 0.00052021, 0.566299, 0.221672, 0.662187, 0.591775, 0.617049, 0.686001, 0.0452298, 0.16348, 0.751156, 0.158927, 0.25894, 0.0913894, 0.60942, 0.130308, 0.266347, 0.220375, 0.278167, 0.951344, 0.703378, 0.823327, 0.207245, 0.462723, 0.25265, 0.858526, 0.364143, 0.63687, 0.571521, 0.773446, 0.0711372, 0.232676, 0.816216, 0.709008, 0.859356, 0.800701, 0.440708, 0.950833, 0.82691, 0.603656, 0.372033, 0.125645, 0.508856, 0.208655, 0.72101, 0.767282, 0.386445, 0.349758, 0.860105, 0.608206, 0.585637, 0.493658, 0.736121, 0.645253, 0.945247, 0.39777, 0.441039, 0.112843, 0.980012, 0.216074, 0.386904, 0.177271, 0.712919, 0.123293, 0.0942757, 0.089986, 0.168212, 0.675655, 0.979811, 0.215865, 0.622349, 0.39604, 0.678784, 0.792065, 0.927664, 0.0893544, 0.962086, 0.281964, 0.128675, 0.577675, 0.950039, 0.33235, 0.770731, 0.990836, 0.539417, 0.895153, 0.150508, 0.944771, 0.190505, 0.21435, 0.0914798, 0.788025, 0.673746, 0.94815, 0.177784, 0.503068, 0.779096, 0.192003, 0.083328, 0.396524, 0.727376, 0.173843, 0.343931, 0.258085, 0.494514, 0.914966, 0.97072, 0.722061, 0.621436, 0.83946, 0.932074, 0.0630909, 0.209172, 0.289797, 0.260536, 0.326794, 0.0647761, 0.00960285, 0.736444, 0.86969, 0.080437, 0.0461354, 0.346039, 0.707554, 0.449238, 0.548344, 0.6487, 0.338221, 0.571205, 0.486769, 0.0375855, 0.457725, 0.581825, 0.8957, 0.888008, 0.820401, 0.483342, 0.0612703, 0.81714, 0.0713683, 0.913574, 0.296873, 0.678732, 0.858488, 0.000323951, 0.0739662, 0.171279, 0.259677, 0.79418, 0.632587, 0.956908, 0.790476, 0.063418, 0.595446, 0.421276, 0.00299756, 0.831092, 0.55471, 0.719007, 0.412223, 0.728231, 0.386036, 0.585521, 0.858092, 0.945344, 0.81295, 0.119979, 0.0152766, 0.60814, 0.809584, 0.270146, 0.254306, 0.958251, 0.998586, 0.0552421, 0.88346, 0.129675, 0.434797, 0.909022, 0.883618, 0.164619},
{0.398894, 0.86439, 0.483123, 0.418243, 0.256736, 0.101869, 0.820899, 0.935566, 0.737541, 0.00600214, 0.42121, 0.245425, 0.759677, 0.747254, 0.766945, 0.632341, 0.0429922, 0.0542924, 0.788977, 0.709855, 0.411754, 0.517205, 0.458116, 0.584516, 0.622359, 0.613133, 0.264937, 0.903107, 0.813415, 0.222597, 0.148704, 0.413197, 0.714615, 0.283381, 0.317678, 0.152841, 0.138913, 0.550375, 0.0973698, 0.111565, 0.50431, 0.211631, 0.659216, 0.590998, 0.741566, 0.971289, 0.60138, 0.0264249, 0.90764, 0.0299327, 0.00999723, 0.825423, 0.463505, 0.138224, 0.290064, 0.49623, 0.261413, 0.712667, 0.736502, 0.404436, 0.489266, 0.636049, 0.866902, 0.318602, 0.587935, 0.602088, 0.773307, 0.294567, 0.655015, 0.330576, 0.652941, 0.715468, 0.341573, 0.699693, 0.863579, 0.817605, 0.303357, 0.0984422, 0.703393, 0.938464, 0.105631, 0.372345, 0.621872, 0.943795, 0.732898, 0.862036, 0.771191, 0.758154, 0.9217, 0.580027, 0.308495, 0.110544, 0.908341, 0.110533, 0.938436, 0.618257, 0.7311, 0.989493, 0.302947, 0.867736, 0.108161, 0.372162, 0.927507, 0.340962, 0.284654, 0.64344, 0.585661, 0.434058, 0.929505, 0.43801, 0.117644, 0.465222, 0.0280173, 0.252351, 0.262371, 0.212302, 0.427605, 0.656201, 0.498029, 0.0803543, 0.255919, 0.23293, 0.343837, 0.496911, 0.406362, 0.977494, 0.80857, 0.148227, 0.937555, 0.713238, 0.82425, 0.105449, 0.589843, 0.615286, 0.200098, 0.292323, 0.978215, 0.755998, 0.835405, 0.525929, 0.92321, 0.793529, 0.526265, 0.724323, 0.900314, 0.983813, 0.0924685, 0.604641, 0.508252, 0.305588, 0.381355, 0.395987, 0.0959358, 0.661862, 0.537645, 0.6004, 0.420089, 0.920322, 0.00358359, 0.500824, 0.35083, 0.640218, 0.550204, 0.113601, 0.67026, 0.714115, 0.945005, 0.231944, 0.868582, 0.882546, 0.418542, 0.00120876, 0.322356, 0.88238, 0.248842, 0.885352, 0.162408, 0.111645, 0.186712, 0.764345, 0.0831045, 0.934163, 0.607001, 0.973437, 0.262781, 0.366648, 0.796804, 0.749626, 0.761075, 0.21594, 0.0544165, 0.903304, 0.722289, 0.100894, 0.384877, 0.255243, 0.333733, 0.738055, 0.506602, 0.920694},
{0.511023, 0.53382, 0.208133, 0.598797, 0.136749, 0.0486394, 0.0278618, 0.00581178, 0.398355, 0.676184, 0.600761, 0.38238, 0.0732728, 0.0287868, 0.0623188, 0.862298, 0.189755, 0.175154, 0.126535, 0.137283, 0.291426, 0.560144, 0.489992, 0.459911, 0.0774626, 0.0375641, 0.0522776, 0.0797653, 0.452529, 0.679673, 0.0934735, 0.315081, 0.160178, 0.132016, 0.345182, 0.775198, 0.0559736, 0.887009, 0.519948, 0.382032, 0.929076, 0.452747, 0.897919, 0.930282, 0.880279, 0.110155, 0.581557, 0.41396, 0.446687, 0.775667, 0.80222, 0.281622, 0.30868, 0.786311, 0.195381, 0.866262, 0.129703, 0.349831, 0.179286, 0.880704, 0.875531, 0.316712, 0.275759, 0.240449, 0.272029, 0.166905, 0.483665, 0.875684, 0.805758, 0.0337615, 0.0361289, 0.358631, 0.161812, 0.134773, 0.613559, 0.0528277, 0.0633204, 0.840847, 0.290748, 0.764486, 0.727405, 0.122558, 0.339303, 0.462415, 0.0179134, 0.557625, 0.955279, 0.13158, 0.501678, 0.318565, 0.171714, 0.622817, 0.733555, 0.453847, 0.969483, 0.884652, 0.676538, 0.528291, 0.305264, 0.795718, 0.970739, 0.255762, 0.429157, 0.677209, 0.0620324, 0.4052, 0.533442, 0.89744, 0.00338417, 0.570839, 0.190567, 0.411075, 0.207592, 0.193521, 0.0439719, 0.00548389, 0.0899329, 0.623924, 0.336289, 0.609344, 0.678144, 0.648731, 0.349757, 0.418668, 0.785698, 0.781092, 0.0933724, 0.5582, 0.222648, 0.64759, 0.598815, 0.867683, 0.00867971, 0.194069, 0.882184, 0.668306, 0.503033, 0.573066, 0.871241, 0.643305, 0.0462301, 0.575738, 0.0180642, 0.413029, 0.479475, 0.779284, 0.103046, 0.00560491, 0.56475, 0.665273, 0.145593, 0.523929, 0.448311, 0.239587, 0.701326, 0.452692, 0.353797, 0.411145, 0.810326, 0.38412, 0.379261, 0.524428, 0.846899, 0.320724, 0.443949, 0.0712974, 0.0268475, 0.477711, 0.598988, 0.870906, 0.703673, 0.663998, 0.900451, 0.270283, 0.56698, 0.702743, 0.202191, 0.99287, 0.98049, 0.742833, 0.00143806, 0.78772, 0.871602, 0.276583, 0.146391, 0.0618616, 0.0662039, 0.667391, 0.432251, 0.062382, 0.994439, 0.93306, 0.555895, 0.49469, 0.497904, 0.0990386, 0.332863, 0.371083, 0.848061, 0.00155543},
};

static const std::vector<float> costs = {110.674, 113.516, 708.782, 141.022, 446.469, 2.33264, 787.242, 733.505, 692.209, 707.494, 175.632, 61.5788, 514.126, 715.511, 17.5129, 772.697, 219.247, 480.339, 61.322, 704.074, 481.312, 833.886, 583.799, 550.902, 140.512, 506.889, 3.10821, 197.111, 231.412, 608.689, 701.802, 462.613, 335.952, 880.491, 324.843, 260.286, 458.547, 442.069, 945.689, 758.475, 583.701, 806.969, 401.036, 582.229, 543.662, 291.632, 316.711, 116.266, 282.862, 997.016, 402.458, 105.44, 674.585, 472.526, 123.744, 287.932, 982.899, 311.259, 998.814, 78.1826, 857.229, 933.019, 92.8055, 103.145, 589.298, 292.962, 534.844, 589.132, 734.888, 730.216, 8.8614, 724.205, 508.189, 167.64, 646.787, 584.975, 729.004, 299.244, 247.81, 510.505, 549.005, 657.446, 479.106, 517.384, 154.052, 597.687, 182.111, 680.588, 128.075, 425.599, 553.701, 523.633, 780.581, 954.38, 804.684, 11.8043, 304.223, 933.785, 939.36, 857.805, 993.095, 689.19, 21.0004, 74.6545, 386.811, 418.736, 532.717, 129.609, 48.5276, 296.485, 627.813, 332.653, 841.418, 905.742, 847.505, 903.301, 105.395, 716.188, 761.727, 946.785, 961.623, 487.201, 304.864, 640.956, 760.224, 276.603, 720.257, 870.264, 159.401, 690.489, 890.26, 231.089, 45.9441, 659.717, 691.604, 121.855, 801.202, 141.106, 154.34, 585.753, 440.585, 619.478, 940.51, 611.919, 680.108, 813.518, 803.526, 620.562, 394.034, 859.369, 897.21, 977.848, 564.028, 917.836, 56.938, 9.15295, 590.573, 84.4208, 558.88, 534.755, 100.074, 597.309, 427.663, 384.57, 207.944, 685.904, 238.098, 749.229, 183.434, 702.755, 511.992, 35.2148, 357.41, 740.33, 814.695, 481.49, 715.207, 866.629, 386.444, 184.939, 61.1999, 913.396, 752.54, 169.417, 331.227, 672.268, 403.976, 709.438, 911.196, 860.225, 367.487, 831.898, 369.749, 57.3441, 571.055, 526.313, 202.389, 899.583, 875.852, 462.134};

static const std::vector<float> min_impressions = {0.0150363, 0.771179, 0.63305, 0.577111, 0.384902};

//
#endif
