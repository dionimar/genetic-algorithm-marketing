#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(events[40], events[2]),events[31]),events[27]),events[44]),events[11]),events[42]),events[35]),events[18]),events[45]),events[8]),cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(events[42], events[31]),events[33]),events[39]),events[45]),events[43]),events[3]),events[47]),events[44]),events[29]),events[9]),cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(events[27], events[14]),events[40]),events[39]),events[18]),events[9]),events[16]),events[35]),events[3]),events[11]),events[22]),cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(events[30], events[16]),events[37]),events[45]),events[13]),events[26]),events[24]),events[2]),events[0]),events[6]),events[39]),cons_incl(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[34], events[36]),events[45]),events[48]),events[42]),events[13]),events[2]),events[23]),events[15]),events[25]),events[19])};


static const std::vector< std::vector<float> > prob = {{0.597546, 0.572767, 0.961906, 0.736791, 0.842227, 0.858951, 0.406916, 0.576464, 0.778324, 0.846942, 0.350376, 0.579669, 0.258306, 0.845845, 0.528551, 0.924535, 0.504771, 0.799837, 0.0897169, 0.382474, 0.498917, 0.0371055, 0.751089, 0.827811, 0.0310186, 0.963105, 0.343095, 0.441123, 0.0400237, 0.826202, 0.631642, 0.781056, 0.299419, 0.845876, 0.195277, 0.620634, 0.72311, 0.629727, 0.311012, 0.391709, 0.0220501, 0.525206, 0.319048, 0.73782, 0.530153, 0.322464, 0.842577, 0.427859, 0.25255, 0.563924},
{0.129586, 0.724794, 0.327376, 0.715868, 0.706728, 0.128757, 0.134082, 0.487708, 0.425745, 0.997228, 0.328441, 0.456278, 0.589196, 0.676593, 0.414732, 0.0234129, 0.104904, 0.717957, 0.265311, 0.584269, 0.123332, 0.0285054, 0.950037, 0.850581, 0.47778, 0.833996, 0.177671, 0.234618, 0.393993, 0.260287, 0.461965, 0.384133, 0.602725, 0.52387, 0.564808, 0.0131135, 0.328506, 0.875033, 0.779243, 0.482393, 0.539496, 0.515051, 0.767941, 0.330683, 0.788903, 0.933708, 0.0351465, 0.269962, 0.634899, 0.142705},
{0.504856, 0.405211, 0.738731, 0.0354565, 0.0124951, 0.983919, 0.639824, 0.592519, 0.0813318, 0.232665, 0.871285, 0.224864, 0.942419, 0.291829, 0.503151, 0.697154, 0.0349207, 0.357384, 0.297713, 0.771382, 0.664048, 0.594999, 0.772356, 0.734166, 0.0331872, 0.421562, 0.560452, 0.827976, 0.0761622, 0.988979, 0.557772, 0.960654, 0.803516, 0.883089, 0.556684, 0.112154, 0.324337, 0.556484, 0.171587, 0.692782, 0.41142, 0.325563, 0.474088, 0.809941, 0.0268628, 0.892886, 0.424203, 0.0838187, 0.322439, 0.351144},
{0.348145, 0.629605, 0.268457, 0.672859, 0.632532, 0.625243, 0.834755, 0.634757, 0.092078, 0.653038, 0.381054, 0.249474, 0.293623, 0.21457, 0.421728, 0.716281, 0.10823, 0.802798, 0.28017, 0.284547, 0.796832, 0.403894, 0.0831182, 0.252271, 0.381066, 0.136935, 0.362478, 0.930403, 0.774114, 0.561857, 0.190368, 0.282212, 0.0920649, 0.918921, 0.288374, 0.0961578, 0.112336, 0.00665689, 0.328084, 0.104854, 0.302635, 0.330798, 0.652156, 0.122567, 0.122524, 0.534314, 0.854438, 0.727516, 0.444164, 0.298831},
{0.655185, 0.11313, 0.636093, 0.701388, 0.308051, 0.874561, 0.973267, 0.161572, 0.568209, 0.571427, 0.225606, 0.280841, 0.110417, 0.466712, 0.215509, 0.00439908, 0.556937, 0.267189, 0.972015, 0.838338, 0.756295, 0.143093, 0.754601, 0.735434, 0.296511, 0.338716, 0.0128175, 0.138532, 0.206423, 0.763799, 0.24819, 0.708176, 0.658536, 0.170378, 0.162162, 0.874694, 0.312317, 0.696457, 0.300066, 0.795844, 0.166019, 0.683285, 0.574859, 0.860933, 0.764654, 0.0115861, 0.571578, 0.932537, 0.897673, 0.668405},
};

static const std::vector<float> costs = {966.557, 419.194, 98.8514, 339.082, 781.705, 839.138, 161.452, 652.012, 586.761, 43.2455, 312.325, 215.277, 809.414, 512.902, 404.292, 122.073, 717.263, 345.318, 652.981, 404.748, 288.89, 307.356, 317.464, 878.214, 809.009, 460.071, 651.752, 672.172, 109.95, 794.742, 253.795, 933.534, 509.64, 376.038, 464.701, 988.953, 117.582, 749.111, 897.652, 250.577, 679.832, 213.412, 120.621, 27.3848, 8.29797, 259.759, 600.182, 85.9834, 261.119, 642.846};

static const std::vector<float> min_impressions = {0.704638, 0.9919, 0.557438, 0.358299, 0.759477};

//
#endif
