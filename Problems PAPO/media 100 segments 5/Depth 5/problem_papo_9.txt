#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(events[63], events[97]),events[80]),events[44]),events[17]),events[89]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[32], events[8]),events[65]),events[55]),events[31]),events[2]),cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(events[68], events[32]),events[97]),events[14]),events[45]),events[10]),cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(events[18], events[72]),events[70]),events[83]),events[26]),events[12]),cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(events[6], events[83]),events[72]),events[27]),events[8]),events[61])};


static const std::vector< std::vector<float> > prob = {{0.974007, 0.252522, 0.211497, 0.0977432, 0.842774, 0.8627, 0.168563, 0.634559, 0.663204, 0.0431779, 0.847213, 0.979361, 0.350424, 0.640451, 0.614342, 0.957043, 0.887146, 0.911776, 0.324971, 0.471593, 0.924687, 0.208223, 0.0133746, 0.521241, 0.133493, 0.565379, 0.895632, 0.404764, 0.837318, 0.99371, 0.127022, 0.250747, 0.216584, 0.994052, 0.0262344, 0.672234, 0.746746, 0.300823, 0.314595, 0.766075, 0.328194, 0.138804, 0.238055, 0.503215, 0.615376, 0.961339, 0.100196, 0.516249, 0.433946, 0.640232, 0.676871, 0.288027, 0.498783, 0.329799, 0.0857629, 0.28479, 0.922052, 0.968685, 0.661046, 0.747541, 0.856572, 0.392343, 0.719112, 0.689606, 0.66122, 0.759505, 0.641309, 0.0882564, 0.0919115, 0.444929, 0.404411, 0.679321, 0.537389, 0.245865, 0.86469, 0.253661, 0.201476, 0.648398, 0.417811, 0.0670511, 0.80886, 0.260642, 0.726885, 0.843789, 0.752351, 0.320903, 0.03403, 0.176322, 0.806328, 0.879284, 0.364795, 0.317548, 0.753802, 0.595881, 0.442453, 0.400773, 0.590776, 0.947918, 0.128215, 0.759832},
{0.455956, 0.896822, 0.999152, 0.554248, 0.959538, 0.925359, 0.0798926, 0.289804, 0.963149, 0.593102, 0.231315, 0.390664, 0.662379, 0.812098, 0.843714, 0.212051, 0.51276, 0.345797, 0.461222, 0.931405, 0.092317, 0.622455, 0.238295, 0.7593, 0.464855, 0.0786692, 0.330763, 0.172556, 0.252096, 0.000377149, 0.12532, 0.873251, 0.555906, 0.954525, 0.767505, 0.536813, 0.849103, 0.720601, 0.12437, 0.242807, 0.166262, 0.265963, 0.379153, 0.680287, 0.0898565, 0.123638, 0.494113, 0.495437, 0.332165, 0.444376, 0.161094, 0.305677, 0.561099, 0.47808, 0.525099, 0.934421, 0.18721, 0.673423, 0.612571, 0.131199, 0.671528, 0.514134, 0.809417, 0.315376, 0.261474, 0.463383, 0.340729, 0.129173, 0.386683, 0.517855, 0.74523, 0.67136, 0.439451, 0.940208, 0.776179, 0.172426, 0.641433, 0.195944, 0.975675, 0.385317, 0.426285, 0.554944, 0.239992, 0.035854, 0.192556, 0.234135, 0.599137, 0.996957, 0.424845, 0.00831311, 0.833639, 0.777459, 0.565927, 0.136514, 0.080743, 0.804306, 0.6185, 0.704933, 0.962604, 0.184245},
{0.0421769, 0.203876, 0.98478, 0.307033, 0.619292, 0.157147, 0.262517, 0.844385, 0.662321, 0.384122, 0.846492, 0.87902, 0.105526, 0.483717, 0.389562, 0.962137, 0.631615, 0.746307, 0.0519036, 0.916598, 0.363516, 0.183269, 0.192386, 0.323435, 0.992435, 0.452798, 0.314756, 0.817991, 0.540495, 0.181795, 0.253949, 0.148309, 0.0513827, 0.580883, 0.0860144, 0.0412951, 0.0978437, 0.900236, 0.628761, 0.406596, 0.522209, 0.363855, 0.879703, 0.0493292, 0.672913, 0.0100049, 0.640028, 0.357247, 0.340884, 0.991142, 0.697437, 0.85487, 0.566874, 0.90774, 0.813805, 0.600508, 0.812872, 0.09861, 0.737634, 0.418601, 0.425422, 0.604268, 0.998066, 0.228069, 0.394979, 0.0969715, 0.0135393, 0.00127713, 0.660207, 0.685377, 0.281209, 0.21678, 0.981543, 0.702126, 0.0596984, 0.733611, 0.0297296, 0.0137651, 0.889885, 0.209705, 0.207988, 0.0521458, 0.906928, 0.717394, 0.925016, 0.251352, 0.0319045, 0.474382, 0.913044, 0.287055, 0.361259, 0.801819, 0.895497, 0.408759, 0.792783, 0.781219, 0.607893, 0.119096, 0.320378, 0.279009},
{0.567107, 0.512375, 0.706402, 0.429328, 0.845462, 0.80481, 0.102147, 0.782088, 0.583767, 0.463827, 0.289711, 0.385824, 0.151938, 0.69356, 0.829192, 0.595749, 0.0795957, 0.546302, 0.433937, 0.256301, 0.213652, 0.0729698, 0.162973, 0.837128, 0.102581, 0.304896, 0.45198, 0.384566, 0.668431, 0.879489, 0.477795, 0.608333, 0.268741, 0.853521, 0.53477, 0.359348, 0.661756, 0.347639, 0.262824, 0.648716, 0.502405, 0.0655181, 0.650213, 0.975155, 0.749411, 0.103838, 0.632572, 0.694572, 0.0971614, 0.851866, 0.712797, 0.33476, 0.977241, 0.548385, 0.551214, 0.674817, 0.836179, 0.165311, 0.720393, 0.99446, 0.815356, 0.0996241, 0.704291, 0.780385, 0.880123, 0.299305, 0.259325, 0.659562, 0.68314, 0.226609, 0.282748, 0.953653, 0.749362, 0.892609, 0.860812, 0.314361, 0.710105, 0.980259, 0.357359, 0.0312714, 0.828911, 0.802469, 0.544141, 0.796851, 0.771554, 0.927194, 0.472469, 0.932932, 0.837963, 0.753121, 0.600392, 0.978891, 0.382473, 0.0366354, 0.152525, 0.401757, 0.784795, 0.16005, 0.947773, 0.913576},
{0.760809, 0.16617, 0.0560052, 0.999195, 0.432553, 0.0209555, 0.412138, 0.830352, 0.961918, 0.121028, 0.67499, 0.127465, 0.791284, 0.389865, 0.119925, 0.02742, 0.0368492, 0.361633, 0.538092, 0.497006, 0.326397, 0.239178, 0.508556, 0.735687, 0.898765, 0.242826, 0.581928, 0.80055, 0.59844, 0.875622, 0.0358467, 0.884352, 0.107849, 0.361134, 0.35433, 0.989141, 0.735568, 0.894274, 0.357238, 0.594299, 0.249289, 0.68214, 0.227405, 0.620937, 0.0378145, 0.509018, 0.213225, 0.590979, 0.255005, 0.309413, 0.446459, 0.762265, 0.0207645, 0.142684, 0.822875, 0.181229, 0.0668513, 0.878678, 0.1249, 0.583451, 0.019005, 0.312703, 0.525706, 0.0113093, 0.20489, 0.764477, 0.479503, 0.616519, 0.378712, 0.814472, 0.908345, 0.280621, 0.0972935, 0.00883226, 0.945392, 0.59112, 0.237857, 0.659788, 0.821553, 0.783423, 0.943086, 0.290438, 0.376038, 0.343664, 0.687964, 0.0423227, 0.428694, 0.777412, 0.164383, 0.787728, 0.407912, 0.215396, 0.855499, 0.398748, 0.672322, 0.460777, 0.171541, 0.14489, 0.368006, 0.985089},
};

static const std::vector<float> costs = {98.2714, 149.962, 986.749, 762.402, 360.164, 879.423, 574.174, 643.89, 8.24187, 263.257, 274.016, 57.5693, 185.978, 33.0828, 252.139, 120.861, 80.0753, 860.059, 1.19074, 897.227, 393.461, 154.147, 918.2, 175.458, 40.5607, 756.38, 936.686, 400.515, 582.132, 529.183, 275.212, 248.043, 32.8072, 838.267, 953.667, 272.817, 55.2396, 772.523, 963.725, 614.801, 482.688, 38.6609, 99.8503, 633.642, 211.093, 168.232, 438.784, 232.816, 586.149, 767.042, 213.605, 53.0638, 338.402, 46.8188, 32.3946, 755.671, 99.1674, 767.001, 927.035, 581.283, 411.711, 751.323, 367.742, 393.387, 64.1064, 662.194, 797.415, 171.831, 668.809, 631.558, 138.126, 383.805, 669.444, 284.947, 753.082, 760.338, 16.6399, 907.522, 595.888, 681.503, 998.051, 10.4377, 715.006, 398.383, 160.211, 28.3559, 871.113, 719.589, 109.109, 137.069, 647.617, 691.015, 941.591, 199.091, 460.82, 757.95, 794.208, 886.922, 299.811, 765.793};

static const std::vector<float> min_impressions = {0.664436, 0.370909, 0.495368, 0.024797, 0.57809};

//
#endif
