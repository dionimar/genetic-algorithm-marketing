#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{3.73051,1.09328,9.81728,6.91824,8.13897,2.62877,9.79184,3.77476,4.60326,2.96789},
{6.2594,2.05132,7.02134,3.99652,6.00602,1.07268,9.48778,7.8479,9.01382,1.51057},
{5.29446,5.02355,7.01672,8.90419,2.00026,5.7988,9.55889,2.14993,9.11268,3.65309},
{5.6523,8.23391,7.48127,1.27413,5.5783,8.91985,8.52017,7.46225,5.0619,8.59051},
{9.36551,5.74874,6.50262,7.57474,8.36494,4.58497,3.66712,9.45309,5.57978,9.75548},
{6.01871,9.2038,9.66392,4.67196,1.61873,1.31775,3.92849,5.37672,6.03458,8.6912},
{3.30516,8.04404,5.8947,5.12208,6.75904,6.99626,6.23806,7.54987,5.81196,2.10765},
{6.48738,4.42842,2.21785,8.93267,7.72559,9.40214,9.40985,5.36114,1.17354,8.06376},
{1.37211,4.32477,8.84548,9.76419,2.29865,9.77965,8.21201,5.51087,6.40966,1.46212},
{5.57939,2.58216,5.39563,2.76651,9.54445,6.16655,8.13819,1.02619,5.22852,7.94707},
{3.25412,5.21995,5.84327,2.25529,9.77915,8.42029,7.83901,5.09926,6.25506,4.46539},
{7.17692,3.7934,5.67308,5.8889,9.41087,4.23156,3.46516,2.85636,5.2323,9.48548},
{3.71243,3.71638,7.73326,4.338,3.45466,9.30705,3.39083,7.70151,1.53691,7.24362},
{4.94308,3.15701,8.26516,9.85633,2.315,9.42377,3.1728,4.25407,4.65356,3.36225},
{6.95085,2.34215,5.1307,2.92803,4.50869,5.74764,3.04099,6.25771,2.35203,8.14699},
{4.46622,2.52067,7.98361,9.76678,8.57207,5.86503,8.07641,7.49992,4.01138,3.78012},
{6.51454,9.8927,5.56342,3.2112,9.834,6.80428,9.18073,3.53653,2.86313,1.28967},
{2.80309,3.2745,9.07477,8.19197,6.22982,3.42864,3.69341,9.43223,2.95213,2.64625},
{7.66238,5.83655,1.71848,1.6943,3.87217,7.58698,5.73474,7.22116,3.65908,7.05293},
{8.17803,2.22127,2.99682,8.97735,4.82706,5.94722,9.0941,3.15824,2.70271,4.28811},
{7.33569,7.53063,4.43914,5.06102,7.32374,2.42594,2.12998,9.94289,2.76864,5.65899},
{3.11461,6.08243,4.30884,1.14063,1.47769,7.96933,1.15192,5.51787,2.34639,2.74309},
{3.63961,5.47721,2.68761,6.81355,4.42386,9.4935,3.22771,5.85669,5.85249,4.51484},
{7.25755,4.2025,1.10212,8.73598,3.36525,2.75128,1.96159,7.6647,9.86144,1.64758},
{1.1215,4.24189,3.54404,2.65309,3.5048,6.91277,6.41111,2.6374,2.74044,7.6798},
{4.18169,8.24928,7.90188,1.19986,7.44324,1.25162,3.39897,8.75674,4.47258,8.55857},
{6.10345,9.81973,5.03169,4.59303,2.42474,8.33325,5.86991,3.68922,7.94509,7.53088},
{4.63616,7.0802,1.38461,9.18804,5.01729,3.5578,7.25075,9.27172,7.6457,2.58371},
{1.59701,1.80921,7.174,7.21643,4.78013,8.25131,6.5552,3.28987,8.76947,8.7473},
{2.23457,8.7988,4.40697,8.95316,8.09176,6.57362,7.4277,8.14991,7.13311,8.43823},
{4.71793,5.08377,2.74104,7.94489,8.97905,2.97848,2.69403,6.78179,7.3766,8.92308},
{2.97676,8.28611,9.5,2.54163,9.30455,7.96543,5.28529,1.36923,5.77405,3.234},
{5.93139,2.82777,1.57766,8.79708,8.21833,3.73583,3.04523,4.22758,9.26274,5.09824},
{8.17852,2.34774,9.32328,2.79877,1.21843,7.12431,3.37362,9.63786,7.40243,2.55861},
{7.98348,4.96194,4.46557,4.4406,1.13114,2.58454,4.98409,5.26658,5.60024,2.15993},
{4.66967,1.66281,8.64645,3.6989,1.60511,2.81198,4.0396,8.2885,6.97816,2.57883},
{8.90321,5.00778,1.92195,2.50727,3.97763,5.54851,6.06976,6.81009,6.57606,3.55964},
{4.40274,3.12642,7.81275,5.82446,4.66402,8.2175,9.73709,8.80119,4.34653,3.63717},
{9.00513,7.20802,8.43522,3.4874,3.26253,9.02455,7.46094,4.63115,5.1624,4.89725},
{3.5606,1.34102,8.45055,2.8839,5.98364,1.01471,6.00392,4.66241,8.609,8.09274},
{2.25931,2.6808,9.74794,7.82204,2.92596,1.39474,1.45355,7.91357,5.25388,8.16687},
{8.72959,3.39015,5.12347,6.28124,3.84564,3.38501,8.18554,2.32603,2.18609,9.08816},
{5.63806,9.86778,8.72795,5.23188,6.59621,6.44087,1.34095,1.56223,9.04473,4.77639},
{6.09703,5.97053,3.15117,1.73306,4.07886,4.14847,5.94851,3.02006,5.05163,8.73087},
{9.30889,8.92588,1.44428,3.43993,6.09836,6.53451,2.15147,2.94898,7.2637,4.14795},
{3.3988,9.4606,3.58277,3.34074,5.85472,7.14397,9.61638,7.59799,3.59443,2.93994},
{8.85624,9.28221,5.42386,7.25278,3.69285,4.77504,1.52468,7.81127,2.62211,9.73202},
{4.0941,6.84073,5.87388,1.35515,6.51132,9.74106,7.85118,3.74091,7.02721,5.38723},
{6.4595,7.18786,6.62209,9.11787,7.04342,7.03696,3.14631,7.53606,7.08528,4.95969},
{1.17294,7.00191,9.21379,2.09573,6.32756,7.69785,1.68448,2.27286,2.58504,8.23522}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {99.3686,729.986,43.4224,358.543,41.6153,14.2407,156.628,365.866,507.173,52.677,760.961,923.907,47.2282,256.966,382.705,239.014,938.543,873.009,295.139,824.528,989.868,657.832,853.432,162.665,19.8474,886.381,785.965,247.649,465.813,338.052,345.853,210.452,213.191,71.8862,665.699,30.2528,122.995,93.7701,450.606,311.907,253.383,141.917,232.682,295.402,571.018,833.923,651.789,490.86,438.447,548.634};


static const std::vector<float> min_impressions = {33.2518,29.5122,44.2104,48.4912,42.2962,27.8805,21.6933,23.5593,39.2743,48.9242};


#endif
