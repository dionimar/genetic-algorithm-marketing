#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{8.65519,6.56461,7.32358,3.66785,3.89214,7.9646,8.04796,1.55916,5.56828,3.59171,7.56559,3.5083,7.69763,4.12091,1.09387,4.44581,9.67369,4.41457,2.86053,1.13117},
{6.40128,3.36741,5.23593,7.66395,4.88604,4.87962,7.05998,7.26739,2.72638,8.25613,1.25847,8.48637,6.82013,3.56465,8.30988,2.95543,5.83761,5.54233,5.80072,7.17867},
{8.4541,3.49647,9.33675,8.05781,3.14278,4.42066,3.53485,2.82125,1.13866,2.0856,9.86209,2.04431,5.04745,7.05552,8.45242,2.44523,1.33737,5.24405,4.87845,7.43931},
{3.25068,7.86054,1.47322,2.10414,4.62528,7.7597,2.15965,9.46052,9.32788,9.53104,8.30688,8.06366,6.60638,4.33739,8.15962,4.45679,5.5751,7.61535,8.19178,5.72325},
{4.36555,6.37332,7.17,9.09379,9.36946,5.23377,3.0656,7.73832,1.7913,3.1964,6.9917,3.9776,3.08998,8.90912,2.08401,4.46136,4.94784,1.78257,6.91751,6.09084},
{5.3763,6.13622,7.17896,1.97694,6.24295,1.12172,6.35414,7.88977,7.89891,8.09896,2.52639,2.52646,9.76272,2.20123,9.33474,7.52471,4.73642,8.8517,8.80022,9.0214},
{1.48333,2.23043,9.79156,9.44415,8.81778,9.90805,4.44786,7.79461,7.26089,9.17706,6.34464,4.7811,8.28424,7.3797,7.30161,2.81719,6.27409,5.62156,6.40673,9.92196},
{8.31697,9.83759,1.82108,1.2805,3.86391,8.37731,7.49985,1.61239,8.53602,6.02322,5.40415,9.99689,7.55238,4.16021,8.38308,3.99536,7.86771,3.08678,1.48221,7.99197},
{9.9849,3.48324,4.76559,8.01559,1.87024,1.6766,5.02214,2.68666,1.5013,3.55182,1.22971,5.82166,6.26549,6.23615,7.68654,9.44325,7.10586,6.24118,2.07271,1.19773},
{1.09999,6.42299,8.47736,1.32971,4.83322,9.17269,5.27313,5.61504,8.22913,4.13711,2.38803,8.4153,3.62814,1.50262,8.05129,6.64496,2.05546,2.99309,4.27388,2.87092},
{1.89327,1.3515,3.71649,9.13141,8.0564,3.61621,7.22553,8.94837,8.7238,8.72521,3.21916,5.79867,4.63573,5.42045,4.212,1.31172,6.29039,5.35909,6.71772,7.12726},
{6.42645,4.73067,2.04222,3.75603,3.0673,5.8999,1.63918,4.59508,3.28283,8.3092,2.46431,4.73362,6.77095,8.4568,8.12662,4.28828,9.46986,7.7092,3.75623,7.22455},
{7.16692,7.53512,5.59018,7.91269,7.68184,9.19085,5.67771,1.12267,4.69518,2.54058,7.51816,5.50884,3.43321,2.60717,1.77369,7.71358,5.94134,8.60949,5.48028,7.06207},
{3.82258,3.04865,5.6593,9.4995,6.21622,7.9237,3.43646,4.80181,2.1891,9.98414,9.8627,2.95743,4.58061,6.62915,4.04496,1.61734,6.03449,7.66289,9.83465,4.11728},
{4.11743,5.35028,8.13378,3.88788,9.47566,3.43328,5.24751,2.83071,6.3387,5.19683,1.8293,2.6723,2.7532,4.28178,9.79624,9.37526,1.0918,4.15258,6.89865,1.99317},
{2.90639,3.90189,7.59678,9.64722,6.83177,3.92753,8.7631,6.69394,7.58777,8.13038,2.13374,3.82123,9.05145,1.04303,7.30799,5.05688,5.94784,3.68804,4.49344,3.21915},
{9.22148,6.59923,7.45475,4.08597,6.94681,6.93763,4.14675,5.22678,4.30346,8.91807,9.2049,2.31753,8.65297,4.85372,8.26994,9.85716,9.84283,2.63213,7.15591,5.23762},
{1.59568,2.71751,5.64329,9.79909,3.87799,2.30416,4.68284,5.98157,7.80371,7.18765,7.15102,9.4947,3.19334,9.57864,5.14601,3.82673,4.12367,9.4655,1.28156,8.10441},
{9.18886,1.73523,5.30646,6.33757,8.61512,2.73743,6.75825,4.30398,5.74671,6.2144,6.27206,7.60127,6.04312,5.35885,3.13254,8.27579,7.55439,4.03239,9.33968,9.42767},
{1.5219,1.5727,6.83925,5.78984,2.56104,6.60426,9.29394,7.38714,4.14814,8.34296,1.80213,9.76566,8.53217,6.41153,4.61509,9.87851,2.56035,2.26861,2.59806,7.04505},
{8.19291,5.30759,5.25903,5.06485,2.18362,9.33055,7.5912,6.50017,2.61691,2.39457,7.73503,5.19295,8.0553,3.00317,7.89577,6.0638,8.66782,7.04069,4.87382,8.28382},
{6.30798,9.54215,6.21669,2.23081,8.99755,2.57613,3.64393,6.69246,3.70721,8.6783,7.36737,2.88913,9.06479,1.80036,1.94332,5.8421,7.8554,1.2814,5.626,7.00056},
{7.29692,2.74781,2.75675,8.32738,7.70626,5.75806,3.56581,5.61626,8.35967,7.45788,9.60272,5.67832,7.71523,6.7091,7.86788,5.21847,1.92797,5.08236,1.11102,3.8017},
{5.14781,4.4995,8.1927,9.97742,8.18291,6.73755,6.98311,2.96462,6.92543,7.70508,4.31069,3.3364,6.3086,3.88641,2.57649,9.99806,1.98959,9.4879,1.98709,5.24436},
{4.67381,1.72256,8.91934,9.68407,7.84367,1.60319,9.96855,5.76209,3.52871,4.61856,9.93647,5.54342,9.74039,9.31177,9.99454,2.12491,7.63276,6.41095,7.67208,3.76221},
{5.62779,8.50371,9.61729,9.14876,5.6668,4.51986,1.80912,6.97067,2.22002,9.05559,3.18445,6.66959,8.36172,1.30362,6.9173,2.81547,9.59455,8.86226,7.58013,9.70973},
{5.89879,9.63145,1.0847,9.08227,4.09389,4.614,2.1779,6.18851,3.24982,7.61356,6.74226,8.89272,2.87501,4.2409,1.31297,2.42342,6.32605,6.34183,2.64154,3.99968},
{3.54624,1.68802,4.43469,5.27689,6.78831,8.02126,5.74379,9.47239,7.40948,3.23377,7.2771,1.38208,3.54425,3.72255,9.67857,9.3494,3.27007,5.32998,2.09565,9.8999},
{1.02646,1.03678,5.14626,7.01879,3.83142,1.07184,1.3103,9.29749,6.00578,2.94793,6.50408,1.51345,2.75931,7.24457,8.47992,7.99324,9.8495,6.33159,2.82459,8.45509},
{3.73617,7.68366,6.09226,2.96806,7.76177,3.24302,5.86294,3.95133,4.7733,3.97822,5.01125,8.0361,1.24593,1.97865,7.06024,6.99999,3.7343,1.37217,6.90548,4.00339},
{1.43469,2.03195,1.75997,9.08606,6.3244,7.87404,2.03427,6.86284,7.45999,9.09931,2.22822,2.49254,4.71895,3.31082,7.31121,4.36563,6.08769,4.54353,6.09403,9.81599},
{3.67207,9.63453,1.81713,1.59651,1.15243,5.96591,4.37976,9.42745,8.83184,3.04856,2.30801,4.37494,1.15063,2.96931,4.16352,2.65688,7.59458,4.66419,7.38489,4.41218},
{8.89611,1.91584,2.32914,3.16933,9.978,7.82419,8.70285,2.13014,3.31242,9.95284,7.73716,5.58424,8.4634,7.94494,4.26813,4.72073,3.75727,6.78283,2.30699,3.19285},
{1.80936,9.08719,6.79102,4.54104,5.4708,8.11459,6.68171,1.9742,2.51834,8.24293,3.73392,7.85341,1.84878,7.24397,8.71533,7.70586,2.73702,4.43907,1.73449,3.53682},
{5.02892,3.69331,8.59792,9.21871,3.00084,7.58268,7.83019,5.33262,5.24854,1.65353,1.49223,9.32787,6.66047,1.26365,1.15131,9.39067,1.59801,8.09019,5.69035,7.25537},
{3.26521,1.74814,3.36,5.72276,1.68598,1.27197,7.2734,4.20053,9.88779,3.07452,6.13959,3.76845,9.11046,9.91269,4.70568,6.62766,7.05188,9.80128,8.23196,1.52304},
{1.70307,1.67192,1.53006,9.18248,5.06831,3.33023,1.89204,1.4951,7.27763,7.66384,3.75351,8.97828,1.83892,7.18339,8.21302,6.17344,7.39838,9.54063,4.39653,6.7943},
{2.1406,3.70092,7.23484,6.65939,1.23422,5.92006,7.48452,3.22314,2.45955,7.51414,7.93648,8.45449,5.69627,6.12431,9.73894,7.99225,7.65905,6.41286,9.4843,2.36654},
{6.72965,7.09137,8.68261,8.23041,1.71245,5.26629,7.19173,7.46969,6.88392,4.06486,8.33704,4.04218,4.74889,6.58699,6.94128,9.24679,7.39718,7.8383,3.9359,5.71582},
{5.9049,3.87651,6.38572,7.7767,2.14934,2.42253,6.5074,2.26158,1.31095,6.55264,5.0026,3.25524,1.86364,8.01529,9.98337,7.29988,1.72203,4.51332,3.5894,7.01281},
{8.08506,9.72594,8.5768,9.93254,3.25156,3.38374,3.05936,1.64886,1.36659,6.43954,9.28007,7.71536,7.11763,8.66132,1.09137,8.68133,7.23941,3.51184,3.25965,6.89713},
{5.2372,5.67869,4.55107,1.94612,1.87271,5.62266,8.1167,9.55641,6.37409,6.24391,4.95804,7.05134,6.83812,9.00436,7.38714,3.10507,2.81292,3.0685,7.70586,7.30556},
{7.11633,8.24267,5.15096,8.93586,5.93168,7.3167,8.58004,2.11127,9.26811,7.91076,1.10246,1.07443,5.5351,1.65895,8.00416,7.34634,9.28482,3.60777,6.62965,2.70885},
{9.07483,3.59642,8.43281,3.52666,2.83939,2.07419,2.65513,5.9118,5.85471,9.46567,1.92626,7.43631,8.83451,7.07507,8.05282,1.38591,9.92941,2.70933,4.31378,6.97192},
{6.57493,5.85341,8.04109,7.716,2.11066,1.11606,6.38337,9.7655,6.35555,7.69319,4.66476,2.54177,2.51338,1.57161,8.82411,9.16632,2.27504,6.07831,6.43751,5.26802},
{2.65144,9.33741,8.62277,4.57815,9.52258,1.43044,9.28538,1.85536,5.21056,4.21732,6.92168,7.4415,3.46342,6.62415,4.34515,4.47109,9.34184,8.6839,7.34193,1.66093},
{9.00127,5.33073,9.92096,8.36329,5.36899,8.30056,9.31215,4.84687,1.37741,9.85887,9.14507,2.5569,3.0803,2.33331,7.67558,4.21647,2.39285,5.45083,9.31478,3.90848},
{9.79423,4.5862,4.58806,8.46377,1.33362,6.95119,2.71323,5.85076,9.14922,5.1143,1.98179,7.1018,3.82521,7.93879,9.11597,5.22517,2.90496,6.23572,3.06457,7.71791},
{9.35328,2.85161,1.93307,1.42226,2.39152,2.84358,5.47215,3.97338,5.64351,9.711,1.58244,3.34757,8.93553,7.8186,4.23988,3.1956,2.47201,3.34591,9.49499,4.85599},
{5.68748,8.04325,7.48042,1.05736,2.85645,6.56739,1.54547,4.56819,4.91106,9.92866,6.40195,9.13549,4.30303,8.71005,9.80608,2.85445,6.67569,3.1355,1.1865,5.81603}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {255.103,789.076,456.733,462.524,656.513,292.009,414.143,457.606,203.776,52.8937,135.642,27.2252,220.037,495.828,166.24,744.946,902.277,574.586,324.246,184.491,555.513,531.454,641.135,503.855,764.623,328.915,776.664,297.994,361.338,913.637,974.529,788.737,639.77,13.4335,87.7867,650.596,8.89805,926.388,288.465,513.227,831.322,941.161,203.485,645.584,688.684,999.544,302.949,335.439,676.11,62.0271};


static const std::vector<float> min_impressions = {39.996,38.4323,32.2346,20.5791,23.1331,29.9842,39.0648,28.4618,28.9099,25.0391,24.7231,33.0687,34.7447,36.1021,28.4881,36.6672,21.1711,49.0769,40.2738,42.0323};


#endif
