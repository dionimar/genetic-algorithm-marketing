#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 100;
static const int segments = 5;

static const std::vector< std::vector<float> > restr_rep {{2.10722,1.06987,7.20946,6.9009,7.35181},
{3.47594,6.46658,2.05876,5.40998,6.67469},
{8.97313,5.40792,2.78231,3.30121,8.47287},
{9.94736,4.13756,9.87004,2.22293,4.01497},
{4.23549,4.21261,1.23715,7.72319,8.28634},
{3.40381,2.26686,1.20331,6.22716,1.10374},
{7.07352,9.22458,3.81907,8.41513,1.03978},
{4.93917,7.8746,1.24243,8.91248,2.98169},
{5.17269,5.31887,4.74569,9.59462,3.29867},
{3.6474,2.06326,2.12812,5.70835,9.92147},
{3.41255,9.10387,6.98443,9.73905,5.80537},
{6.76772,9.82409,9.20732,8.30369,7.52741},
{4.85748,3.76877,8.52993,5.33111,1.95581},
{8.99193,6.65126,2.21147,5.46468,5.4528},
{1.8344,7.68198,1.47434,3.50831,6.6067},
{2.14413,5.7523,7.34387,1.24229,3.69226},
{4.05613,3.2669,4.40679,5.74651,1.42946},
{8.59043,2.74516,9.34606,1.27834,7.89214},
{7.28795,1.1509,6.99627,3.84355,8.51847},
{1.44617,7.91551,7.91353,9.94213,7.55264},
{5.5263,2.95023,8.09196,6.47375,4.88632},
{7.30282,9.26852,9.45351,7.52922,3.93465},
{1.44395,3.62979,4.09973,6.83611,1.26084},
{3.37777,2.341,2.6986,2.39216,7.78095},
{3.96112,6.00143,8.00845,6.78912,7.73864},
{1.80221,8.70787,3.46408,4.66524,9.85532},
{5.73296,9.50225,2.08015,1.25717,1.23886},
{6.17665,5.56515,2.88394,9.91814,5.35282},
{4.8817,3.8343,8.17401,8.56979,8.17149},
{6.57293,9.60357,9.00288,4.21876,8.77418},
{7.58772,8.89814,5.14588,9.47804,7.15006},
{5.82013,9.20071,1.94368,6.37111,3.46115},
{6.47827,4.67803,7.87856,4.51253,8.55587},
{4.39456,6.53001,4.4124,8.40374,1.30609},
{5.75287,4.19802,2.1016,2.37796,1.23233},
{4.54963,8.25016,4.92927,9.51795,7.91461},
{1.0796,1.44452,8.04431,9.48669,8.37742},
{7.36413,4.10001,3.48064,2.07483,1.97508},
{3.59729,9.65754,5.12405,4.47172,3.83938},
{9.2968,1.76112,2.42402,4.27713,5.29535},
{9.04548,6.37998,9.21548,9.53999,7.24322},
{8.75924,7.60253,1.36445,3.07268,5.29354},
{5.45393,9.42282,4.28495,6.26247,3.7474},
{1.98922,4.1211,2.50324,6.53445,1.8886},
{5.27788,5.59663,6.4546,1.80267,4.57765},
{3.29548,4.93552,4.94835,3.20254,6.73881},
{7.63284,3.25109,5.57769,2.63388,8.97923},
{2.23171,2.42556,2.63659,9.33746,8.59432},
{3.65512,8.81829,7.46101,4.00328,7.37036},
{4.34197,8.35043,7.94191,4.27122,8.40948},
{6.49805,3.21432,3.93779,2.64715,2.95753},
{1.50226,2.85493,4.09503,2.88341,6.61173},
{4.22445,2.67139,7.30834,1.96333,6.5835},
{7.83721,1.85452,7.76565,2.73061,6.53345},
{7.29226,4.73243,7.36802,5.18316,8.10143},
{7.89985,8.44698,3.11798,9.25648,4.04193},
{7.76795,2.1559,6.08499,6.30442,6.16939},
{3.87341,8.14478,5.86675,8.26777,4.58276},
{5.87824,9.91239,7.93504,1.90519,3.04681},
{3.40747,2.76857,3.23823,8.49448,3.80315},
{8.70428,3.00116,1.35139,7.33964,4.96724},
{1.54441,7.0419,5.11946,7.57342,4.10032},
{2.20876,3.8504,6.11981,2.23043,7.14101},
{2.95518,5.25399,8.42206,4.24491,1.36032},
{3.17565,4.56679,6.3694,4.75132,5.69137},
{5.11554,9.1785,7.32947,6.831,5.8013},
{5.67007,8.17738,9.83034,4.55062,4.04314},
{2.10056,7.07824,5.21619,8.30353,6.42526},
{3.78165,6.42597,9.82808,9.80534,5.85467},
{2.22462,5.98844,2.42472,7.153,6.64458},
{3.82374,4.99745,1.76904,8.9908,4.03642},
{4.7136,7.19677,6.70819,5.71502,5.73842},
{5.11886,2.12801,4.81926,5.08096,4.42346},
{8.0734,6.8694,1.34621,8.11696,3.52543},
{6.6608,3.37017,2.92744,7.99854,8.38435},
{7.37666,4.68676,3.39863,8.32408,5.87375},
{7.46315,5.48559,1.99312,7.91141,1.31005},
{7.63593,3.68239,4.32889,9.71238,1.05204},
{7.62622,1.69395,2.54834,3.92442,3.29951},
{4.61784,4.9968,8.09186,9.51837,2.70211},
{9.57535,8.43099,9.2099,4.88206,6.32891},
{5.29774,2.51969,8.42739,1.11843,1.01978},
{8.32771,8.56403,3.41877,9.82069,6.70385},
{9.05754,3.22422,3.35629,6.17685,4.45621},
{6.89122,6.30034,8.74261,2.19821,4.60493},
{9.73279,7.42772,7.83813,1.89989,4.74082},
{5.30226,3.52423,8.21403,9.83729,3.37908},
{6.32048,8.42993,2.30192,5.92267,2.26061},
{8.84062,8.08212,2.23744,3.69805,1.68338},
{6.1773,7.76604,3.97055,5.93536,7.63213},
{9.55771,8.5594,6.88204,9.75106,5.45269},
{3.72881,8.86849,2.36514,5.79023,7.20305},
{7.75797,2.37748,6.13296,7.89251,8.60926},
{3.83078,2.73562,8.12698,6.60396,2.08277},
{3.65014,5.95916,6.23205,4.49373,7.99116},
{7.47006,1.22809,7.24844,7.30978,1.10711},
{1.49607,3.81846,8.12719,8.00976,8.79203},
{4.666,7.59194,4.7885,4.1445,4.61572},
{9.93092,5.71638,4.49539,2.3439,8.29332},
{5.7745,7.9449,1.3229,7.50446,2.04559}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {137.451,894.18,17.3704,962.334,520.732,36.6606,457.499,550.69,590.125,644.613,966.212,67.6121,376.768,147.528,468.203,311.73,916.136,480.073,57.8571,830.935,723.461,628.616,243.112,84.5263,93.7629,732.518,631.163,760.971,833.807,987.538,259.492,806.323,784.641,914.041,647.484,649.56,370.458,267.807,198.31,495.841,120.288,159.139,120.697,225.336,33.8411,148.511,90.5733,288.174,694.148,360.737,295.243,349.46,986.905,742.536,931.734,861.779,370.73,763.541,485.718,936.589,616.769,820.561,35.3087,153.426,974.51,880.167,25.5829,321.361,954.461,582.731,719.666,66.3745,73.3482,148.379,630.035,371.911,333.927,988.271,369.005,986.124,165.954,180.038,471.905,82.7502,816.71,958.883,513.02,423.107,320.786,280.965,482.936,440.014,643.117,306.297,795.017,189.455,697.704,150.349,339.49,124.854};


static const std::vector<float> min_impressions = {49.6781,42.2214,76.7518,42.818,25.9607};


#endif
