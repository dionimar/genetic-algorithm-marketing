#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(events[56], events[95]),events[50]),events[79]),events[7]),events[35]),events[1]),events[6]),events[198]),events[74]),events[33]),cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(events[99], events[125]),events[111]),events[67]),events[7]),events[177]),events[78]),events[189]),events[35]),events[12]),events[159]),cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(events[6], events[118]),events[119]),events[163]),events[87]),events[173]),events[113]),events[139]),events[82]),events[4]),events[187]),cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(events[131], events[108]),events[152]),events[111]),events[27]),events[19]),events[26]),events[68]),events[69]),events[130]),events[116]),cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(events[71], events[163]),events[49]),events[94]),events[24]),events[4]),events[3]),events[128]),events[167]),events[103]),events[12])};


static const std::vector< std::vector<float> > prob = {{0.114701, 0.156618, 0.208993, 0.791357, 0.552671, 0.511756, 0.642538, 0.336616, 0.234383, 0.848437, 0.0627612, 0.720152, 0.77983, 0.33042, 0.844262, 0.512637, 0.00283768, 0.493913, 0.829822, 0.42783, 0.967066, 0.211486, 0.0903232, 0.126845, 0.0424684, 0.655496, 0.37461, 0.562073, 0.0410929, 0.0540217, 0.964311, 0.0482407, 0.661901, 0.777267, 0.67295, 0.0209345, 0.0994561, 0.251469, 0.564452, 0.3626, 0.497108, 0.432291, 0.956967, 0.959527, 0.471565, 0.712763, 0.653038, 0.0590486, 0.254899, 0.740386, 0.790427, 0.385082, 0.193029, 0.454832, 0.0813664, 0.196602, 0.592306, 0.121201, 0.514022, 0.942804, 0.231656, 0.524667, 0.913177, 0.842085, 0.281421, 0.0676048, 0.00797075, 0.870261, 0.137712, 0.073678, 0.501452, 0.732075, 0.219168, 0.541572, 0.0587744, 0.921171, 0.742243, 0.773005, 0.624082, 0.0453394, 0.218872, 0.231735, 0.137458, 0.652227, 0.257793, 0.714386, 0.929774, 0.455866, 0.56963, 0.557997, 0.605591, 0.995755, 0.501093, 0.718399, 0.464402, 0.375163, 0.543243, 0.540072, 0.174449, 0.395546, 0.815886, 0.151616, 0.558977, 0.355455, 0.763685, 0.33414, 0.319492, 0.905369, 0.430294, 0.80459, 0.147637, 0.0267489, 0.66964, 0.716921, 0.937665, 0.538527, 0.958834, 0.690442, 0.0104789, 0.226525, 0.189756, 0.986506, 0.830917, 0.98965, 0.394824, 0.32707, 0.844184, 0.383684, 0.755788, 0.241369, 0.825211, 0.283113, 0.828578, 0.453969, 0.242741, 0.0932667, 0.942861, 0.993063, 0.249184, 0.277542, 0.517055, 0.681268, 0.430911, 0.256121, 0.892282, 0.814966, 0.138441, 0.312608, 0.315903, 0.197568, 0.618363, 0.986688, 0.183478, 0.128249, 0.164792, 0.146193, 0.972712, 0.116981, 0.647687, 0.772228, 0.135486, 0.47241, 0.53934, 0.282737, 0.606327, 0.718496, 0.614818, 0.0692637, 0.954057, 0.667631, 0.0113344, 0.364846, 0.130902, 0.843175, 0.541387, 0.638001, 0.198914, 0.232116, 0.591934, 0.271331, 0.590453, 0.338868, 0.788559, 0.10455, 0.30579, 0.260496, 0.389205, 0.552566, 0.48113, 0.491622, 0.814682, 0.459032, 0.651044, 0.688603, 0.974418, 0.525293, 0.754592, 0.299063, 0.579464, 0.649143},
{0.291738, 0.142101, 0.707096, 0.424644, 0.468058, 0.300626, 0.743502, 0.092464, 0.372323, 0.298917, 0.0240631, 0.308281, 0.479868, 0.691039, 0.992853, 0.976487, 0.574123, 0.78756, 0.280547, 0.988295, 0.095586, 0.536534, 0.880907, 0.68584, 0.628815, 0.10303, 0.231162, 0.761789, 0.0112189, 0.697869, 0.40875, 0.172662, 0.835064, 0.263469, 0.41753, 0.896874, 0.258845, 0.115459, 0.596692, 0.0765615, 0.669444, 0.707055, 0.211608, 0.0699448, 0.151565, 0.603724, 0.245495, 0.668644, 0.76862, 0.258098, 0.788446, 0.893457, 0.505882, 0.657778, 0.582115, 0.7411, 0.902649, 0.752591, 0.502221, 0.135162, 0.0873505, 0.83264, 0.6014, 0.184073, 0.273494, 0.433974, 0.809952, 0.684569, 0.24985, 0.707056, 0.599655, 0.263501, 0.820879, 0.293128, 0.331347, 0.346295, 0.0972353, 0.0637926, 0.998543, 0.800251, 0.576384, 0.977141, 0.0825602, 0.0827887, 0.118496, 0.433178, 0.347404, 0.792517, 0.216758, 0.327966, 0.749678, 0.0541525, 0.153658, 0.410838, 0.894097, 0.267561, 0.144791, 0.473823, 0.539061, 0.821332, 0.41103, 0.336203, 0.543005, 0.334972, 0.563517, 0.642691, 0.761539, 0.517545, 0.931544, 0.766611, 0.396407, 0.540508, 0.697394, 0.134267, 0.796482, 0.402226, 0.871891, 0.248354, 0.146258, 0.101087, 0.0663958, 0.731647, 0.293755, 0.610285, 0.716703, 0.266673, 0.279466, 0.583001, 0.0863214, 0.930939, 0.602834, 0.40911, 0.146603, 0.725888, 0.710132, 0.629071, 0.843292, 0.585042, 0.569428, 0.826855, 0.275101, 0.252613, 0.490101, 0.507288, 0.853261, 0.981483, 0.0401738, 0.624458, 0.466468, 0.326378, 0.18404, 0.644447, 0.851562, 0.504741, 0.0700794, 0.631556, 0.101586, 0.532401, 0.0860488, 0.601793, 0.83388, 0.66481, 0.591133, 0.612643, 0.423427, 0.483822, 0.678546, 0.236651, 0.113406, 0.7635, 0.262824, 0.563226, 0.61065, 0.0948748, 0.792196, 0.191001, 0.523501, 0.905633, 0.277751, 0.732218, 0.604044, 0.706399, 0.410476, 0.357114, 0.660453, 0.734269, 0.245155, 0.219648, 0.848956, 0.32268, 0.804285, 0.364024, 0.255062, 0.158305, 0.241249, 0.0794553, 0.202346, 0.0862804, 0.0594965, 0.571286},
{0.639863, 0.809754, 0.540947, 0.714707, 0.576767, 0.859867, 0.762863, 0.875715, 0.956732, 0.511965, 0.337762, 0.537897, 0.713869, 0.803105, 0.833041, 0.855794, 0.958989, 0.519321, 0.307435, 0.748258, 0.346154, 0.140333, 0.260777, 0.523505, 0.790957, 0.596983, 0.677521, 0.682476, 0.785066, 0.203343, 0.523628, 0.0513823, 0.413805, 0.502811, 0.177314, 0.793994, 0.945991, 0.971108, 0.679809, 0.526944, 0.963153, 0.880775, 0.109999, 0.0298422, 0.485921, 0.825062, 0.53198, 0.094299, 0.772319, 0.0168737, 0.504587, 0.277431, 0.177728, 0.463611, 0.950336, 0.907277, 0.88627, 0.666248, 0.219063, 0.456029, 0.867293, 0.649532, 0.480289, 0.647389, 0.662536, 0.108208, 0.227326, 0.319688, 0.964711, 0.0294208, 0.444014, 0.737394, 0.495645, 0.235365, 0.32559, 0.170581, 0.715547, 0.0171719, 0.746966, 0.681293, 0.281649, 0.201991, 0.382359, 0.205628, 0.879174, 0.51217, 0.127015, 0.547311, 0.792927, 0.0696312, 0.584007, 0.805143, 0.305411, 0.261948, 0.420811, 0.522612, 0.945021, 0.030105, 0.249451, 0.38552, 0.327589, 0.68522, 0.175364, 0.801025, 0.488358, 0.000324068, 0.273593, 0.194661, 0.230275, 0.405467, 0.299028, 0.165653, 0.304604, 0.292849, 0.355303, 0.456963, 0.279802, 0.357712, 0.199106, 0.644354, 0.490331, 0.625382, 0.928259, 0.614135, 0.724065, 0.0742028, 0.288447, 0.484447, 0.191512, 0.59091, 0.551043, 0.64795, 0.981523, 0.472317, 0.840786, 0.93064, 0.832199, 0.0723751, 0.535647, 0.977237, 0.895549, 0.998538, 0.535698, 0.699515, 0.13996, 0.210475, 0.833471, 0.527076, 0.966947, 0.885652, 0.0997582, 0.362188, 0.213774, 0.510518, 0.506114, 0.533575, 0.104235, 0.542432, 0.372655, 0.303397, 0.00665329, 0.277613, 0.51825, 0.948236, 0.880507, 0.640188, 0.16857, 0.645038, 0.986738, 0.0335072, 0.10997, 0.434585, 0.354885, 0.962042, 0.853661, 0.512323, 0.259887, 0.286015, 0.254944, 0.38042, 0.315928, 0.385031, 0.468143, 0.04692, 0.508358, 0.130036, 0.150385, 0.62156, 0.902252, 0.753842, 0.117675, 0.147995, 0.999416, 0.980233, 0.0856551, 0.103234, 0.820245, 0.0903213, 0.789957, 0.998722},
{0.535391, 0.278368, 0.0641296, 0.218857, 0.299751, 0.632559, 0.725924, 0.61522, 0.0225643, 0.722494, 0.952063, 0.210273, 0.868515, 0.287387, 0.445145, 0.368452, 0.71822, 0.551843, 0.676711, 0.658336, 0.400691, 0.237258, 0.929968, 0.64264, 0.474864, 0.767466, 0.997197, 0.126087, 0.884122, 0.716202, 0.920903, 0.582848, 0.249663, 0.717332, 0.276141, 0.550577, 0.784299, 0.657738, 0.080224, 0.690573, 0.121658, 0.0437056, 0.388611, 0.665259, 0.323379, 0.250162, 0.762832, 0.794815, 0.686196, 0.267179, 0.113535, 0.216057, 0.272118, 0.859086, 0.469015, 0.0319098, 0.586034, 0.695104, 0.97283, 0.99712, 0.426442, 0.958481, 0.883208, 0.42196, 0.902239, 0.70767, 0.436651, 0.884953, 0.949381, 0.340524, 0.284455, 0.443296, 0.154989, 0.838761, 0.401028, 0.189672, 0.645055, 0.162376, 0.243862, 0.603901, 0.747968, 0.182082, 0.394722, 0.32203, 0.507624, 0.396295, 0.885599, 0.097214, 0.552029, 0.866032, 0.0942639, 0.375961, 0.884846, 0.462915, 0.979372, 0.190474, 0.682063, 0.398987, 0.27057, 0.433036, 0.534675, 0.35166, 0.49372, 0.728217, 0.375887, 0.0529726, 0.118032, 0.305923, 0.226026, 0.72083, 0.985871, 0.272262, 0.648371, 0.469225, 0.401643, 0.0995298, 0.734257, 0.457387, 0.466558, 0.276829, 0.0825397, 0.327887, 0.641508, 0.337112, 0.334994, 0.74163, 0.625466, 0.995714, 0.898247, 0.754803, 0.941158, 0.121405, 0.636027, 0.16377, 0.061201, 0.77916, 0.0611407, 0.810834, 0.796047, 0.96619, 0.528613, 0.491466, 0.443394, 0.564328, 0.730476, 0.203491, 0.942899, 0.805614, 0.707371, 0.293639, 0.32752, 0.753948, 0.764343, 0.984721, 0.583863, 0.808444, 0.688873, 0.792613, 0.932553, 0.885449, 0.264864, 0.219654, 0.515632, 0.430074, 0.423487, 0.660137, 0.0804722, 0.722841, 0.00487832, 0.100013, 0.352177, 0.29692, 0.0954187, 0.238864, 0.156893, 0.439822, 0.593265, 0.0915286, 0.757618, 0.976864, 0.894037, 0.809, 0.895193, 0.511376, 0.631792, 0.517951, 0.923387, 0.357498, 0.861131, 0.971638, 0.190826, 0.660797, 0.262483, 0.21217, 0.0777917, 0.172535, 0.382911, 0.714155, 0.0989409, 0.485542},
{0.863831, 0.401758, 0.272099, 0.918723, 0.858844, 0.953239, 0.141254, 0.13984, 0.983096, 0.0326543, 0.600147, 0.268435, 0.827454, 0.23695, 0.477596, 0.387766, 0.0045987, 0.689443, 0.0158509, 0.228985, 0.666394, 0.0599519, 0.32285, 0.222865, 0.230407, 0.855581, 0.350077, 0.232351, 0.0299645, 0.727217, 0.354006, 0.0122114, 0.270685, 0.462989, 0.0173151, 0.502873, 0.336186, 0.727413, 0.171302, 0.0589551, 0.716998, 0.313732, 0.525639, 0.64484, 0.846695, 0.306654, 0.397988, 0.601533, 0.931508, 0.073678, 0.578304, 0.268211, 0.0147117, 0.431558, 0.968732, 0.660208, 0.226703, 0.0588407, 0.436974, 0.748614, 0.294732, 0.348844, 0.506003, 0.712962, 0.402868, 0.324485, 0.446432, 0.0437741, 0.552999, 0.265313, 0.230844, 0.0471645, 0.484149, 0.69008, 0.946069, 0.540282, 0.966304, 0.0965946, 0.16765, 0.129662, 0.843799, 0.262877, 0.36255, 0.0118649, 0.772902, 0.135148, 0.0575631, 0.341726, 0.222079, 0.662178, 0.800683, 0.011948, 0.619383, 0.0553431, 0.259457, 0.0399609, 0.115106, 0.775538, 0.809686, 0.300566, 0.678908, 0.260101, 0.230398, 0.521693, 0.0513579, 0.377218, 0.966352, 0.501074, 0.846779, 0.426697, 0.514446, 0.99888, 0.383193, 0.506878, 0.933247, 0.214758, 0.666229, 0.912394, 0.578886, 0.731546, 0.291104, 0.965573, 0.461934, 0.275368, 0.357813, 0.535944, 0.380026, 0.56167, 0.405487, 0.433117, 0.386, 0.374805, 0.960344, 0.709789, 0.826883, 0.718756, 0.683422, 0.52326, 0.400569, 0.427926, 0.823122, 0.669237, 0.12187, 0.127134, 0.774166, 0.876347, 0.872072, 0.945265, 0.202606, 0.81765, 0.624434, 0.0679, 0.697063, 0.206866, 0.115214, 0.414048, 0.834007, 0.0213632, 0.209244, 0.360457, 0.0272769, 0.869268, 0.683688, 0.34975, 0.823307, 0.26423, 0.174395, 0.010168, 0.313376, 0.49948, 0.236862, 0.633918, 0.109874, 0.484447, 0.158349, 0.894306, 0.0377062, 0.932664, 0.261006, 0.129491, 0.983863, 0.958333, 0.0359157, 0.954508, 0.110253, 0.174702, 0.845131, 0.640404, 0.924827, 0.417127, 0.739275, 0.898909, 0.926103, 0.883631, 0.600119, 0.992801, 0.444341, 0.928378, 0.22494, 0.357469},
};

static const std::vector<float> costs = {581.865, 802.933, 936.048, 611.915, 566.707, 786.26, 810.461, 226.749, 994.566, 418.179, 923.425, 363.828, 467.274, 440.515, 365.604, 274.471, 849.488, 19.881, 508.285, 157.377, 659.676, 838.993, 238.92, 76.0218, 905.707, 325.754, 791.224, 361.381, 488.113, 554.594, 808.834, 526.568, 856.765, 511.306, 890.374, 260.759, 144.544, 728.505, 877.759, 447.256, 592.715, 717.068, 124.811, 217.644, 948.6, 567.395, 251.089, 175.832, 158.177, 578.431, 854.529, 821.376, 314.344, 40.3027, 561.67, 309.997, 403.157, 141.351, 358.673, 398.245, 332.616, 122.568, 236.68, 86.2175, 941.581, 98.3968, 602.032, 95.7807, 529.444, 25.2537, 193.615, 448.221, 591.779, 410.416, 886.587, 907.88, 943.294, 798.273, 770.89, 707.633, 826.846, 356.186, 631.362, 396.607, 452.018, 971.247, 319.329, 121.227, 921.784, 305.598, 218.537, 775.373, 664.55, 105.275, 398.069, 842.997, 31.386, 250.877, 365.964, 136.12, 579.393, 477.353, 565.955, 909.547, 980.009, 941.142, 638.335, 402.881, 784.549, 815.62, 302.612, 561.923, 841.652, 578.707, 183.771, 32.6859, 722.717, 84.3343, 425.074, 474.838, 957.034, 435.756, 362.172, 128.932, 472.612, 742.541, 756.012, 633.17, 659.663, 496.854, 783.694, 306.466, 302.516, 618.256, 696.517, 989.445, 559.305, 54.9428, 316.861, 37.6376, 99.9934, 672.175, 241.463, 615.752, 726.461, 85.8994, 905.019, 896.223, 973.744, 506.299, 826.062, 838.443, 560.427, 258.477, 400.407, 201.437, 881.617, 41.0441, 744.948, 590.574, 713.073, 110.656, 116.512, 95.4158, 233.598, 6.90401, 419.48, 996.474, 365.736, 200.482, 163.449, 421.183, 860.296, 89.9467, 293, 244.7, 164.364, 477.805, 720.768, 681.926, 647.219, 652.014, 58.9248, 349.598, 712.406, 538.45, 178.041, 104.925, 270.033, 265.355, 953.192, 422.387, 492.49, 475.803, 930.009, 245.572, 837.871, 112.859, 311.56, 368.915};

static const std::vector<float> min_impressions = {0.588264, 0.843981, 0.248447, 0.133399, 0.576446};

//
#endif
