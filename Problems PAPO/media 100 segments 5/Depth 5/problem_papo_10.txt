#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(events[41], events[49]),events[76]),events[97]),events[60]),events[99]),cons_indep(cons_excl(cons_indep(cons_indep(cons_excl(events[69], events[95]),events[40]),events[51]),events[58]),events[17]),cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(events[39], events[2]),events[56]),events[34]),events[43]),events[47]),cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(events[79], events[93]),events[66]),events[37]),events[24]),events[89]),cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(events[56], events[65]),events[25]),events[46]),events[44]),events[88])};


static const std::vector< std::vector<float> > prob = {{0.97633, 0.328368, 0.61958, 0.296411, 0.253002, 0.542901, 0.617766, 0.544203, 0.06877, 0.423469, 0.995317, 0.9252, 0.669048, 0.926935, 0.64145, 0.881744, 0.629506, 0.103374, 0.435849, 0.594854, 0.531108, 0.325748, 0.960269, 0.823634, 0.719354, 0.863785, 0.257384, 0.876632, 0.105364, 0.268285, 0.627074, 0.506602, 0.134333, 0.732085, 0.0767945, 0.18523, 0.994289, 0.149962, 0.583111, 0.643021, 0.403787, 0.334009, 0.805095, 0.5197, 0.575665, 0.68928, 0.802917, 0.0493076, 0.691803, 0.562035, 0.315507, 0.19982, 0.520791, 0.432633, 0.0391989, 0.438837, 0.0378428, 0.761642, 0.426775, 0.055012, 0.479029, 0.341784, 0.724567, 0.509673, 0.0348622, 0.205271, 0.714394, 0.642343, 0.214669, 0.797403, 0.931299, 0.981777, 0.810858, 0.449617, 0.960871, 0.269728, 0.372333, 0.369489, 0.802708, 0.632281, 0.809542, 0.140576, 0.0408623, 0.659291, 0.839415, 0.614791, 0.250555, 0.401846, 0.850737, 0.406923, 0.145874, 0.0870368, 0.395471, 0.0199858, 0.296175, 0.468195, 0.64489, 0.692561, 0.650801, 0.184378},
{0.194446, 0.461614, 0.881958, 0.245238, 0.302548, 0.644505, 0.948928, 0.523071, 0.210966, 0.143117, 0.114851, 0.711266, 0.3417, 0.653494, 0.427583, 0.599348, 0.606793, 0.76793, 0.542524, 0.590539, 0.792784, 0.408577, 0.873498, 0.834601, 0.697568, 0.203695, 0.0251905, 0.179735, 0.148519, 0.564168, 0.0226246, 0.0542935, 0.92605, 0.84604, 0.42967, 0.277506, 0.312606, 0.0969118, 0.756506, 0.17246, 0.148897, 0.937601, 0.874114, 0.584661, 0.310102, 0.255266, 0.979514, 0.824237, 0.250951, 0.992135, 0.987017, 0.480444, 0.026882, 0.0839757, 0.475344, 0.804305, 0.188892, 0.862422, 0.110575, 0.882724, 0.229471, 0.472831, 0.852251, 0.0504939, 0.380794, 0.192619, 0.677366, 0.563375, 0.0440621, 0.378051, 0.749714, 0.509373, 0.776665, 0.183475, 0.199317, 0.137908, 0.732329, 0.806364, 0.807813, 0.541928, 0.842816, 0.74987, 0.762041, 0.453562, 0.59392, 0.428186, 0.27919, 0.771018, 0.243889, 0.0055545, 0.919364, 0.566294, 0.160842, 0.523581, 0.26684, 0.695028, 0.823346, 0.228081, 0.492046, 0.881722},
{0.80731, 0.974589, 0.391807, 0.418827, 0.19014, 0.956567, 0.426181, 0.559744, 0.314546, 0.754142, 0.795164, 0.273095, 0.00164306, 0.387509, 0.132612, 0.702251, 0.924546, 0.388718, 0.724625, 0.871726, 0.927583, 0.153209, 0.0115995, 0.175867, 0.863344, 0.177344, 0.826711, 0.558124, 0.377967, 0.0370031, 0.321926, 0.750287, 0.780546, 0.0913932, 0.445977, 0.144423, 0.980315, 0.314903, 0.534577, 0.334575, 0.332651, 0.902198, 0.588305, 0.581186, 0.486, 0.204245, 0.574846, 0.88407, 0.909276, 0.653575, 0.397559, 0.0853371, 0.567344, 0.26925, 0.439262, 0.58404, 0.241433, 0.991043, 0.524631, 0.665301, 0.333071, 0.388151, 0.189816, 0.407586, 0.123727, 0.224912, 0.90974, 0.359037, 0.553715, 0.413162, 0.19739, 0.356514, 0.501565, 0.778711, 0.566475, 0.515132, 0.196541, 0.125762, 0.637297, 0.817911, 0.336374, 0.35893, 0.479707, 0.476232, 0.135401, 0.987218, 0.876322, 0.398295, 0.945942, 0.219313, 0.951377, 0.554349, 0.188421, 0.209791, 0.437205, 0.532795, 0.513985, 0.58093, 0.437251, 0.500973},
{0.3101, 0.34742, 0.446494, 0.667554, 0.511362, 0.677668, 0.167752, 0.106885, 0.22596, 0.270598, 0.77209, 0.998281, 0.409389, 0.778971, 0.758489, 0.273521, 0.0104427, 0.474192, 0.193757, 0.679563, 0.954871, 0.0369323, 0.859106, 0.364976, 0.0509908, 0.324521, 0.120796, 0.887308, 0.590029, 0.563532, 0.177287, 0.780906, 0.639251, 0.595717, 0.360172, 0.595149, 0.789648, 0.242177, 0.726645, 0.031988, 0.540749, 0.352849, 0.16018, 0.512175, 0.516244, 0.996268, 0.849301, 0.154975, 0.712722, 0.551327, 0.181559, 0.119105, 0.358376, 0.572085, 0.147019, 0.772097, 0.368509, 0.621206, 0.677684, 0.171112, 0.931186, 0.374134, 0.0544713, 0.88867, 0.152963, 0.374243, 0.843733, 0.264565, 0.771353, 0.183468, 0.73059, 0.408225, 0.660433, 0.0429152, 0.342016, 0.994478, 0.385768, 0.0435066, 0.494059, 0.316687, 0.932866, 0.653001, 0.167573, 0.194334, 0.763494, 0.21971, 0.591747, 0.584236, 0.31816, 0.727102, 0.334029, 0.966063, 0.47562, 0.305503, 0.339057, 0.404338, 0.55066, 0.571711, 0.337244, 0.736406},
{0.639956, 0.0792945, 0.436772, 0.28053, 0.185632, 0.926085, 0.00570615, 0.424095, 0.618398, 0.498035, 0.78072, 0.924514, 0.620941, 0.073368, 0.163437, 0.475431, 0.442815, 0.0826501, 0.218758, 0.0428296, 0.730177, 0.935872, 0.142102, 0.251624, 0.744109, 0.096061, 0.502007, 0.337385, 0.212553, 0.480458, 0.491102, 0.369448, 0.508078, 0.530398, 0.550004, 0.016942, 0.439469, 0.0365961, 0.82739, 0.818619, 0.200428, 0.125508, 0.623719, 0.714636, 0.735692, 0.465689, 0.818484, 0.334856, 0.281225, 0.032895, 0.853226, 0.633945, 0.566813, 0.751464, 0.0838746, 0.342892, 0.54407, 0.762728, 0.75373, 0.245138, 0.0836554, 0.445395, 0.0686902, 0.340126, 0.269364, 0.485679, 0.176336, 0.808347, 0.933401, 0.743113, 0.0723802, 0.95801, 0.55347, 0.525222, 0.781283, 0.229117, 0.11924, 0.303822, 0.152574, 0.0250376, 0.83086, 0.727428, 0.644623, 0.361245, 0.0404309, 0.425449, 0.144823, 0.896381, 0.384752, 0.197554, 0.114425, 0.69912, 0.538458, 0.371941, 0.987541, 0.509765, 0.0812388, 0.115612, 0.709801, 0.600798},
};

static const std::vector<float> costs = {357.114, 174.593, 423.225, 348.234, 741.529, 886.437, 548.877, 196.887, 501.235, 49.5692, 91.1355, 541.036, 899.307, 736.46, 626.894, 880.162, 710.225, 445.737, 632.571, 437.428, 221.024, 191.409, 326.241, 833.084, 270.009, 826.211, 773.061, 660.222, 444.024, 117.394, 105.029, 172.749, 350.639, 314.345, 863.978, 73.5299, 638.313, 737.569, 560.338, 687.753, 652.373, 923.739, 791.798, 483.196, 57.1877, 866.156, 113.729, 308.07, 870.244, 371.833, 485.168, 310.605, 906.345, 182.039, 936.152, 317.111, 32.8793, 450.609, 204.261, 243.459, 111.407, 758.428, 762.468, 792.431, 838.365, 140.918, 692.952, 476.612, 709.04, 342.208, 264.67, 907.248, 83.362, 895.095, 181.66, 490.641, 589.8, 649.279, 395.838, 247.733, 411.667, 227.997, 987.238, 682.368, 242.143, 233.419, 315.17, 384.991, 486.806, 455.351, 426.39, 558.071, 833.005, 27.252, 531.297, 584.872, 721.477, 914.682, 878.388, 996.022};

static const std::vector<float> min_impressions = {0.453449, 0.962359, 0.625422, 0.189055, 0.104092};

//
#endif
