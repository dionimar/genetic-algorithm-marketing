#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(events[83], events[64]),events[51]),events[56]),events[17]),events[75]),events[41]),events[9]),events[44]),events[15]),events[29]),cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(events[66], events[71]),events[95]),events[65]),events[5]),events[25]),events[92]),events[60]),events[55]),events[42]),events[97]),cons_excl(cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(cons_excl(events[28], events[66]),events[62]),events[47]),events[1]),events[88]),events[90]),events[57]),events[29]),events[9]),events[49]),cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(events[74], events[72]),events[44]),events[43]),events[98]),events[65]),events[14]),events[25]),events[86]),events[75]),events[94]),cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(events[39], events[40]),events[83]),events[60]),events[27]),events[79]),events[61]),events[38]),events[34]),events[74]),events[52]),cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(events[93], events[58]),events[23]),events[2]),events[86]),events[63]),events[54]),events[5]),events[1]),events[47]),events[16]),cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(events[63], events[17]),events[16]),events[66]),events[15]),events[62]),events[2]),events[9]),events[26]),events[55]),events[14]),cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(events[56], events[60]),events[76]),events[84]),events[81]),events[35]),events[49]),events[66]),events[80]),events[79]),events[3]),cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(events[34], events[15]),events[32]),events[55]),events[87]),events[71]),events[43]),events[93]),events[83]),events[84]),events[40]),cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(events[47], events[63]),events[60]),events[99]),events[18]),events[80]),events[15]),events[79]),events[17]),events[74]),events[98])};


static const std::vector< std::vector<float> > prob = {{0.961954, 0.071371, 0.285681, 0.0660533, 0.463347, 0.993935, 0.0128473, 0.471572, 0.373858, 0.190715, 0.223406, 0.422999, 0.532937, 0.473421, 0.46901, 0.339287, 0.973282, 0.233131, 0.29254, 0.606749, 0.978381, 0.358331, 0.575832, 0.989199, 0.900394, 0.257664, 0.441299, 0.919085, 0.47982, 0.835877, 0.249882, 0.330246, 0.810445, 0.91508, 0.427546, 0.465689, 0.993248, 0.700576, 0.117983, 0.370023, 0.265918, 0.369276, 0.918882, 0.983553, 0.327053, 0.948428, 0.578685, 0.671879, 0.663237, 0.144205, 0.615084, 0.118351, 0.208362, 0.716682, 0.764398, 0.655204, 0.0881905, 0.408591, 0.00508692, 0.0385926, 0.0523521, 0.857626, 0.736606, 0.365271, 0.721654, 0.272743, 0.425573, 0.177457, 0.682227, 0.815605, 0.987807, 0.0927272, 0.477471, 0.626371, 0.242361, 0.388453, 0.210588, 0.710554, 0.933391, 0.961284, 0.882836, 0.752966, 0.184138, 0.0514001, 0.184803, 0.907491, 0.708823, 0.0218851, 0.625521, 0.235808, 0.484598, 0.745253, 0.593657, 0.134674, 0.711145, 0.621679, 0.132104, 0.108882, 0.471306, 0.724013},
{0.983989, 0.859409, 0.265451, 0.103118, 0.635505, 0.473166, 0.39108, 0.132018, 0.823126, 0.0770344, 0.430456, 0.157658, 0.983468, 0.856589, 0.0244834, 0.776242, 0.390716, 0.195315, 0.689129, 0.606812, 0.268607, 0.530749, 0.55794, 0.866588, 0.806106, 0.775247, 0.661293, 0.249291, 0.093226, 0.0603834, 0.326275, 0.657646, 0.892093, 0.236236, 0.762623, 0.78327, 0.229174, 0.628828, 0.90487, 0.534786, 0.678636, 0.46144, 0.730318, 0.138655, 0.0883479, 0.575123, 0.194052, 0.975206, 0.871419, 0.929186, 0.603487, 0.175791, 0.059073, 0.948009, 0.439321, 0.827995, 0.0314519, 0.718772, 0.10819, 0.614815, 0.663796, 0.757568, 0.996678, 0.703836, 0.733539, 0.949827, 0.194203, 0.0763388, 0.505766, 0.424752, 0.985973, 0.123483, 0.459107, 0.563299, 0.566531, 0.822836, 0.906633, 0.136001, 0.496402, 0.520455, 0.105401, 0.789205, 0.406439, 0.379153, 0.318701, 0.300808, 0.634205, 0.626935, 0.169737, 0.16276, 0.686953, 0.976393, 0.173167, 0.985308, 0.829545, 0.583642, 0.645058, 0.453891, 0.250319, 0.0521415},
{0.678908, 0.021081, 0.501975, 0.743738, 0.751479, 0.57479, 0.242684, 0.300196, 0.667673, 0.489948, 0.471805, 0.833537, 0.924067, 0.784732, 0.255518, 0.520933, 0.0345586, 0.477299, 0.23996, 0.481762, 0.0736396, 0.983787, 0.539892, 0.947863, 0.57389, 0.593889, 0.248334, 0.289729, 0.0112944, 0.882263, 0.3834, 0.0720697, 0.934359, 0.245542, 0.0963876, 0.0882979, 0.526919, 0.6964, 0.745402, 0.274918, 0.909924, 0.402665, 0.470625, 0.473609, 0.997726, 0.416988, 0.441141, 0.317551, 0.094518, 0.43, 0.638714, 0.212737, 0.244155, 0.826211, 0.0883552, 0.0955957, 0.0497181, 0.226972, 0.263393, 0.81143, 0.556498, 0.718304, 0.888789, 0.339104, 0.412948, 0.303552, 0.910703, 0.113713, 0.192153, 0.640835, 0.246066, 0.951667, 0.0605087, 0.598097, 0.953163, 0.958133, 0.652289, 0.920485, 0.508053, 0.496824, 0.366767, 0.805685, 0.363746, 0.0806027, 0.795816, 0.516929, 0.666163, 0.951846, 0.851128, 0.825319, 0.37503, 0.0233831, 0.524938, 0.242918, 0.155643, 0.685056, 0.763385, 0.795675, 0.903642, 0.391005},
{0.961665, 0.84137, 0.318417, 0.424234, 0.274386, 0.912044, 0.190568, 0.172216, 0.734369, 0.0137335, 0.0305996, 0.0190512, 0.889023, 0.576116, 0.0915497, 0.171642, 0.947726, 0.135404, 0.250438, 0.977517, 0.252868, 0.67509, 0.195084, 0.659409, 0.0276317, 0.790395, 0.876568, 0.331716, 0.311867, 0.172426, 0.982498, 0.585379, 0.620986, 0.472361, 0.403386, 0.842618, 0.506304, 0.791616, 0.161237, 0.446051, 0.939529, 0.865537, 0.866974, 0.0760659, 0.742881, 0.722429, 0.380469, 0.101404, 0.683133, 0.481967, 0.426137, 0.00403441, 0.972802, 0.25757, 0.492996, 0.642778, 0.569979, 0.0378725, 0.383212, 0.323974, 0.573181, 0.937156, 0.0138057, 0.123422, 0.782026, 0.611519, 0.758583, 0.0493211, 0.20407, 0.482349, 0.922011, 0.734989, 0.01155, 0.124092, 0.46669, 0.422431, 0.543378, 0.746931, 0.379591, 0.833162, 0.740261, 0.580951, 0.204171, 0.0745296, 0.372421, 0.990957, 0.865858, 0.411119, 0.385695, 0.352116, 0.192891, 0.204691, 0.501765, 0.730677, 0.448352, 0.705891, 0.0808164, 0.349046, 0.434946, 0.555471},
{0.983447, 0.4499, 0.924391, 0.564054, 0.427495, 0.895111, 0.0794524, 0.818606, 0.530449, 0.432045, 0.933763, 0.352838, 0.120858, 0.869159, 0.276362, 0.977893, 0.822229, 0.173627, 0.030706, 0.910789, 0.300135, 0.897643, 0.773674, 0.0720397, 0.903394, 0.156778, 0.136501, 0.350014, 0.724265, 0.839907, 0.896353, 0.339751, 0.980987, 0.559229, 0.116033, 0.0796811, 0.274145, 0.931362, 0.460881, 0.764612, 0.486915, 0.847681, 0.530585, 0.574843, 0.742526, 0.781114, 0.277682, 0.89777, 0.814162, 0.402892, 0.342287, 0.427369, 0.726833, 0.664543, 0.0775906, 0.146634, 0.11403, 0.63431, 0.737234, 0.91414, 0.171655, 0.551809, 0.540505, 0.146678, 0.540929, 0.244964, 0.280448, 0.0965069, 0.73233, 0.173652, 0.732317, 0.405588, 0.808145, 0.0978746, 0.852123, 0.102196, 0.743315, 0.00889799, 0.65186, 0.554313, 0.0707485, 0.333485, 0.356675, 0.542558, 0.791756, 0.455915, 0.150648, 0.7677, 0.594932, 0.763332, 0.747434, 0.883627, 0.277689, 0.377048, 0.496105, 0.262695, 0.410816, 0.766116, 0.904117, 0.717703},
{0.206353, 0.0164196, 0.572687, 0.138434, 0.313423, 0.416987, 0.292353, 0.0395057, 0.0327493, 0.376307, 0.55351, 0.404122, 0.846974, 0.149083, 0.874064, 0.640932, 0.400868, 0.218735, 0.818634, 0.178265, 0.226395, 0.797659, 0.0190619, 0.471429, 0.272181, 0.807565, 0.473511, 0.597999, 0.244093, 0.991671, 0.44022, 0.115646, 0.330799, 0.793743, 0.577114, 0.436786, 0.704583, 0.838769, 0.425711, 0.24052, 0.580174, 0.269346, 0.750284, 0.726657, 0.470082, 0.85255, 0.441758, 0.431608, 0.839682, 0.998541, 0.808605, 0.721636, 0.142345, 0.198616, 0.471281, 0.396373, 0.0198561, 0.243229, 0.116388, 0.787316, 0.818641, 0.175452, 0.0580818, 0.812968, 0.985027, 0.717636, 0.792041, 0.556627, 0.306933, 0.89593, 0.237624, 0.193947, 0.93981, 0.019464, 0.164311, 0.966356, 0.935102, 0.600041, 0.122559, 0.0040972, 0.442341, 0.399576, 0.26883, 0.340224, 0.92261, 0.595857, 0.220391, 0.460166, 0.666714, 0.266266, 0.469621, 0.854018, 0.714547, 0.298968, 0.765078, 0.630697, 0.81146, 0.923395, 0.542238, 0.103797},
{0.487888, 0.540335, 0.201611, 0.519407, 0.323178, 0.722049, 0.593877, 0.517433, 0.0313352, 0.548392, 0.648314, 0.898184, 0.10126, 0.582747, 0.897879, 0.997299, 0.761097, 0.7147, 0.478974, 0.796225, 0.394182, 0.892745, 0.845856, 0.540361, 0.454228, 0.276032, 0.319382, 0.229373, 0.617839, 0.444702, 0.993827, 0.81935, 0.0228832, 0.930574, 0.618971, 0.958669, 0.469909, 0.0157759, 0.971135, 0.707442, 0.688571, 0.754256, 0.102455, 0.472945, 0.902989, 0.185195, 0.216985, 0.87546, 0.170331, 0.0873738, 0.620931, 0.773853, 0.435102, 0.539016, 0.226958, 0.0949638, 0.450548, 0.295669, 0.00460779, 0.45715, 0.469163, 0.970683, 0.408647, 0.713524, 0.826036, 0.44149, 0.0202367, 0.637129, 0.796716, 0.477187, 0.767554, 0.0744855, 0.911108, 0.0406247, 0.03866, 0.300488, 0.815839, 0.0928402, 0.231373, 0.811359, 0.297887, 0.857934, 0.927096, 0.800225, 0.588074, 0.776259, 0.66422, 0.574215, 0.807287, 0.0814246, 0.326078, 0.363013, 0.908527, 0.461747, 0.974974, 0.834369, 0.502783, 0.722327, 0.64114, 0.117492},
{0.127101, 0.00300044, 0.0273679, 0.212924, 0.145731, 0.359411, 0.688863, 0.867443, 0.475972, 0.401056, 0.575177, 0.348172, 0.996477, 0.473969, 0.758111, 0.0296087, 0.99581, 0.867759, 0.486418, 0.914864, 0.644248, 0.796274, 0.216981, 0.312261, 0.540374, 0.415702, 0.47909, 0.453195, 0.957085, 0.340461, 0.272604, 0.688286, 0.684047, 0.289588, 0.890575, 0.208595, 0.402611, 0.512741, 0.921479, 0.231957, 0.536307, 0.521997, 0.911821, 0.264044, 0.444198, 0.936569, 0.864911, 0.527882, 0.774945, 0.332022, 0.437319, 0.770557, 0.0477705, 0.0278849, 0.139111, 0.911715, 0.0183546, 0.92677, 0.0786497, 0.286165, 0.796614, 0.756932, 0.874312, 0.825372, 0.218374, 0.919939, 0.504302, 0.198865, 0.512084, 0.0855054, 0.71546, 0.883036, 0.679092, 0.0638543, 0.606125, 0.360947, 0.611588, 0.933058, 0.21248, 0.916555, 0.0979808, 0.923028, 0.959415, 0.831768, 0.980566, 0.0054909, 0.999843, 0.626017, 0.0482308, 0.198223, 0.057837, 0.92693, 0.339495, 0.915028, 0.688076, 0.393378, 0.554724, 0.607884, 0.518294, 0.368056},
{0.644723, 0.146821, 0.406636, 0.235569, 0.808484, 0.438062, 0.684749, 0.735989, 0.818495, 0.797656, 0.918922, 0.551416, 0.137402, 0.732764, 0.762644, 0.162027, 0.872669, 0.731868, 0.0411904, 0.89336, 0.173713, 0.312815, 0.677831, 0.999072, 0.0876607, 0.55946, 0.612021, 0.157791, 0.639704, 0.72258, 0.518844, 0.614163, 0.585255, 0.970064, 0.450461, 0.137222, 0.786265, 0.406337, 0.549234, 0.804298, 0.290265, 0.216968, 0.993412, 0.4766, 0.729272, 0.403561, 0.360867, 0.407487, 0.120503, 0.733794, 0.237723, 0.559855, 0.345387, 0.709868, 0.500596, 0.807409, 0.800612, 0.0891565, 0.161021, 0.284328, 0.118377, 0.476582, 0.512749, 0.355817, 0.28676, 0.6109, 0.710078, 0.728096, 0.386833, 0.718689, 0.109687, 0.820317, 0.950256, 0.0991811, 0.927539, 0.133658, 0.944289, 0.885801, 0.0352422, 0.548884, 0.192176, 0.634955, 0.587716, 0.0272099, 0.178896, 0.760585, 0.403884, 0.942288, 0.610242, 0.4855, 0.403391, 0.133805, 0.639415, 0.648892, 0.421837, 0.610654, 0.435266, 0.615705, 0.155326, 0.0828646},
{0.774165, 0.358135, 0.663552, 0.980553, 0.695346, 0.219999, 0.849555, 0.331358, 0.920609, 0.993702, 0.472728, 0.330584, 0.903175, 0.993631, 0.287744, 0.351584, 0.0268747, 0.00804197, 0.613548, 0.162973, 0.960754, 0.358049, 0.640283, 0.207236, 0.820097, 0.467841, 0.686728, 0.410511, 0.774326, 0.555804, 0.391985, 0.615828, 0.262559, 0.681166, 0.655457, 0.156136, 0.865066, 0.606189, 0.493935, 0.54059, 0.332362, 0.0897792, 0.724582, 0.155575, 0.050266, 0.292388, 0.716225, 0.194964, 0.781659, 0.140071, 0.440453, 0.0884036, 0.205119, 0.593356, 0.079137, 0.0275573, 0.378339, 0.986533, 0.0662427, 0.097906, 0.976083, 0.654923, 0.641904, 0.51523, 0.236114, 0.0853133, 0.377297, 0.961502, 0.617769, 0.970592, 0.121673, 0.353333, 0.761425, 0.424743, 0.724023, 0.473847, 0.378177, 0.956416, 0.963675, 0.633946, 0.155463, 0.0588849, 0.562952, 0.205875, 0.581124, 0.852813, 0.149864, 0.148688, 0.18054, 0.750567, 0.251022, 0.708391, 0.524953, 0.664533, 0.240403, 0.752297, 0.485111, 0.0586251, 0.455837, 0.278018},
};

static const std::vector<float> costs = {159.689, 652.211, 686.291, 722.216, 565.461, 701.292, 732.531, 498.544, 540.05, 966.765, 805.367, 19.5581, 690.981, 584.356, 358.04, 569.583, 432.446, 1.65015, 170.529, 375.332, 238.696, 179.551, 486.618, 733.808, 276.776, 960.315, 849.609, 914.759, 595.518, 993.146, 497.583, 952.033, 537.083, 315.567, 443.683, 468.013, 209.903, 841.796, 277.534, 49.1192, 675.486, 363.021, 140.253, 157.499, 955.258, 10.756, 806.031, 870.879, 644.584, 24.5969, 937.951, 678.486, 334.787, 157.493, 486.547, 409.353, 860.851, 736.769, 804.512, 991.921, 893.829, 920.798, 931.416, 33.1907, 56.8253, 473.685, 916.638, 142.418, 844.059, 359.955, 163.811, 615.688, 308.321, 397.669, 211.195, 241.894, 817.258, 447.815, 942.208, 212.34, 812.283, 304.845, 481.033, 46.6785, 235.841, 792.581, 891.74, 224.038, 648.93, 67.4534, 320.854, 33.7454, 51.2363, 3.09481, 639.385, 257.821, 840.038, 100.685, 304.601, 985.147};

static const std::vector<float> min_impressions = {0.779891, 0.0578161, 0.900827, 0.738143, 0.416049, 0.22193, 0.833759, 0.523676, 0.372098, 0.193117};

//
#endif
