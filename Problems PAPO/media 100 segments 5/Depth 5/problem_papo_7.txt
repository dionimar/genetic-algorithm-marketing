#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(events[62], events[71]),events[30]),events[49]),events[79]),events[4]),cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(events[38], events[84]),events[13]),events[88]),events[95]),events[22]),cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(events[64], events[99]),events[6]),events[75]),events[33]),events[25]),cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(events[10], events[21]),events[78]),events[54]),events[50]),events[48]),cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(events[67], events[50]),events[46]),events[32]),events[51]),events[13])};


static const std::vector< std::vector<float> > prob = {{0.709063, 0.539316, 0.674192, 0.743718, 0.600329, 0.927396, 0.72125, 0.580241, 0.201615, 0.961729, 0.162512, 0.295815, 0.296413, 0.367717, 0.931652, 0.96091, 0.509489, 0.985072, 0.678173, 0.399271, 0.669685, 0.486187, 0.235287, 0.0306288, 0.762186, 0.485719, 0.0157849, 0.429636, 0.353202, 0.248575, 0.101986, 0.245842, 0.535817, 0.414851, 0.0645893, 0.548514, 0.426901, 0.839706, 0.73083, 0.298681, 0.275131, 0.142641, 0.000991762, 0.778735, 0.196826, 0.159963, 0.612894, 0.211928, 0.963133, 0.353385, 0.910162, 0.931746, 0.588321, 0.140207, 0.816391, 0.171389, 0.0222846, 0.629699, 0.350612, 0.0212879, 0.26804, 0.270132, 0.078402, 0.0587496, 0.857101, 0.271105, 0.0143906, 0.840668, 0.7802, 0.707158, 0.693512, 0.00686501, 0.798525, 0.500771, 0.624459, 0.0945951, 0.711339, 0.451386, 0.365953, 0.0605143, 0.671269, 0.130005, 0.146533, 0.807613, 0.399191, 0.995646, 0.0742606, 0.871887, 0.581745, 0.240063, 0.350972, 0.675516, 0.417546, 0.0755503, 0.546624, 0.673313, 0.320481, 0.544784, 0.839982, 0.184927},
{0.730985, 0.299097, 0.559773, 0.272959, 0.196506, 0.682618, 0.877901, 0.769219, 0.249983, 0.24563, 0.939596, 0.606018, 0.128954, 0.243995, 0.441896, 0.44222, 0.769827, 0.214091, 0.72514, 0.172112, 0.628329, 0.338865, 0.799682, 0.20631, 0.325435, 0.397517, 0.40378, 0.100475, 0.306858, 0.9954, 0.366818, 0.516332, 0.229854, 0.531299, 0.49474, 0.484777, 0.425784, 0.539629, 0.208714, 0.530481, 0.524911, 0.14218, 0.444857, 0.998759, 0.486974, 0.642148, 0.0801294, 0.312684, 0.345389, 0.665126, 0.762725, 0.848098, 0.898219, 0.998069, 0.0766752, 0.0616544, 0.328466, 0.623997, 0.440296, 0.202332, 0.940552, 0.773767, 0.131379, 0.662558, 0.0743547, 0.545221, 0.0458843, 0.256222, 0.976638, 0.0575486, 0.31664, 0.664614, 0.715393, 0.307722, 0.389286, 0.115571, 0.698374, 0.795838, 0.275759, 0.991498, 0.0897798, 0.879667, 0.0285808, 0.271766, 0.464842, 0.167021, 0.833917, 0.241754, 0.560479, 0.665822, 0.874991, 0.486438, 0.600417, 0.16208, 0.0785685, 0.432936, 0.653815, 0.675555, 0.89095, 0.459028},
{0.915507, 0.906062, 0.651868, 0.339692, 0.348548, 0.798617, 0.963896, 0.994939, 0.846111, 0.0440654, 0.780896, 0.356217, 0.833862, 0.79503, 0.714464, 0.863127, 0.579271, 0.0119044, 0.657016, 0.85186, 0.0530865, 0.0799975, 0.890448, 0.420567, 0.839232, 0.52426, 0.166629, 0.522476, 0.249938, 0.884054, 0.467041, 0.000934637, 0.30781, 0.137514, 0.0144906, 0.400564, 0.267305, 0.395645, 0.294859, 0.584616, 0.265912, 0.323748, 0.684808, 0.297189, 0.689498, 0.191861, 0.699435, 0.0566623, 0.719802, 0.386801, 0.871808, 0.723686, 0.895262, 0.157317, 0.934154, 0.305792, 0.614135, 0.0785699, 0.263458, 0.368984, 0.184814, 0.22809, 0.603979, 0.356981, 0.0335235, 0.762503, 0.428428, 0.969327, 0.361667, 0.185121, 0.745141, 0.598244, 0.26307, 0.291661, 0.589035, 0.180802, 0.382343, 0.839462, 0.687412, 0.117934, 0.42006, 0.257511, 0.147244, 0.214545, 0.0953703, 0.2815, 0.560794, 0.113888, 0.932389, 0.119214, 0.602363, 0.451429, 0.837925, 0.748407, 0.516939, 0.384901, 0.427689, 0.488062, 0.872103, 0.217513},
{0.220324, 0.00448986, 0.919102, 0.968557, 0.738498, 0.0610959, 0.627039, 0.735582, 0.0250212, 0.959709, 0.191781, 0.822145, 0.954665, 0.606574, 0.678003, 0.685406, 0.255883, 0.136745, 0.93581, 0.944042, 0.561647, 0.464306, 0.618361, 0.865297, 0.374777, 0.488052, 0.361709, 0.00541075, 0.699381, 0.288364, 0.0336237, 0.619862, 0.397638, 0.0286433, 0.176802, 0.388314, 0.778323, 0.361796, 0.945574, 0.847817, 0.377853, 0.337794, 0.91765, 0.08429, 0.369918, 0.840783, 0.968186, 0.703203, 0.945159, 0.708279, 0.959577, 0.430192, 0.87749, 0.380552, 0.953264, 0.612854, 0.0809829, 0.812671, 0.525668, 0.7789, 0.480314, 0.752325, 0.876489, 0.716348, 0.26921, 0.832625, 0.026604, 0.621547, 0.613028, 0.788017, 0.189961, 0.652359, 0.832542, 0.828309, 0.315413, 0.380756, 0.665484, 0.0671473, 0.939282, 0.450288, 0.553841, 0.210014, 0.66922, 0.609052, 0.707589, 0.195731, 0.531879, 0.323802, 0.958312, 0.515144, 0.307709, 0.616212, 0.0156425, 0.464469, 0.636243, 0.91111, 0.776919, 0.300852, 0.489556, 0.500654},
{0.105637, 0.396977, 0.648262, 0.3291, 0.711981, 0.70247, 0.415418, 0.516021, 0.741094, 0.721339, 0.736287, 0.022851, 0.725446, 0.749877, 0.193078, 0.0316279, 0.520259, 0.25765, 0.271854, 0.987959, 0.72168, 0.561258, 0.641186, 0.979405, 0.0973088, 0.0660059, 0.776296, 0.921426, 0.15873, 0.111087, 0.870588, 0.0654887, 0.793801, 0.0313734, 0.093849, 0.0248668, 0.787035, 0.157008, 0.0285506, 0.182703, 0.923362, 0.73867, 0.349857, 0.0430137, 0.135079, 0.967107, 0.766843, 0.677905, 0.169798, 0.432304, 0.391354, 0.202271, 0.635901, 0.900603, 0.684693, 0.161193, 0.795114, 0.678627, 0.322317, 0.104443, 0.676379, 0.869311, 0.155098, 0.876664, 0.330026, 0.755536, 0.298697, 0.967557, 0.850046, 0.317971, 0.348853, 0.736165, 0.443873, 0.998972, 0.835785, 0.529483, 0.17296, 0.560708, 0.232827, 0.663749, 0.465274, 0.347393, 0.318963, 0.176112, 0.193605, 0.907401, 0.547442, 0.964638, 0.121598, 0.346735, 0.0835926, 0.0583145, 0.0142944, 0.722175, 0.414086, 0.502563, 0.721265, 0.191303, 0.302182, 0.850583},
};

static const std::vector<float> costs = {506.657, 272.592, 782.544, 273.414, 545.945, 809.857, 812.827, 945.11, 705.98, 939.363, 906.264, 711.831, 277.816, 966.421, 321.332, 585.03, 65.8473, 573.758, 371.496, 444.392, 328.252, 433.877, 899.247, 645.797, 798.98, 265.944, 407.201, 604.593, 691.796, 202.661, 463.717, 543.505, 625.494, 436.237, 326.031, 446.955, 866.593, 592.544, 933.313, 147.555, 3.53545, 101.173, 963.452, 86.0198, 309.113, 146.545, 616.399, 980.054, 161.105, 520.862, 289.812, 768.712, 420.993, 806.49, 858.629, 848.955, 811.158, 953.873, 904.194, 41.3901, 127.722, 251.929, 692.598, 98.3006, 431.205, 808.318, 386.023, 154.962, 732.931, 640.725, 123.641, 722.367, 780.115, 920.035, 226.564, 663.029, 593.278, 301.798, 378.949, 715.843, 744.671, 771.463, 939.424, 593.768, 328.978, 313.944, 859.917, 834.584, 366.716, 716.055, 392.813, 967.818, 543.184, 713.149, 920.314, 922.31, 692.313, 866.462, 468.805, 888.393};

static const std::vector<float> min_impressions = {0.0555649, 0.16351, 0.44805, 0.601571, 0.58472};

//
#endif
