#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(events[182], events[33]),events[123]),events[172]),events[142]),events[195]),events[30]),events[148]),events[133]),events[73]),events[66]),cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(events[147], events[85]),events[95]),events[157]),events[160]),events[135]),events[83]),events[161]),events[61]),events[166]),events[48]),cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(events[24], events[53]),events[31]),events[141]),events[42]),events[73]),events[59]),events[2]),events[6]),events[117]),events[7]),cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(events[199], events[168]),events[2]),events[24]),events[187]),events[60]),events[67]),events[44]),events[23]),events[19]),events[160]),cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(events[40], events[138]),events[69]),events[137]),events[101]),events[188]),events[78]),events[32]),events[8]),events[158]),events[189])};


static const std::vector< std::vector<float> > prob = {{0.767209, 0.92615, 0.806345, 0.447735, 0.060055, 0.983458, 0.332751, 0.186736, 0.921751, 0.408681, 0.807685, 0.835817, 0.284093, 0.671791, 0.0937035, 0.944104, 0.181554, 0.0776141, 0.928892, 0.33406, 0.378075, 0.721775, 0.522508, 0.0895006, 0.364179, 0.934925, 0.61627, 0.855242, 0.647244, 0.898988, 0.0506055, 0.175686, 0.200504, 0.109519, 0.581518, 0.891888, 0.936824, 0.59236, 0.0921283, 0.537082, 0.817982, 0.140798, 0.542753, 0.324054, 0.931989, 0.0159244, 0.544108, 0.188004, 0.302276, 0.458477, 0.890076, 0.710992, 0.504701, 0.343304, 0.405947, 0.0784456, 0.709105, 0.389177, 0.147602, 0.767229, 0.537636, 0.640903, 0.409853, 0.22008, 0.758519, 0.575003, 0.60343, 0.376588, 0.346034, 0.198444, 0.100718, 0.544681, 0.245881, 0.162579, 0.0156445, 0.919893, 0.890056, 0.928661, 0.72064, 0.61255, 0.951166, 0.783692, 0.665275, 0.734068, 0.21124, 0.0193709, 0.0205883, 0.729324, 0.482553, 0.581423, 0.434791, 0.54317, 0.846729, 0.830789, 0.394102, 0.0209212, 0.572724, 0.726415, 0.310536, 0.765106, 0.303274, 0.527328, 0.990438, 0.113681, 0.980847, 0.131917, 0.921794, 0.0356188, 0.658241, 0.822051, 0.413068, 0.927226, 0.84563, 0.909742, 0.50827, 0.558578, 0.253001, 0.722174, 0.466973, 0.292538, 0.847446, 0.793775, 0.00568427, 0.186504, 0.578206, 0.0140757, 0.87966, 0.505665, 0.696761, 0.43176, 0.0365752, 0.929734, 0.776545, 0.726556, 0.572558, 0.156957, 0.431069, 0.264214, 0.404271, 0.347804, 0.357285, 0.315598, 0.182858, 0.62753, 0.0396132, 0.304958, 0.675484, 0.376811, 0.627847, 0.130709, 0.0908734, 0.818001, 0.691711, 0.703228, 0.835011, 0.758735, 0.237265, 0.905549, 0.371407, 0.663001, 0.995786, 0.042562, 0.293191, 0.0256234, 0.157228, 0.493834, 0.841122, 0.26103, 0.136904, 0.719223, 0.237315, 0.00326019, 0.913651, 0.829034, 0.951219, 0.0237679, 0.649116, 0.152296, 0.0559113, 0.102772, 0.687314, 0.23708, 0.491508, 0.0487926, 0.701955, 0.602771, 0.805685, 0.970569, 0.780881, 0.55929, 0.453984, 0.24638, 0.979578, 0.837493, 0.59292, 0.700646, 0.0693903, 0.89472, 0.797512, 0.331916},
{0.569839, 0.501394, 0.98148, 0.630295, 0.716375, 0.689821, 0.77343, 0.821033, 0.423129, 0.23113, 0.835293, 0.971995, 0.210262, 0.210024, 0.390188, 0.412456, 0.0908731, 0.356552, 0.387881, 0.7506, 0.527191, 0.0921226, 0.571057, 0.753337, 0.0342401, 0.0111478, 0.637502, 0.537615, 0.41177, 0.626894, 0.0043381, 0.279715, 0.832104, 0.54891, 0.762377, 0.120531, 0.653149, 0.423772, 0.494694, 0.482408, 0.572273, 0.692761, 0.212654, 0.989603, 0.994599, 0.394657, 0.00585491, 0.900033, 0.215091, 0.734284, 0.955563, 0.0370671, 0.916377, 0.964911, 0.103393, 0.916932, 0.215192, 0.908743, 0.811964, 0.513102, 0.570256, 0.0874042, 0.592847, 0.181146, 0.660678, 0.697562, 0.59805, 0.632592, 0.594084, 0.131119, 0.880866, 0.413398, 0.418919, 0.714858, 0.061934, 0.118159, 0.502482, 0.56846, 0.106178, 0.572889, 0.0463218, 0.340947, 0.132686, 0.490432, 0.556034, 0.720159, 0.142915, 0.0870324, 0.800184, 0.808628, 0.00462822, 0.590256, 0.096507, 0.0122027, 0.121838, 0.859612, 0.109559, 0.747517, 0.104507, 0.401106, 0.782251, 0.639925, 0.421357, 0.587074, 0.170976, 0.0463303, 0.355196, 0.377698, 0.118911, 0.828594, 0.866653, 0.345464, 0.760803, 0.370225, 0.154882, 0.653934, 0.451912, 0.42838, 0.432864, 0.289621, 0.169899, 0.151983, 0.774344, 0.155051, 0.620024, 0.347051, 0.988792, 0.0309822, 0.542784, 0.847958, 0.729319, 0.152142, 0.907208, 0.291092, 0.978549, 0.958129, 0.408331, 0.267989, 0.81784, 0.341195, 0.446722, 0.227188, 0.948572, 0.977104, 0.428209, 0.525105, 0.0153909, 0.865324, 0.0787959, 0.270494, 0.932703, 0.128284, 0.175213, 0.526209, 0.149537, 0.257395, 0.144243, 0.355297, 0.304608, 0.411269, 0.123778, 0.362558, 0.419672, 0.002642, 0.958808, 0.929447, 0.359358, 0.670582, 0.244744, 0.171879, 0.539438, 0.752187, 0.283666, 0.779998, 0.0341133, 0.302883, 0.828393, 0.404678, 0.40589, 0.809775, 0.797113, 0.137727, 0.174973, 0.780742, 0.0829716, 0.119408, 0.0409541, 0.811429, 0.660453, 0.454642, 0.979422, 0.904306, 0.21509, 0.0297822, 0.792022, 0.944265, 0.518583, 0.931242, 0.56261, 0.703499},
{0.0208655, 0.641477, 0.683728, 0.714245, 0.976035, 0.244287, 0.863517, 0.988994, 0.0483282, 0.517386, 0.35979, 0.483217, 0.426056, 0.251547, 0.315842, 0.0760064, 0.527551, 0.0852973, 0.135666, 0.643824, 0.294796, 0.107486, 0.867165, 0.450225, 0.982971, 0.926877, 0.984715, 0.726003, 0.402746, 0.0244029, 0.535115, 0.0651333, 0.112939, 0.924367, 0.122808, 0.406595, 0.562339, 0.0986383, 0.889794, 0.793413, 0.902413, 0.0897478, 0.258677, 0.887635, 0.0425975, 0.337643, 0.652744, 0.629157, 0.680791, 0.112144, 0.185861, 0.357735, 0.847866, 0.951309, 0.039648, 0.530785, 0.0134204, 0.175009, 0.876097, 0.860513, 0.246425, 0.569673, 0.0479571, 0.0847839, 0.728738, 0.39029, 0.441551, 0.712643, 0.1277, 0.39464, 0.788693, 0.158993, 0.569226, 0.842996, 0.814307, 0.0788339, 0.382305, 0.632276, 0.39407, 0.276208, 0.401793, 0.912215, 0.114714, 0.805542, 0.262787, 0.0174335, 0.444793, 0.424053, 0.729941, 0.228494, 0.681857, 0.548438, 0.484727, 0.14649, 0.111696, 0.821551, 0.208749, 0.180755, 0.796461, 0.303115, 0.0995779, 0.569116, 0.994137, 0.711753, 0.960539, 0.856378, 0.771243, 0.809492, 0.461275, 0.725136, 0.563526, 0.78648, 0.883419, 0.624516, 0.762775, 0.838607, 0.545998, 0.963367, 0.571877, 0.193487, 0.596622, 0.0959028, 0.92905, 0.974741, 0.981037, 0.19471, 0.385071, 0.960238, 0.355952, 0.00754243, 0.23391, 0.550463, 0.670461, 0.858445, 0.264247, 0.901184, 0.792709, 0.927654, 0.762944, 0.737654, 0.726715, 0.244501, 0.246894, 0.304643, 0.23221, 0.631794, 0.65323, 0.959708, 0.685075, 0.830193, 0.0691605, 0.815065, 0.682629, 0.582927, 0.129391, 0.208267, 0.963366, 0.682853, 0.529558, 0.589396, 0.988085, 0.555934, 0.28839, 0.337506, 0.163828, 0.431191, 0.568406, 0.375746, 0.892007, 0.681955, 0.8119, 0.831869, 0.871829, 0.573005, 0.0766114, 0.952234, 0.276058, 0.380036, 0.393817, 0.739086, 0.158746, 0.971928, 0.630494, 0.838861, 0.871813, 0.727085, 0.0878353, 0.3803, 0.866897, 0.348985, 0.426939, 0.360298, 0.627891, 0.618814, 0.800239, 0.271333, 0.93623, 0.796279, 0.761532, 0.47553},
{0.852858, 0.872386, 0.102966, 0.1417, 0.448848, 0.611407, 0.369948, 0.0977683, 0.59173, 0.995971, 0.79712, 0.669412, 0.797953, 0.342848, 0.922055, 0.646119, 0.764072, 0.0727845, 0.318904, 0.665241, 0.0102466, 0.773415, 0.034616, 0.96793, 0.655763, 0.855358, 0.644237, 0.443726, 0.902377, 0.680753, 0.585547, 0.213238, 0.373036, 0.903236, 0.780592, 0.862103, 0.822902, 0.93804, 0.855026, 0.853259, 0.854935, 0.347987, 0.58932, 0.00138528, 0.937625, 0.461368, 0.894391, 0.596105, 0.106784, 0.0340785, 0.59511, 0.702336, 0.730741, 0.220688, 0.418656, 0.684425, 0.521873, 0.269206, 0.0218108, 0.0278951, 0.424324, 0.535134, 0.647502, 0.165799, 0.0532198, 0.951403, 0.410925, 0.207353, 0.031006, 0.0813218, 0.919384, 0.280576, 0.258106, 0.496015, 0.17918, 0.533208, 0.05163, 0.279095, 0.238118, 0.665991, 0.382796, 0.104455, 0.426131, 0.137334, 0.0413311, 0.237535, 0.958248, 0.484362, 0.787773, 0.491226, 0.41236, 0.208383, 0.559604, 0.563086, 0.891768, 0.468318, 0.948019, 0.48406, 0.390066, 0.978949, 0.682651, 0.970128, 0.248316, 0.163527, 0.116397, 0.142987, 0.150463, 0.135374, 0.716301, 0.146636, 0.486405, 0.395328, 0.395802, 0.746038, 0.233956, 0.256897, 0.965955, 0.371467, 0.918093, 0.00853121, 0.176899, 0.627117, 0.327454, 0.825072, 0.587715, 0.536933, 0.207739, 0.483457, 0.50102, 0.639554, 0.571208, 0.915612, 0.730827, 0.815529, 0.0149015, 0.563829, 0.393233, 0.641179, 0.910156, 0.0625206, 0.890835, 0.814323, 0.412101, 0.00238099, 0.95932, 0.827742, 0.749153, 0.438642, 0.415059, 0.86927, 0.519305, 0.485172, 0.0777697, 0.951617, 0.0762307, 0.194897, 0.124137, 0.302826, 0.212467, 0.88774, 0.207986, 0.332388, 0.45198, 0.894919, 0.432126, 0.237703, 0.35403, 0.808637, 0.690069, 0.306771, 0.471908, 0.739381, 0.502065, 0.483416, 0.0801224, 0.334614, 0.965243, 0.298474, 0.169734, 0.847551, 0.657478, 0.22914, 0.589864, 0.342525, 0.196046, 0.212368, 0.855449, 0.839652, 0.257093, 0.433584, 0.541424, 0.84865, 0.953213, 0.921961, 0.347284, 0.425658, 0.688514, 0.942869, 0.224783, 0.320237},
{0.907652, 0.0324221, 0.241013, 0.747736, 0.312173, 0.408137, 0.828196, 0.56353, 0.2149, 0.285449, 0.899629, 0.620335, 0.794182, 0.0923177, 0.388399, 0.747907, 0.056963, 0.610539, 0.35749, 0.539754, 0.655766, 0.85833, 0.0110831, 0.266427, 0.577812, 0.542902, 0.725722, 0.283249, 0.494703, 0.12945, 0.0146777, 0.84356, 0.43149, 0.128643, 0.682524, 0.152375, 0.103047, 0.461397, 0.126931, 0.455823, 0.791965, 0.836621, 0.0574219, 0.165743, 0.253571, 0.993506, 0.115768, 0.935163, 0.683749, 0.203522, 0.193563, 0.180246, 0.134589, 0.343476, 0.416024, 0.747437, 0.486376, 0.419728, 0.976239, 0.834259, 0.122353, 0.533679, 0.502355, 0.785125, 0.61628, 0.013727, 0.541351, 0.92842, 0.857061, 0.861981, 0.374008, 0.59963, 0.0845983, 0.864737, 0.493156, 0.0164493, 0.957499, 0.844005, 0.122626, 0.188374, 0.0406452, 0.812963, 0.908189, 0.510157, 0.142333, 0.229004, 0.947681, 0.167752, 0.885998, 0.131961, 0.918202, 0.972051, 0.277714, 0.650232, 0.809917, 0.943573, 0.272186, 0.112653, 0.538807, 0.433129, 0.440608, 0.105429, 0.88565, 0.0325305, 0.789637, 0.796614, 0.880795, 0.0804929, 0.58776, 0.85315, 0.245075, 0.642722, 0.149384, 0.225493, 0.492019, 0.969309, 0.307831, 0.179998, 0.40282, 0.989951, 0.970793, 0.461477, 0.287258, 0.898878, 0.660478, 0.109308, 0.646017, 0.437459, 0.0112367, 0.294216, 0.0038644, 0.996723, 0.907773, 0.844635, 0.949305, 0.351318, 0.856828, 0.918891, 0.242541, 0.184946, 0.817322, 0.69395, 0.827318, 0.794147, 0.170551, 0.0494594, 0.376847, 0.478147, 0.864655, 0.0850912, 0.669491, 0.888444, 0.319427, 0.62017, 0.812611, 0.59777, 0.335908, 0.886843, 0.380456, 0.112988, 0.559363, 0.600773, 0.289764, 0.333399, 0.116382, 0.227205, 0.021753, 0.667146, 0.406822, 0.43631, 0.919495, 0.413159, 0.665385, 0.36855, 0.198541, 0.857892, 0.646324, 0.634788, 0.463925, 0.916051, 0.692754, 0.603406, 0.863019, 0.923549, 0.807622, 0.331968, 0.775081, 0.703674, 0.462446, 0.459938, 0.268797, 0.549447, 0.76499, 0.369181, 0.987851, 0.659091, 0.636152, 0.0954224, 0.926433, 0.0742394},
};

static const std::vector<float> costs = {603.755, 338.487, 765.799, 835.768, 632.152, 328.03, 342.933, 976.264, 673.481, 783.167, 487.66, 453.476, 685.584, 513.059, 614.801, 438.715, 527.561, 518.022, 356.538, 803.875, 59.3043, 732.384, 742.985, 259.359, 995.299, 979.141, 169.476, 22.9919, 456.449, 321.734, 602.931, 412.3, 375.851, 81.3459, 403.733, 824.099, 380.887, 752.734, 967.234, 720.483, 934.934, 521.604, 15.52, 101.302, 597.593, 534.552, 20.3619, 439.296, 518.423, 792.039, 752.258, 838.362, 278.34, 966.002, 204.71, 805.01, 270.184, 512.032, 931.395, 124.682, 527.489, 798.918, 273.787, 228.497, 788.975, 281.856, 843.978, 939.067, 906.52, 847.549, 56.4283, 559.466, 32.44, 796.777, 241.865, 401.715, 758.165, 487.145, 330.384, 177.553, 28.236, 114.821, 794.668, 194.479, 27.9471, 829.703, 959.555, 816.2, 440.003, 93.6153, 51.8211, 778.774, 658.31, 53.2317, 354.756, 121.229, 434.379, 893.634, 841.305, 251.355, 866.998, 923.846, 667.8, 376.167, 506.33, 755.902, 516.539, 442.161, 345.017, 209.066, 795.194, 671.933, 369.441, 16.0254, 907.093, 15.0392, 546.577, 916.464, 429.271, 511.666, 900.599, 498.551, 864.424, 585.723, 598.863, 282.002, 26.2509, 287.892, 196.253, 690.968, 14.6044, 222.015, 14.2108, 162.184, 619.748, 404.378, 366.84, 328.431, 632.702, 821.414, 92.9142, 508.691, 669.872, 940.531, 703.331, 704.154, 6.33713, 224.836, 313.606, 839.829, 367.436, 141.075, 628.812, 699.763, 479.015, 343.197, 819.709, 621.011, 459.396, 904.925, 134.761, 150.804, 418.454, 593.395, 249.736, 304.041, 161.341, 452.794, 148.736, 446.227, 406.684, 984.358, 244.078, 849.923, 76.3717, 88.7744, 211.608, 555.787, 318.79, 712.327, 674.715, 238.403, 178.033, 835.778, 974.498, 812.712, 181.952, 257.308, 869.516, 883.67, 596.655, 335.333, 612.501, 676.27, 186.303, 134.505, 657.865, 514.702, 659.245, 448.11};

static const std::vector<float> min_impressions = {0.593741, 0.0611821, 0.746619, 0.942799, 0.169263};

//
#endif
