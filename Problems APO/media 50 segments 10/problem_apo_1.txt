#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{6.29621,9.76082,1.86415,1.18825,6.69501,5.04128,4.45695,2.47769,4.28112,2.60784},
{5.76544,2.41249,1.15087,6.99173,9.08872,9.88715,8.42167,2.10109,8.7066,1.83025},
{9.61177,5.24264,1.09694,6.20269,8.53411,2.26897,5.17188,2.86738,4.95724,3.84405},
{6.92573,2.99987,9.72539,4.81831,8.68479,1.42046,5.99546,4.01879,8.13238,8.03337},
{4.80383,1.19421,3.53934,7.45891,9.45334,7.06984,4.8695,4.9906,8.10562,2.64596},
{4.34448,6.47235,9.60522,5.57924,8.10586,6.01921,1.08822,3.56332,3.4374,2.62653},
{2.50427,7.76773,5.33514,7.31327,6.39926,7.74382,7.22194,1.30256,5.37205,3.73849},
{3.34362,3.63783,7.40164,4.73858,7.67234,5.94932,9.58226,4.92565,6.63431,3.1759},
{5.38229,5.948,5.79368,2.49569,1.31621,9.62642,6.63853,8.67703,9.54066,7.58572},
{3.66584,2.54146,5.94718,5.52594,6.90426,8.65185,4.70901,5.69376,4.7104,9.70713},
{2.79033,3.01906,2.04151,4.36015,1.43823,4.59012,8.61111,4.27749,2.26895,2.59225},
{3.97094,3.62619,3.93946,1.29096,3.4873,2.04467,9.33685,5.71279,5.4335,2.51918},
{2.90287,6.66719,9.56336,8.56266,7.53435,3.5497,6.55868,3.21669,2.91015,6.97792},
{7.15308,5.23069,9.06066,5.67818,1.42869,8.12104,3.60967,4.04984,7.30648,3.9878},
{4.22621,6.17162,7.81595,3.538,5.18943,2.15421,6.00554,5.47251,2.2655,6.31165},
{6.81011,2.81386,2.95862,3.44293,9.5016,2.33273,9.34847,5.79553,5.30022,7.05589},
{1.99082,9.44551,8.24053,4.18349,6.06368,2.31057,1.88298,2.57017,9.35762,4.65156},
{4.71685,8.34391,8.81293,4.78167,6.56998,9.53574,3.28344,2.13386,4.27597,2.56227},
{3.55972,3.89959,2.71405,9.30389,5.774,9.30133,1.38796,2.08884,8.09542,6.15244},
{8.96249,3.78128,8.31452,9.96909,7.76668,8.33343,6.86584,9.58485,7.87778,8.59357},
{2.50898,1.95385,5.08005,8.70513,2.51341,8.17425,6.74388,1.77777,4.89532,9.52131},
{6.14486,1.65204,4.99384,3.08956,8.84675,4.01246,8.78865,3.86886,3.16674,9.33858},
{8.46756,3.5356,9.57107,3.65599,8.70255,4.48992,4.33491,9.12511,9.53606,1.94266},
{5.63491,6.10803,8.49004,4.54357,5.13335,8.78327,3.97459,5.00335,2.34877,7.4733},
{5.33305,8.22146,8.48489,5.49453,8.4135,8.07175,7.14094,1.05294,6.34728,7.07559},
{2.59332,8.19999,2.47622,6.54074,2.13199,9.37181,9.88605,5.20719,9.84047,2.57389},
{3.44832,5.77544,8.56912,9.50833,7.95302,4.0581,9.43258,2.60933,9.52948,1.66309},
{5.74533,5.90186,1.21251,2.60447,8.67078,3.49594,1.07001,1.4692,3.43259,1.31908},
{4.2693,7.70878,4.26708,5.28015,4.80123,8.50348,5.73815,4.60488,1.09551,8.49071},
{8.05967,7.80358,1.15809,8.54951,3.77619,7.59341,8.851,5.98206,1.41361,1.64839},
{2.29401,3.63806,7.91857,2.47095,7.60161,5.15391,2.17778,8.69533,6.93518,4.43529},
{1.79295,4.55104,3.03177,6.68497,4.6274,5.60217,8.8269,8.48498,2.82442,3.00525},
{2.96834,5.11697,7.52484,3.50028,9.34181,6.13598,5.08685,9.61163,8.34666,3.22481},
{7.39905,8.60013,3.16724,6.23459,9.9769,1.70855,9.31036,4.05668,1.16634,5.02344},
{1.8234,5.45879,8.96652,4.12918,9.05076,5.5168,9.24881,8.35152,1.58331,9.52424},
{8.8764,4.9776,3.82744,5.64587,8.83473,9.84415,7.03624,9.15252,1.49632,5.21353},
{9.76768,8.17235,7.59225,6.55502,1.8649,6.05743,1.48612,5.29759,2.25466,8.58583},
{3.06624,4.45487,6.69471,6.73943,8.42708,8.18542,1.38853,1.96014,6.84068,4.04508},
{7.77518,9.71497,6.07687,6.12207,9.16852,8.411,2.38774,3.98989,8.66511,2.50542},
{6.04782,6.35229,2.36578,1.55187,8.27273,8.99569,9.87685,7.92294,5.22211,1.23333},
{1.92578,2.38585,5.85708,9.37089,7.35832,4.69413,6.11097,2.72889,2.74414,9.91867},
{9.91156,9.32039,8.78797,7.31972,5.64159,5.72401,1.612,1.87415,5.0769,7.28859},
{1.42788,1.41176,2.75584,2.55204,6.95327,9.48428,5.73995,2.31804,4.7299,1.3506},
{4.77122,7.16238,8.40876,6.43551,4.45165,1.79163,9.3729,8.5692,8.69147,5.82989},
{6.20878,2.12238,4.66548,5.35513,6.79428,1.0079,4.03194,6.69361,4.35717,1.25735},
{6.27007,3.6639,6.79906,4.15146,6.57287,8.18369,4.35051,6.03225,1.22949,6.17317},
{3.40993,4.73505,5.37623,5.02046,3.13262,1.42022,4.59754,1.62721,1.99475,6.59008},
{9.00715,7.95094,7.597,5.13901,3.58334,4.23208,9.22018,5.45507,6.3956,1.75513},
{9.68137,4.35416,6.04173,9.85842,9.95194,1.97307,3.46963,2.34529,6.8181,3.78811},
{5.21016,7.47046,8.41827,4.68498,3.2461,3.75844,3.20186,8.58881,7.72604,1.59851}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {439.122,143.043,618.223,350.23,70.0546,435.865,710.573,811.933,942.208,322.326,454.6,88.914,646.726,835.668,715.182,271.218,242.645,411.837,155.241,937.967,298.222,968.621,171.067,960.438,220.615,67.5613,162.88,766.119,805.201,150.01,101.487,274.077,59.1594,309.123,296.762,209.353,331.801,895.419,602.207,138.092,603.967,622.591,922.084,483.097,745.438,903.844,390.44,527.285,820.975,532.511};


static const std::vector<float> min_impressions = {35.3654,27.8706,47.8809,25.1263,25.138,46.782,32.5888,21.0172,25.1318,49.2028};


#endif
