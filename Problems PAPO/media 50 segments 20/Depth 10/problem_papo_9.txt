#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[33], events[28]),events[37]),events[42]),events[7]),events[15]),events[13]),events[39]),events[38]),events[4]),events[40]),cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(events[45], events[7]),events[3]),events[8]),events[30]),events[2]),events[0]),events[47]),events[11]),events[42]),events[5]),cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(events[16], events[5]),events[39]),events[38]),events[44]),events[21]),events[20]),events[11]),events[46]),events[25]),events[22]),cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(events[44], events[22]),events[31]),events[12]),events[40]),events[4]),events[48]),events[8]),events[20]),events[43]),events[46]),cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(events[42], events[40]),events[7]),events[26]),events[39]),events[13]),events[1]),events[19]),events[17]),events[49]),events[41]),cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(events[42], events[41]),events[26]),events[34]),events[19]),events[13]),events[39]),events[5]),events[49]),events[25]),events[45]),cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[45], events[41]),events[39]),events[27]),events[38]),events[32]),events[44]),events[47]),events[6]),events[9]),events[25]),cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(events[38], events[26]),events[13]),events[48]),events[19]),events[40]),events[28]),events[14]),events[0]),events[41]),events[3]),cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(events[47], events[21]),events[48]),events[13]),events[30]),events[9]),events[17]),events[5]),events[39]),events[27]),events[16]),cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[30], events[26]),events[9]),events[16]),events[28]),events[39]),events[0]),events[6]),events[4]),events[20]),events[21]),cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(events[19], events[47]),events[41]),events[15]),events[49]),events[20]),events[21]),events[44]),events[43]),events[38]),events[18]),cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(events[19], events[22]),events[5]),events[43]),events[45]),events[6]),events[26]),events[21]),events[24]),events[0]),events[13]),cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(events[45], events[6]),events[47]),events[4]),events[28]),events[44]),events[5]),events[42]),events[25]),events[20]),events[2]),cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(events[36], events[24]),events[15]),events[8]),events[30]),events[46]),events[3]),events[13]),events[33]),events[9]),events[22]),cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[5], events[39]),events[45]),events[48]),events[47]),events[34]),events[25]),events[18]),events[49]),events[38]),events[9]),cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(events[14], events[45]),events[2]),events[32]),events[17]),events[30]),events[47]),events[22]),events[29]),events[19]),events[0]),cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(events[37], events[35]),events[29]),events[16]),events[1]),events[18]),events[34]),events[32]),events[38]),events[8]),events[5]),cons_excl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(events[21], events[0]),events[37]),events[47]),events[17]),events[45]),events[1]),events[15]),events[43]),events[13]),events[4]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(events[35], events[22]),events[34]),events[33]),events[13]),events[30]),events[15]),events[27]),events[39]),events[11]),events[4]),cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(events[38], events[9]),events[30]),events[37]),events[20]),events[35]),events[18]),events[24]),events[29]),events[32]),events[23])};


static const std::vector< std::vector<float> > prob = {{0.983574, 0.788835, 0.15568, 0.121453, 0.604352, 0.815149, 0.549062, 0.53794, 0.520271, 0.682272, 0.466332, 0.968102, 0.325901, 0.146068, 0.332647, 0.677648, 0.0623723, 0.220418, 0.564484, 0.690401, 0.47062, 0.0891921, 0.71889, 0.555329, 0.490441, 0.93632, 0.645945, 0.350496, 0.175029, 0.385388, 0.155215, 0.269572, 0.714139, 0.344628, 0.0322477, 0.16691, 0.192071, 0.400401, 0.396702, 0.34969, 0.303924, 0.968457, 0.194534, 0.770359, 0.434102, 0.589984, 0.236783, 0.60517, 0.68159, 0.378634},
{0.151441, 0.318929, 0.922921, 0.832684, 0.0808231, 0.476974, 0.250507, 0.999315, 0.890909, 0.316689, 0.983443, 0.750712, 0.432861, 0.598192, 0.0103164, 0.859599, 0.546482, 0.863995, 0.368494, 0.143929, 0.647104, 0.114489, 0.542975, 0.99533, 0.189844, 0.674588, 0.46627, 0.586043, 0.996988, 0.603489, 0.284677, 0.914053, 0.471668, 0.536606, 0.429593, 0.706406, 0.340197, 0.595166, 0.274478, 0.853105, 0.543598, 0.726991, 0.798161, 0.308613, 0.243618, 0.0348299, 0.666098, 0.515119, 0.844022, 0.0590137},
{0.183436, 0.540564, 0.97776, 0.310852, 0.969638, 0.339501, 0.475799, 0.498243, 0.725923, 0.186093, 0.943961, 0.818578, 0.359522, 0.17411, 0.200577, 0.833669, 0.97248, 0.474165, 0.448079, 0.829554, 0.479848, 0.502106, 0.0354269, 0.0384023, 0.536634, 0.439233, 0.685832, 0.137752, 0.0770529, 0.820487, 0.290637, 0.044154, 0.838104, 0.0631052, 0.281682, 0.0909807, 0.209479, 0.395374, 0.0396855, 0.454838, 0.553002, 0.633525, 0.366315, 0.611245, 0.602947, 0.572283, 0.880012, 0.831887, 0.693441, 0.524205},
{0.712685, 0.97482, 0.920015, 0.595629, 0.909894, 0.992444, 0.00912969, 0.73818, 0.574903, 0.472276, 0.306601, 0.472235, 0.961195, 0.929485, 0.997798, 0.55513, 0.909359, 0.588988, 0.305861, 0.116635, 0.0903035, 0.410218, 0.904873, 0.49355, 0.377004, 0.690003, 0.0891288, 0.992394, 0.136052, 0.845999, 0.567712, 0.57175, 0.857019, 0.503919, 0.692597, 0.373978, 0.276059, 0.000308462, 0.57125, 0.674775, 0.473118, 0.397004, 0.942066, 0.11922, 0.870862, 0.0188158, 0.825983, 0.757724, 0.0240392, 0.143111},
{0.483354, 0.0443002, 0.154919, 0.533646, 0.372832, 0.588474, 0.037004, 0.46463, 0.377048, 0.12795, 0.373559, 0.332561, 0.264129, 0.718425, 0.835447, 0.474025, 0.225014, 0.085204, 0.575435, 0.521618, 0.5284, 0.190116, 0.982884, 0.50587, 0.260399, 0.233227, 0.17767, 0.713154, 0.303381, 0.410423, 0.274239, 0.226268, 0.712797, 0.071759, 0.950133, 0.805986, 0.202148, 0.285597, 0.7047, 0.728776, 0.771092, 0.884036, 0.26108, 0.228162, 0.687275, 0.770736, 0.261481, 0.53095, 0.594861, 0.405846},
{0.84636, 0.493588, 0.385567, 0.408318, 0.798885, 0.180071, 0.382068, 0.409197, 0.216433, 0.672736, 0.828256, 0.32434, 0.249769, 0.358866, 0.0544305, 0.766351, 0.864486, 0.155572, 0.130987, 0.390176, 0.768872, 0.00973901, 0.507628, 0.344939, 0.535676, 0.793158, 0.318204, 0.836324, 0.930699, 0.687373, 0.775333, 0.362346, 0.175085, 0.371798, 0.717502, 0.122382, 0.048079, 0.760329, 0.187635, 0.162109, 0.785589, 0.424688, 0.338021, 0.401296, 0.160989, 0.758673, 0.0600329, 0.472238, 0.491179, 0.704196},
{0.93606, 0.986494, 0.969042, 0.931561, 0.186667, 0.978874, 0.99663, 0.322393, 0.479635, 0.210029, 0.0516116, 0.0802667, 0.432303, 0.616542, 0.375704, 0.859747, 0.00585472, 0.129535, 0.466414, 0.529291, 0.701294, 0.00901397, 0.982414, 0.393542, 0.942207, 0.795302, 0.741754, 0.24301, 0.669384, 0.845696, 0.188805, 0.509146, 0.830407, 0.917276, 0.602299, 0.767881, 0.306593, 0.359886, 0.0687572, 0.829684, 0.229179, 0.0744201, 0.655958, 0.0477224, 0.303621, 0.0143461, 0.742886, 0.795915, 0.750033, 0.232609},
{0.787392, 0.772975, 0.93741, 0.687811, 0.116803, 0.0646974, 0.35043, 0.152894, 0.408381, 0.781451, 0.888229, 0.200036, 0.0209684, 0.30708, 0.899235, 0.407819, 0.331554, 0.785129, 0.644456, 0.559833, 0.538244, 0.072369, 0.173044, 0.525777, 0.0546361, 0.924583, 0.764057, 0.225385, 0.115388, 0.536586, 0.607944, 0.508543, 0.507417, 0.66772, 0.776995, 0.694311, 0.12588, 0.873251, 0.319945, 0.0979987, 0.398243, 0.108277, 0.167302, 0.690488, 0.736839, 0.544807, 0.427619, 0.332449, 0.303524, 0.303272},
{0.189317, 0.557484, 0.312278, 0.553397, 0.64886, 0.91674, 0.955221, 0.50462, 0.461017, 0.964693, 0.489343, 0.666369, 0.961393, 0.163022, 0.944228, 0.445337, 0.76849, 0.909908, 0.631395, 0.0784265, 0.856128, 0.337227, 0.687519, 0.288189, 0.476815, 0.369263, 0.00902837, 0.488329, 0.58064, 0.504837, 0.813317, 0.280573, 0.845051, 0.22366, 0.717896, 0.754702, 0.307532, 0.196033, 0.467478, 0.339816, 0.70674, 0.970303, 0.63105, 0.996747, 0.323806, 0.598872, 0.705321, 0.247016, 0.455696, 0.0804795},
{0.33456, 0.132139, 0.828119, 0.154085, 0.0107227, 0.400698, 0.0496074, 0.165356, 0.108235, 0.839018, 0.713855, 0.776934, 0.0389844, 0.556469, 0.903921, 0.0101458, 0.245369, 0.731232, 0.84977, 0.532534, 0.385906, 0.873176, 0.444968, 0.91528, 0.60565, 0.454582, 0.481376, 0.834714, 0.261675, 0.366536, 0.906532, 0.0922956, 0.69682, 0.764334, 0.10277, 0.293679, 0.674337, 0.371442, 0.036372, 0.942349, 0.225901, 0.358489, 0.0975838, 0.488977, 0.651872, 0.0193374, 0.06416, 0.260373, 0.897116, 0.276095},
{0.419476, 0.415756, 0.480132, 0.392388, 0.797149, 0.581474, 0.222071, 0.599189, 0.918755, 0.747196, 0.679373, 0.729935, 0.622215, 0.302698, 0.142179, 0.220875, 0.689508, 0.777096, 0.421335, 0.120452, 0.624981, 0.986104, 0.982618, 0.338433, 0.90367, 0.763068, 0.859344, 0.367142, 0.061711, 0.935555, 0.326315, 0.375951, 0.323342, 0.0847218, 0.473623, 0.46942, 0.774589, 0.286098, 0.465526, 0.117953, 0.0661835, 0.814037, 0.320375, 0.989865, 0.426482, 0.955874, 0.873152, 0.47506, 0.785512, 0.212467},
{0.671651, 0.0855945, 0.422871, 0.672851, 0.153778, 0.867345, 0.501073, 0.735992, 0.00175137, 0.00358979, 0.443155, 0.447376, 0.737932, 0.767041, 0.949267, 0.975073, 0.222063, 0.049832, 0.589902, 0.944735, 0.416438, 0.067001, 0.872338, 0.0932106, 0.727691, 0.316191, 0.815326, 0.585202, 0.793148, 0.270521, 0.956368, 0.252712, 0.826155, 0.552991, 0.810453, 0.846419, 0.754666, 0.0282214, 0.480635, 0.66527, 0.873561, 0.193285, 0.707547, 0.0424087, 0.465268, 0.479034, 0.852236, 0.885896, 0.348267, 0.975393},
{0.658517, 0.35802, 0.435467, 0.652556, 0.56805, 0.567773, 0.186051, 0.20359, 0.0229555, 0.694005, 0.103965, 0.0530486, 0.155678, 0.25118, 0.924912, 0.931485, 0.625408, 0.815884, 0.830012, 0.320533, 0.888421, 0.695486, 0.393079, 0.54757, 0.00280427, 0.23898, 0.319613, 0.186176, 0.568435, 0.249771, 0.0932093, 0.963318, 0.363278, 0.400731, 0.661624, 0.394068, 0.150986, 0.349771, 0.784392, 0.924392, 0.138173, 0.691382, 0.324983, 0.228417, 0.355485, 0.613932, 0.71221, 0.53307, 0.183495, 0.17827},
{0.612479, 0.328425, 0.488719, 0.568344, 0.39873, 0.101086, 0.586812, 0.818143, 0.806145, 0.413129, 0.247519, 0.930268, 0.70116, 0.419293, 0.899787, 0.0397218, 0.957815, 0.495183, 0.355049, 0.895876, 0.408718, 0.160196, 0.986589, 0.881188, 0.266647, 0.240948, 0.0483622, 0.812992, 0.476973, 0.209396, 0.767321, 0.804659, 0.601717, 0.561169, 0.995909, 0.497255, 0.512254, 0.475167, 0.390268, 0.0349574, 0.25995, 0.369008, 0.424584, 0.683202, 0.350413, 0.498096, 0.187766, 0.161186, 0.0802001, 0.673993},
{0.203958, 0.916276, 0.589689, 0.854002, 0.710889, 0.832084, 0.0879303, 0.290146, 0.157382, 0.303675, 0.601414, 0.133648, 0.513605, 0.533817, 0.0392084, 0.367767, 0.0567694, 0.972381, 0.51448, 0.0932177, 0.384212, 0.924293, 0.719936, 0.300891, 0.308026, 0.227762, 0.321946, 0.288019, 0.551005, 0.999464, 0.282108, 0.229494, 0.423327, 0.674326, 0.461682, 0.0501267, 0.767227, 0.0511467, 0.249907, 0.975073, 0.0121562, 0.281304, 0.123283, 0.956334, 0.55592, 0.909605, 0.311426, 0.69148, 0.330491, 0.971961},
{0.101596, 0.583375, 0.962776, 0.372483, 0.711048, 0.356197, 0.407953, 0.908963, 0.538667, 0.949676, 0.420391, 0.561479, 0.306079, 0.441481, 0.795645, 0.845698, 0.478838, 0.352285, 0.806602, 0.413751, 0.428741, 0.295836, 0.090089, 0.102007, 0.884728, 0.226089, 0.826355, 0.650158, 0.637581, 0.844318, 0.478189, 0.564266, 0.544328, 0.753012, 0.52447, 0.984814, 0.326052, 0.814095, 0.311358, 0.224452, 0.0193107, 0.897039, 0.929111, 0.284537, 0.814491, 0.334298, 0.0802123, 0.744153, 0.610428, 0.456142},
{0.535418, 0.386818, 0.764519, 0.227217, 0.0778464, 0.338252, 0.423312, 0.51027, 0.557156, 0.585771, 0.392596, 0.836499, 0.897018, 0.527963, 0.0908905, 0.971494, 0.270798, 0.591736, 0.68615, 0.415402, 0.392751, 0.883098, 0.581633, 0.79388, 0.956727, 0.335629, 0.378566, 0.217436, 0.706364, 0.921298, 0.0405991, 0.898708, 0.0776698, 0.487857, 0.765441, 0.240053, 0.127343, 0.931984, 0.825531, 0.621577, 0.471621, 0.351774, 0.182504, 0.906206, 0.902871, 0.717845, 0.290437, 0.233775, 0.417151, 0.481182},
{0.192531, 0.477613, 0.0427596, 0.749088, 0.681091, 0.826947, 0.557006, 0.801187, 0.54412, 0.838647, 0.238941, 0.576892, 0.76449, 0.300275, 0.610232, 0.885032, 0.475363, 0.539862, 0.891393, 0.0141078, 0.293454, 0.837753, 0.10823, 0.0190142, 0.401281, 0.110392, 0.744878, 0.6172, 0.159538, 0.96188, 0.652086, 0.375216, 0.939659, 0.264516, 0.356098, 0.550803, 0.877804, 0.732862, 0.377744, 0.0682323, 0.0721534, 0.560469, 0.705112, 0.0592537, 0.468026, 0.397739, 0.733399, 0.0823806, 0.422887, 0.292381},
{0.493854, 0.3198, 0.285109, 0.840782, 0.25983, 0.713188, 0.367728, 0.213163, 0.358812, 0.00324618, 0.650679, 0.937025, 0.860614, 0.0354787, 0.806116, 0.590567, 0.781034, 0.891424, 0.604904, 0.806612, 0.881038, 0.596428, 0.865021, 0.758852, 0.14511, 0.884183, 0.585178, 0.11763, 0.164741, 0.269606, 0.16636, 0.248295, 0.763923, 0.840881, 0.308162, 0.541451, 0.690161, 0.525775, 0.0857066, 0.0223031, 0.150081, 0.281734, 0.890402, 0.0855553, 0.52955, 0.921217, 0.808425, 0.0941885, 0.569371, 0.0941778},
{0.450867, 0.838754, 0.0568007, 0.223746, 0.408982, 0.289642, 0.00034564, 0.723932, 0.581392, 0.610741, 0.469397, 0.356569, 0.744541, 0.178764, 0.217994, 0.146885, 0.0404229, 0.182268, 0.209875, 0.203236, 0.829915, 0.811358, 0.120728, 0.88789, 0.490095, 0.807452, 0.206815, 0.658274, 0.381152, 0.776757, 0.0628485, 0.286736, 0.697125, 0.354449, 0.462857, 0.916235, 0.283222, 0.94171, 0.958343, 0.734779, 0.864518, 0.92464, 0.820421, 0.902895, 0.882783, 0.248096, 0.140928, 0.754826, 0.186216, 0.556285},
};

static const std::vector<float> costs = {209.551, 834.869, 202.85, 706.771, 687.851, 213.227, 805.953, 905.878, 700.649, 334.843, 496.305, 253.505, 301.473, 361.816, 639.861, 525.626, 518.837, 436.482, 197.561, 404.619, 565.11, 842.818, 900.939, 748.771, 208.288, 87.6008, 354.368, 147.331, 201.949, 155.313, 781.27, 1.24716, 590.981, 58.3802, 283.931, 445.01, 194.484, 890.094, 938.333, 192.273, 209.778, 249.757, 317.391, 809.486, 548.466, 9.70857, 783.605, 399.821, 900.366, 10.7063};

static const std::vector<float> min_impressions = {0.346428, 0.628097, 0.801948, 0.702431, 0.867421, 0.611363, 0.397214, 0.0502024, 0.023385, 0.355201, 0.151605, 0.458681, 0.323969, 0.958354, 0.0446481, 0.588316, 0.276207, 0.656895, 0.918335, 0.574733};

//
#endif
