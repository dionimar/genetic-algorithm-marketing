#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(events[44], events[23]),events[95]),events[14]),events[12]),events[54]),events[16]),events[30]),events[89]),events[59]),events[96]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(events[69], events[51]),events[59]),events[87]),events[12]),events[41]),events[47]),events[55]),events[74]),events[96]),events[35]),cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(events[61], events[74]),events[17]),events[49]),events[26]),events[47]),events[45]),events[25]),events[41]),events[39]),events[96]),cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[54], events[45]),events[57]),events[60]),events[50]),events[86]),events[95]),events[99]),events[2]),events[89]),events[44]),cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(events[0], events[25]),events[3]),events[39]),events[51]),events[70]),events[22]),events[67]),events[43]),events[28]),events[44]),cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_indep(events[99], events[71]),events[19]),events[32]),events[22]),events[58]),events[47]),events[23]),events[91]),events[72]),events[42]),cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(events[98], events[35]),events[88]),events[65]),events[75]),events[52]),events[77]),events[5]),events[62]),events[41]),events[16]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(events[1], events[23]),events[27]),events[33]),events[45]),events[37]),events[29]),events[89]),events[32]),events[57]),events[61]),cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(events[56], events[98]),events[71]),events[53]),events[29]),events[31]),events[37]),events[43]),events[76]),events[47]),events[79]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(events[24], events[30]),events[27]),events[72]),events[87]),events[2]),events[64]),events[20]),events[39]),events[1]),events[74])};


static const std::vector< std::vector<float> > prob = {{0.0096359, 0.0596793, 0.667453, 0.111889, 0.579873, 0.235408, 0.26763, 0.649997, 0.715366, 0.785402, 0.00914592, 0.237737, 0.0310462, 0.357747, 0.391014, 0.228493, 0.770751, 0.668192, 0.372064, 0.677079, 0.0895754, 0.78819, 0.281874, 0.703672, 0.00456375, 0.332556, 0.606008, 0.7898, 0.872024, 0.96271, 0.0579221, 0.167443, 0.527674, 0.12687, 0.628619, 0.769158, 0.0407679, 0.126228, 0.489347, 0.85018, 0.745377, 0.692681, 0.590601, 0.365624, 0.409407, 0.847457, 0.156506, 0.736511, 0.929519, 0.730181, 0.248708, 0.622245, 0.0110341, 0.275137, 0.52099, 0.707438, 0.280535, 0.691553, 0.600608, 0.178029, 0.492851, 0.367252, 0.0316134, 0.573992, 0.729849, 0.841749, 0.477995, 0.339624, 0.249046, 0.354711, 0.528894, 0.117257, 0.599873, 0.0322196, 0.873237, 0.0623303, 0.0698902, 0.886838, 0.684338, 0.255751, 0.142271, 0.152353, 0.654009, 0.516792, 0.78139, 0.832863, 0.16082, 0.00259808, 0.00447175, 0.487078, 0.982626, 0.191994, 0.319588, 0.634761, 0.950755, 0.662443, 0.857577, 0.726044, 0.0176624, 0.626984},
{0.353923, 0.0103369, 0.208809, 0.119495, 0.602915, 0.795124, 0.286417, 0.058793, 0.861823, 0.739865, 0.573999, 0.967941, 0.831959, 0.116383, 0.396428, 0.702234, 0.282106, 0.329653, 0.676645, 0.795326, 0.382207, 0.696863, 0.0147324, 0.196707, 0.749473, 0.185739, 0.197947, 0.333423, 0.846792, 0.0420554, 0.219368, 0.0884313, 0.336122, 0.278437, 0.660799, 0.925196, 0.164211, 0.346295, 0.428201, 0.541564, 0.164482, 0.701088, 0.478008, 0.186427, 0.49618, 0.0941532, 0.633792, 0.454293, 0.566901, 0.54031, 0.349936, 0.680618, 0.463622, 0.00391972, 0.5746, 0.842942, 0.410796, 0.815291, 0.533974, 0.976746, 0.934004, 0.481741, 0.0330393, 0.44604, 0.0209268, 0.221202, 0.420158, 0.705581, 0.287384, 0.253347, 0.351312, 0.844417, 0.135451, 0.96842, 0.513465, 0.743115, 0.0082064, 0.0233902, 0.447309, 0.641865, 0.206878, 0.00596233, 0.621305, 0.689096, 0.98935, 0.612467, 0.388381, 0.174177, 0.537646, 0.167638, 0.973195, 0.323407, 0.146248, 0.566585, 0.818442, 0.239126, 0.177206, 0.272477, 0.994835, 0.714308},
{0.664375, 0.169285, 0.336913, 0.100583, 0.997669, 0.819471, 0.110541, 0.483386, 0.0750074, 0.698251, 0.495599, 0.908799, 0.512037, 0.842645, 0.40714, 0.351394, 0.597637, 0.841244, 0.882529, 0.526473, 0.587522, 0.583697, 0.63412, 0.230693, 0.474547, 0.653417, 0.165537, 0.98586, 0.814535, 0.51602, 0.0558534, 0.3756, 0.396246, 0.123867, 0.0720204, 0.884858, 0.450598, 0.944221, 0.778069, 0.752163, 0.322603, 0.858307, 0.931862, 0.720465, 0.0309983, 0.0791699, 0.560061, 0.0666214, 0.863049, 0.0239346, 0.33032, 0.702871, 0.870465, 0.555778, 0.832306, 0.143007, 0.50013, 0.0988665, 0.390785, 0.0889522, 0.7766, 0.78582, 0.55942, 0.385982, 0.120333, 0.678023, 0.414233, 0.46069, 0.0124431, 0.918151, 0.902901, 0.409865, 0.551368, 0.788177, 0.345447, 0.903617, 0.691403, 0.44656, 0.84584, 0.129469, 0.387045, 0.221968, 0.465064, 0.064465, 0.643523, 0.731363, 0.883003, 0.290011, 0.902013, 0.646699, 0.4444, 0.579223, 0.133623, 0.652074, 0.8094, 0.165298, 0.0414742, 0.823139, 0.503292, 0.846358},
{0.45388, 0.234061, 0.234906, 0.103043, 0.93445, 0.566723, 0.734578, 0.784024, 0.43833, 0.444654, 0.11042, 0.214656, 0.775969, 0.13225, 0.911227, 0.588484, 0.757022, 0.609502, 0.363375, 0.648186, 0.830376, 0.98883, 0.481212, 0.633802, 0.478912, 0.186021, 0.747288, 0.249784, 0.482286, 0.79886, 0.545231, 0.547268, 0.500293, 0.83711, 0.490651, 0.693547, 0.0761206, 0.365964, 0.508381, 0.117898, 0.761797, 0.085715, 0.256488, 0.936384, 0.885017, 0.142198, 0.950103, 0.545946, 0.754571, 0.495459, 0.411151, 0.861772, 0.208352, 0.335979, 0.746675, 0.56271, 0.894023, 0.499547, 0.484099, 0.917003, 0.152787, 0.974791, 0.000943199, 0.580823, 0.833694, 0.73646, 0.743666, 0.232663, 0.968586, 0.596376, 0.569382, 0.383465, 0.609462, 0.585627, 0.72817, 0.21032, 0.514769, 0.13149, 0.0970815, 0.631317, 0.905195, 0.159176, 0.930063, 0.0671742, 0.234297, 0.103061, 0.540121, 0.180667, 0.582361, 0.105619, 0.260885, 0.365233, 0.793653, 0.397225, 0.765005, 0.371654, 0.313242, 0.0814992, 0.846071, 0.117128},
{0.732999, 0.86478, 0.302954, 0.968397, 0.438608, 0.0956798, 0.0670659, 0.666093, 0.276329, 0.17957, 0.465054, 0.732034, 0.738941, 0.578485, 0.705951, 0.759613, 0.757776, 0.705474, 0.298034, 0.622603, 0.450776, 0.0930238, 0.778479, 0.763503, 0.0402196, 0.521092, 0.305392, 0.973399, 0.528984, 0.0138383, 0.477532, 0.507504, 0.0815724, 0.262356, 0.819816, 0.690969, 0.749494, 0.587527, 0.835824, 0.942561, 0.524687, 0.29742, 0.147416, 0.596246, 0.324438, 0.8844, 0.545859, 0.270962, 0.837531, 0.3202, 0.935994, 0.840386, 0.840692, 0.790376, 0.496903, 0.238449, 0.14138, 0.291273, 0.905773, 0.360797, 0.433213, 0.651358, 0.976733, 0.463953, 0.482041, 0.0965923, 0.103049, 0.567318, 0.743503, 0.711893, 0.515458, 0.262447, 0.935473, 0.775472, 0.58887, 0.913117, 0.222828, 0.0036394, 0.467332, 0.413077, 0.589875, 0.928611, 0.645832, 0.8512, 0.7695, 0.939518, 0.41124, 0.908184, 0.0265361, 0.746441, 0.492351, 0.761403, 0.874719, 0.302953, 0.461852, 0.460319, 0.462125, 0.323344, 0.0870732, 0.739588},
{0.937612, 0.0757681, 0.00131081, 0.862099, 0.900873, 0.094344, 0.681306, 0.215204, 0.325232, 0.281575, 0.827789, 0.932386, 0.695719, 0.308912, 0.599325, 0.0751987, 0.8224, 0.0937168, 0.753078, 0.411745, 0.266935, 0.788114, 0.928305, 0.873732, 0.566281, 0.336425, 0.0953185, 0.384422, 0.765421, 0.556453, 0.40938, 0.0768236, 0.527734, 0.298904, 0.667691, 0.646464, 0.485166, 0.30171, 0.00333044, 0.0192114, 0.673351, 0.400823, 0.0109833, 0.739093, 0.203208, 0.466821, 0.278891, 0.605501, 0.105209, 0.187407, 0.424645, 0.282364, 0.403029, 0.316294, 0.354988, 0.874886, 0.398152, 0.993801, 0.195061, 0.247497, 0.0789255, 0.224143, 0.608892, 0.19096, 0.0693032, 0.667254, 0.834982, 0.25786, 0.129318, 0.583182, 0.103682, 0.23518, 0.890576, 0.388669, 0.794632, 0.993281, 0.27637, 0.00157598, 0.383771, 0.655879, 0.585436, 0.105456, 0.209788, 0.535813, 0.560559, 0.93321, 0.239254, 0.69601, 0.721488, 0.49191, 0.813777, 0.018442, 0.282821, 0.419099, 0.494882, 0.408416, 0.218782, 0.870385, 0.05747, 0.467942},
{0.492008, 0.530672, 0.478456, 0.648126, 0.44436, 0.435271, 0.695515, 0.470049, 0.461824, 0.752821, 0.741726, 0.00447045, 0.921454, 0.491934, 0.594509, 0.276568, 0.973515, 0.522959, 0.764037, 0.992555, 0.0610311, 0.365019, 0.901594, 0.431802, 0.790722, 0.0779761, 0.28453, 0.83689, 0.906591, 0.389418, 0.837245, 0.457289, 0.240005, 0.348597, 0.525987, 0.195787, 0.561896, 0.423975, 0.311493, 0.139574, 0.619003, 0.147365, 0.523082, 0.440748, 0.191196, 0.632129, 0.910112, 0.742468, 0.60452, 0.526588, 0.6574, 0.0261496, 0.443625, 0.839203, 0.849649, 0.989719, 0.21423, 0.812945, 0.10386, 0.50782, 0.610475, 0.307573, 0.509321, 0.380786, 0.358107, 0.875922, 0.6815, 0.569868, 0.493799, 0.489741, 0.274999, 0.0188396, 0.495783, 0.650358, 0.985991, 0.16058, 0.319666, 0.000695867, 0.74514, 0.766575, 0.417214, 0.242162, 0.917475, 0.968453, 0.601384, 0.612301, 0.869561, 0.927656, 0.085301, 0.87, 0.825792, 0.91051, 0.496091, 0.017849, 0.509113, 0.714927, 0.773431, 0.0828283, 0.377022, 0.647002},
{0.296467, 0.554353, 0.871295, 0.765324, 0.120342, 0.213265, 0.814591, 0.209587, 0.879491, 0.862597, 0.266045, 0.112325, 0.635231, 0.178017, 0.795938, 0.930081, 0.424931, 0.0393422, 0.971308, 0.922962, 0.497816, 0.905208, 0.935898, 0.416263, 0.374462, 0.577051, 0.823279, 0.496502, 0.719005, 0.100182, 0.0969773, 0.82509, 0.89952, 0.0634737, 0.875651, 0.56268, 0.48665, 0.866342, 0.604704, 0.166559, 0.0317096, 0.883977, 0.0690903, 0.782955, 0.430442, 0.108703, 0.528871, 0.515787, 0.348119, 0.424216, 0.812107, 0.525204, 0.621293, 0.583088, 0.530458, 0.432671, 0.0855554, 0.560348, 0.294556, 0.368103, 0.0323462, 0.0540861, 0.0557359, 0.271473, 0.68472, 0.754543, 0.481601, 0.527951, 0.784381, 0.186144, 0.568609, 0.63429, 0.208991, 0.769757, 0.845554, 0.929034, 0.474434, 0.949424, 0.507217, 0.928409, 0.855654, 0.864288, 0.0824006, 0.577146, 0.241497, 0.213452, 0.186594, 0.126445, 0.510902, 0.261779, 0.356631, 0.348302, 0.37283, 0.791382, 0.448456, 0.860634, 0.584765, 0.46273, 0.434658, 0.0982987},
{0.479553, 0.999956, 0.482305, 0.977241, 0.810045, 0.346874, 0.936265, 0.577647, 0.0370376, 0.116044, 0.704142, 0.152213, 0.967835, 0.158231, 0.87444, 0.527708, 0.47288, 0.583289, 0.45566, 0.844049, 0.831958, 0.946154, 0.576735, 0.604381, 0.00471846, 0.416945, 0.511242, 0.418627, 0.444257, 0.204687, 0.56777, 0.0904037, 0.482667, 0.203379, 0.134635, 0.968622, 0.201417, 0.649445, 0.300168, 0.691683, 0.75915, 0.898313, 0.186504, 0.372869, 0.446817, 0.607343, 0.254159, 0.0456395, 0.910701, 0.884177, 0.107758, 0.0519481, 0.914721, 0.674253, 0.69348, 0.452536, 0.995741, 0.928762, 0.00348185, 0.678407, 0.887177, 0.972923, 0.064711, 0.34416, 0.607041, 0.545573, 0.762439, 0.733754, 0.573631, 0.892237, 0.555875, 0.824496, 0.602655, 0.567496, 0.228569, 0.233913, 0.379883, 0.563258, 0.268649, 0.455921, 0.119679, 0.567935, 0.548584, 0.125299, 0.547954, 0.713385, 0.523759, 0.167983, 0.106949, 0.0248013, 0.347561, 0.287169, 0.307494, 0.769992, 0.336904, 0.832321, 0.856727, 0.648521, 0.456767, 0.831114},
{0.942391, 0.320152, 0.614362, 0.997438, 0.320258, 0.597525, 0.960815, 0.990678, 0.199038, 0.0371984, 0.832547, 0.0066793, 0.5159, 0.809706, 0.446388, 0.632446, 0.549416, 0.511814, 0.65833, 0.11607, 0.411146, 0.415084, 0.930142, 0.547803, 0.788969, 0.457858, 0.737773, 0.441132, 0.84172, 0.0359512, 0.085967, 0.506047, 0.0294595, 0.920368, 0.644882, 0.976848, 0.206532, 0.867023, 0.0367464, 0.597219, 0.4479, 0.937768, 0.310673, 0.750478, 0.116936, 0.556538, 0.280896, 0.198726, 0.015145, 0.41172, 0.519829, 0.663708, 0.190689, 0.712429, 0.0177798, 0.941111, 0.988428, 0.989829, 0.426242, 0.213958, 0.0557502, 0.816063, 0.368485, 0.293263, 0.397361, 0.0920531, 0.736801, 0.0332923, 0.806837, 0.672991, 0.743306, 0.164513, 0.536316, 0.585858, 0.437325, 0.696599, 0.944458, 0.00249169, 0.170136, 0.171342, 0.340594, 0.341771, 0.910569, 0.0887097, 0.648378, 0.0125911, 0.860203, 0.281749, 0.250304, 0.269132, 0.111724, 0.478782, 0.0866071, 0.513563, 0.787254, 0.740284, 0.982632, 0.938538, 0.643321, 0.0432756},
};

static const std::vector<float> costs = {672.1, 209.673, 975.291, 137.976, 861.805, 954.904, 686.494, 81.5433, 854.481, 495.228, 658.617, 593.328, 290.654, 279.933, 125.835, 573.901, 599.102, 760.191, 862.004, 445.424, 972.924, 157.996, 117.305, 497.517, 782.91, 399.74, 204.496, 621.399, 248.922, 969.025, 58.9142, 838.296, 27.3789, 866.001, 73.746, 456.512, 585.967, 503.854, 615.042, 129.287, 828.52, 748.661, 729.686, 938.9, 845.885, 654.791, 736.03, 339.209, 612.033, 878.225, 507.85, 835.092, 542.716, 261.697, 235.576, 786.896, 117.456, 196.426, 278.936, 770.656, 841.092, 243.211, 72.7152, 661.715, 562.942, 775.65, 404.094, 44.9207, 791.475, 460.523, 781.002, 447.943, 287.639, 995.749, 785.146, 724.547, 727.591, 502.086, 829.533, 183.413, 730.11, 226.538, 693.929, 606.674, 204.623, 984.068, 889.349, 778.557, 787.883, 806.391, 166.8, 884.939, 456.155, 449.963, 827.803, 771.532, 394.971, 762.59, 555.121, 663.955};

static const std::vector<float> min_impressions = {0.478323, 0.913114, 0.23569, 0.656028, 0.954989, 0.907571, 0.958546, 0.105127, 0.341144, 0.02119};

//
#endif
