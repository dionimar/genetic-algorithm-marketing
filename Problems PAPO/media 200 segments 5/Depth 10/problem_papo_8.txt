#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(events[72], events[21]),events[89]),events[188]),events[44]),events[178]),events[9]),events[22]),events[129]),events[3]),events[181]),cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_indep(events[73], events[14]),events[139]),events[131]),events[95]),events[43]),events[147]),events[119]),events[161]),events[165]),events[158]),cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(events[11], events[147]),events[85]),events[130]),events[58]),events[93]),events[123]),events[7]),events[145]),events[140]),events[75]),cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_indep(events[159], events[10]),events[183]),events[27]),events[14]),events[141]),events[184]),events[29]),events[25]),events[108]),events[100]),cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(events[3], events[7]),events[52]),events[65]),events[11]),events[69]),events[99]),events[64]),events[162]),events[6]),events[23])};


static const std::vector< std::vector<float> > prob = {{0.309923, 0.909177, 0.647177, 0.61477, 0.0838303, 0.408318, 0.858513, 0.441708, 0.138391, 0.369388, 0.365089, 0.166451, 0.0179351, 0.100869, 0.136285, 0.0164868, 0.681514, 0.529895, 0.760136, 0.089391, 0.841185, 0.0906025, 0.3059, 0.101803, 0.209538, 0.837222, 0.300362, 0.0639759, 0.717467, 0.142194, 0.187993, 0.26331, 0.664428, 0.109702, 0.393073, 0.0732461, 0.861671, 0.989787, 0.334504, 0.0547564, 0.105638, 0.971139, 0.254599, 0.869196, 0.166457, 0.640001, 0.995445, 0.370496, 0.0241193, 0.893042, 0.975838, 0.684813, 0.916036, 0.502397, 0.430885, 0.950105, 0.469073, 0.408415, 0.263423, 0.957095, 0.851704, 0.287601, 0.0139302, 0.142517, 0.948, 0.619813, 0.0909228, 0.724469, 0.13563, 0.948395, 0.175562, 0.864552, 0.29749, 0.717138, 0.155573, 0.267487, 0.860362, 0.832448, 0.060656, 0.406297, 0.256023, 0.272554, 0.310196, 0.760686, 0.673436, 0.69012, 0.0266028, 0.650017, 0.476525, 0.983099, 0.377982, 0.290215, 0.526851, 0.530619, 0.946128, 0.766243, 0.250723, 0.350638, 0.943694, 0.394159, 0.946543, 0.606605, 0.199129, 0.415368, 0.93491, 0.307002, 0.859731, 0.101597, 0.589782, 0.785633, 0.375324, 0.427889, 0.977248, 0.827108, 0.34665, 0.492872, 0.0466453, 0.64211, 0.556013, 0.47249, 0.0903451, 0.971649, 0.370376, 0.91596, 0.39132, 0.0379715, 0.318065, 0.578732, 0.184579, 0.774181, 0.507354, 0.161369, 0.543982, 0.898185, 0.213921, 0.798389, 0.579255, 0.159452, 0.266187, 0.232744, 0.0481128, 0.692631, 0.873152, 0.816536, 0.315879, 0.0719794, 0.432146, 0.465522, 0.496964, 0.318577, 0.196437, 0.721245, 0.132148, 0.71218, 0.756006, 0.25417, 0.400596, 0.433605, 0.379476, 0.234372, 0.178422, 0.175367, 0.826093, 0.656944, 0.660802, 0.0406418, 0.164834, 0.444288, 0.765934, 0.821475, 0.591971, 0.976259, 0.90664, 0.583408, 0.622877, 0.455535, 0.15778, 0.204971, 0.411624, 0.506552, 0.249368, 0.0748419, 0.354382, 0.570377, 0.340264, 0.192081, 0.718458, 0.376013, 0.787702, 0.154045, 0.473294, 0.418213, 0.957098, 0.881689, 0.775748, 0.698646, 0.26272, 0.783741, 0.503072, 0.00731137},
{0.702226, 0.712972, 0.635477, 0.238215, 0.0254593, 0.170464, 0.738426, 0.254017, 0.506986, 0.0115176, 0.683314, 0.942146, 0.117999, 0.576526, 0.325669, 0.0495946, 0.717593, 0.431309, 0.326583, 0.778183, 0.224692, 0.531424, 0.470495, 0.0386693, 0.668274, 0.88057, 0.822232, 0.743958, 0.910914, 0.431349, 0.547842, 0.838799, 0.258542, 0.295101, 0.194053, 0.684682, 0.776526, 0.939279, 0.81699, 0.0526475, 0.910134, 0.863918, 0.149618, 0.3502, 0.552264, 0.82179, 0.0914826, 0.210834, 0.103519, 0.266484, 0.782223, 0.989629, 0.453787, 0.580942, 0.368618, 0.19133, 0.0646759, 0.324279, 0.978699, 0.886522, 0.891874, 0.30597, 0.778714, 0.116223, 0.396133, 0.269715, 0.747611, 0.0733296, 0.228344, 0.942488, 0.905478, 0.111097, 0.124703, 0.317379, 0.23427, 0.929389, 0.924685, 0.184175, 0.342709, 0.777469, 0.0465465, 0.952373, 0.503134, 0.746912, 0.381119, 0.487287, 0.0246808, 0.558559, 0.0582057, 0.986805, 0.180436, 0.891818, 0.212679, 0.221143, 0.793368, 0.190751, 0.115419, 0.497037, 0.500519, 0.501372, 0.416167, 0.16684, 0.622433, 0.200673, 0.690214, 0.318513, 0.333451, 0.544094, 0.365463, 0.939776, 0.0591519, 0.718567, 0.770048, 0.450899, 0.161644, 0.794538, 0.0959393, 0.952926, 0.860642, 0.0289248, 0.487464, 0.263291, 0.598408, 0.722302, 0.786381, 0.677972, 0.908248, 0.608351, 0.24755, 0.85396, 0.331923, 0.553765, 0.994757, 0.182852, 0.0657062, 0.970991, 0.991528, 0.190055, 0.356713, 0.850411, 0.135819, 0.111504, 0.283533, 0.120515, 0.715371, 0.466569, 0.660096, 0.674318, 0.62359, 0.47767, 0.523953, 0.234524, 0.235458, 0.164923, 0.680221, 0.299741, 0.370093, 0.657498, 0.678296, 0.126599, 0.439144, 0.240427, 0.62664, 0.550073, 0.299401, 0.225716, 0.79568, 0.25576, 0.793179, 0.705639, 0.180138, 0.635781, 0.503526, 0.570031, 0.497656, 0.37082, 0.515678, 0.187979, 0.214398, 0.190354, 0.420081, 0.33039, 0.609369, 0.415759, 0.526039, 0.481096, 0.0579532, 0.781583, 0.935854, 0.666713, 0.574529, 0.169634, 0.774018, 0.412244, 0.345159, 0.258157, 0.122468, 0.147645, 0.64332, 0.764181},
{0.0344653, 0.157292, 0.948782, 0.883874, 0.434153, 0.715407, 0.987925, 0.920614, 0.972086, 0.977236, 0.119136, 0.274363, 0.319362, 0.400821, 0.707762, 0.890842, 0.0608171, 0.345906, 0.133054, 0.801666, 0.865764, 0.876093, 0.840528, 0.564037, 0.230699, 0.87793, 0.779615, 0.669682, 0.0888427, 0.859492, 0.589689, 0.534351, 0.433349, 0.116717, 0.134458, 0.282069, 0.0338273, 0.0636511, 0.140905, 0.911507, 0.635682, 0.1269, 0.724427, 0.43074, 0.107419, 0.483565, 0.0605182, 0.811133, 0.213419, 0.717162, 0.675918, 0.850558, 0.849229, 0.992508, 0.512219, 0.398538, 0.181688, 0.0192946, 0.443107, 0.819264, 0.619087, 0.710449, 0.304725, 0.662269, 0.764881, 0.8253, 0.195524, 0.0233975, 0.664641, 0.288438, 0.891953, 0.436667, 0.420861, 0.619028, 0.31691, 0.204931, 0.572883, 0.329947, 0.321162, 0.759708, 0.596318, 0.772453, 0.276428, 0.300249, 0.149878, 0.891894, 0.416487, 0.413906, 0.110254, 0.608557, 0.698284, 0.0571809, 0.299422, 0.783896, 0.882694, 0.11781, 0.878613, 0.274998, 0.583141, 0.960102, 0.363048, 0.0573366, 0.841362, 0.297797, 0.317154, 0.549148, 0.871584, 0.383964, 0.152927, 0.930812, 0.862979, 0.594264, 0.505349, 0.226642, 0.428135, 0.0914697, 0.546161, 0.612112, 0.913929, 0.537098, 0.75803, 0.347186, 0.324786, 0.945252, 0.385804, 0.323508, 0.847563, 0.0900738, 0.691837, 0.595523, 0.790851, 0.0852746, 0.45716, 0.128025, 0.41184, 0.664466, 0.0570075, 0.916205, 0.839721, 0.741729, 0.607614, 0.837846, 0.829982, 0.988731, 0.521921, 0.272881, 0.293725, 0.451086, 0.874656, 0.878635, 0.363698, 0.245755, 0.472306, 0.541204, 0.843255, 0.330281, 0.611344, 0.737956, 0.728879, 0.822056, 0.504983, 0.343931, 0.618622, 0.827806, 0.618767, 0.459197, 0.0908725, 0.887891, 0.839658, 0.666392, 0.0406938, 0.417346, 0.518548, 0.108626, 0.553303, 0.826635, 0.719175, 0.590774, 0.71705, 0.171089, 0.00228577, 0.37883, 0.00300972, 0.0971476, 0.0343166, 0.507286, 0.0753551, 0.637141, 0.681258, 0.30841, 0.872365, 0.262236, 0.619329, 0.927542, 0.73917, 0.954945, 0.314172, 0.338586, 0.170525, 0.639981},
{0.721807, 0.964945, 0.696452, 0.81296, 0.245314, 0.714317, 0.528356, 0.858895, 0.998197, 0.333094, 0.746952, 0.393033, 0.710132, 0.532336, 0.903348, 0.31253, 0.579261, 0.177895, 0.595012, 0.601568, 0.663321, 0.186883, 0.135663, 0.591952, 0.0676342, 0.825884, 0.195392, 0.890781, 0.427043, 0.867671, 0.0878423, 0.757816, 0.846518, 0.992907, 0.806487, 0.285535, 0.997242, 0.514148, 0.344263, 0.461346, 0.0199499, 0.124269, 0.798243, 0.479458, 0.0435016, 0.906519, 0.807584, 0.223038, 0.854453, 0.31371, 0.171148, 0.924271, 0.745819, 0.324429, 0.9557, 0.682501, 0.848792, 0.934899, 0.407735, 0.200138, 0.419903, 0.916927, 0.889263, 0.247798, 0.914066, 0.242422, 0.646187, 0.564155, 0.542751, 0.893396, 0.62028, 0.865627, 0.67709, 0.439306, 0.848092, 0.622571, 0.903141, 0.186784, 0.430417, 0.484816, 0.539079, 0.560512, 0.102117, 0.22805, 0.597668, 0.868126, 0.124337, 0.625915, 0.0647254, 0.45892, 0.716847, 0.663224, 0.847326, 0.18365, 0.12358, 0.138978, 0.399819, 0.0551619, 0.35604, 0.790905, 0.722018, 0.134013, 0.479937, 0.852876, 0.859425, 0.785723, 0.96896, 0.133971, 0.589901, 0.0850745, 0.10304, 0.0743326, 0.225504, 0.367828, 0.354744, 0.203712, 0.907959, 0.120653, 0.670999, 0.781873, 0.0247359, 0.221099, 0.271996, 0.674408, 0.968278, 0.000741404, 0.881177, 0.380331, 0.716585, 0.776867, 0.827725, 0.934219, 0.750003, 0.0807519, 0.410296, 0.708277, 0.10791, 0.614416, 0.918331, 0.811717, 0.547677, 0.774631, 0.866263, 0.672619, 0.743303, 0.431996, 0.257783, 0.00334545, 0.940417, 0.924247, 0.967047, 0.977257, 0.4428, 0.103509, 0.540083, 0.449594, 0.145856, 0.330061, 0.427853, 0.0226857, 0.119147, 0.78859, 0.630248, 0.518095, 0.439497, 0.637471, 0.391595, 0.218959, 0.159785, 0.717937, 0.331349, 0.892332, 0.115304, 0.665577, 0.199907, 0.0636834, 0.438405, 0.19776, 0.977286, 0.291494, 0.49292, 0.0669884, 0.0672251, 0.944512, 0.37139, 0.30259, 0.523033, 0.709809, 0.0239248, 0.838195, 0.321554, 0.387694, 0.754041, 0.849568, 0.24468, 0.95222, 0.614696, 0.723274, 0.96715, 0.799593},
{0.0383692, 0.927696, 0.955071, 0.765569, 0.00136545, 0.0371604, 0.889928, 0.359022, 0.47293, 0.664591, 0.961271, 0.764571, 0.437666, 0.760116, 0.00999389, 0.326394, 0.414573, 0.927526, 0.355009, 0.395311, 0.821978, 0.259279, 0.189352, 0.577957, 0.0483678, 0.957173, 0.401929, 0.0750766, 0.234576, 0.566245, 0.876364, 0.365862, 0.836904, 0.790771, 0.323898, 0.267997, 0.295267, 0.203637, 0.548992, 0.737887, 0.242033, 0.914024, 0.551081, 0.157841, 0.441823, 0.799517, 0.433658, 0.239588, 0.834921, 0.391079, 0.827078, 0.88631, 0.668988, 0.608296, 0.566494, 0.176671, 0.628477, 0.230413, 0.495293, 0.345968, 0.0965611, 0.629551, 0.432474, 0.589559, 0.878297, 0.455195, 0.734471, 0.174937, 0.142165, 0.972537, 0.58768, 0.286701, 0.831191, 0.106705, 0.823001, 0.166189, 0.893083, 0.538478, 0.339764, 0.157294, 0.653408, 0.365287, 0.716085, 0.588604, 0.0259778, 0.338631, 0.127698, 0.74079, 0.201783, 0.737034, 0.504377, 0.859204, 0.55365, 0.258233, 0.129531, 0.986305, 0.908412, 0.979754, 0.738462, 0.716584, 0.263891, 0.818953, 0.404131, 0.357038, 0.318244, 0.13015, 0.94606, 0.912035, 0.730096, 0.731941, 0.58816, 0.154149, 0.512027, 0.562148, 0.463064, 0.187593, 0.876676, 0.157066, 0.239513, 0.0873536, 0.760455, 0.48212, 0.417605, 0.183048, 0.536638, 0.492364, 0.445179, 0.906067, 0.106712, 0.633493, 0.65948, 0.973208, 0.0355155, 0.792032, 0.335774, 0.99052, 0.218222, 0.952175, 0.919918, 0.655798, 0.378492, 0.282655, 0.933859, 0.896681, 0.776824, 0.521748, 0.130612, 0.718882, 0.880285, 0.637091, 0.874636, 0.695745, 0.46475, 0.696734, 0.873176, 0.407116, 0.639958, 0.138293, 0.152954, 0.988919, 0.303741, 0.932663, 0.795644, 0.316055, 0.640092, 0.0307819, 0.45939, 0.110986, 0.552863, 0.873461, 0.0489232, 0.742382, 0.0421674, 0.355491, 0.0246133, 0.960088, 0.603152, 0.259451, 0.0109873, 0.297025, 0.72091, 0.947453, 0.682123, 0.201884, 0.407697, 0.770554, 0.4512, 0.824629, 0.873313, 0.183319, 0.0941577, 0.154361, 0.0709697, 0.955259, 0.291978, 0.17543, 0.91245, 0.561935, 0.173209, 0.072061},
};

static const std::vector<float> costs = {201.661, 674.315, 242.63, 375.032, 493.544, 600.132, 458.402, 528.351, 244.629, 68.1008, 271.444, 29.1531, 313.609, 133.207, 743.898, 283.564, 709.83, 220.534, 634.428, 626.912, 47.8653, 605.836, 732.086, 743.308, 675.578, 255.18, 526.18, 466.743, 406.654, 759.559, 729.039, 297.026, 399.132, 398.034, 308.497, 548.74, 342.102, 250.092, 135.296, 431.525, 859.114, 77.5355, 291.582, 812.992, 282.1, 429.9, 440.401, 335.6, 923.613, 819.405, 437.473, 265.64, 203.656, 61.8177, 656.564, 659.501, 696.031, 63.4633, 370.797, 172.901, 639.984, 280.931, 613.507, 642.833, 38.1531, 878.203, 663.889, 51.1113, 151.532, 944.416, 796.158, 994.014, 1.59683, 769.383, 495.076, 793.862, 824.443, 822.848, 681.624, 859.288, 684.791, 122.703, 289.16, 408.657, 81.4169, 489.362, 708.57, 574.242, 221.756, 116.156, 838.123, 593.339, 584.969, 563.164, 707.078, 603.149, 553.941, 374.786, 955.829, 84.0595, 841.707, 538.724, 192.495, 431.114, 9.36675, 905.146, 731.849, 17.852, 157.424, 333.761, 190.193, 5.41418, 444.78, 668.158, 357.753, 975.489, 530.549, 686.31, 429.657, 963.277, 125.437, 25.8822, 853.778, 787.925, 961.118, 11.515, 175.327, 298.046, 203.078, 243.969, 810.045, 773.84, 477.884, 167.46, 209.981, 809.924, 300.963, 553.94, 161.042, 518.861, 364.098, 29.7198, 877.223, 224.351, 763.083, 323.603, 304.748, 310.375, 821.736, 668.342, 400.994, 41.4696, 385.667, 285.039, 601.03, 264.175, 959.898, 148.795, 607.284, 399.056, 188.148, 838.808, 487.539, 446.352, 424.667, 7.99153, 567.704, 340.624, 597.908, 662.395, 174.846, 358.267, 561.24, 547.282, 899.627, 97.9459, 647.298, 307.862, 762.766, 37.673, 514.758, 192.945, 714.204, 325.292, 974.032, 730.678, 852.318, 843.417, 19.7295, 702.414, 211.66, 296.284, 32.7697, 98.2671, 486.123, 486.917, 54.1184, 232.339, 463.774, 427.103};

static const std::vector<float> min_impressions = {0.947666, 0.0633705, 0.420453, 0.589391, 0.53958};

//
#endif
