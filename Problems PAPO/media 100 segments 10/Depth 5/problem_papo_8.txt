#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(events[50], events[77]),events[63]),events[23]),events[35]),events[30]),cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(events[28], events[61]),events[95]),events[90]),events[65]),events[54]),cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(events[52], events[99]),events[21]),events[17]),events[62]),events[2]),cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(events[30], events[73]),events[24]),events[12]),events[88]),events[10]),cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(events[4], events[58]),events[0]),events[88]),events[99]),events[14]),cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(events[22], events[90]),events[28]),events[13]),events[33]),events[5]),cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(events[88], events[36]),events[94]),events[86]),events[53]),events[96]),cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(events[66], events[53]),events[31]),events[83]),events[19]),events[86]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[91], events[7]),events[75]),events[26]),events[61]),events[69]),cons_excl(cons_excl(cons_excl(cons_excl(cons_incl(events[35], events[6]),events[13]),events[62]),events[19]),events[2])};


static const std::vector< std::vector<float> > prob = {{0.142047, 0.72967, 0.0812489, 0.15964, 0.809194, 0.967705, 0.0256093, 0.575142, 0.576282, 0.385238, 0.91647, 0.614987, 0.205164, 0.751509, 0.153673, 0.797811, 0.04686, 0.355517, 0.496303, 0.906316, 0.0599937, 0.371722, 0.517484, 0.499161, 0.496051, 0.639054, 0.978204, 0.610753, 0.373373, 0.13633, 0.518169, 0.414717, 0.0419466, 0.61703, 0.128579, 0.385365, 0.834623, 0.648616, 0.539604, 0.725531, 0.461571, 0.873353, 0.352367, 0.897896, 0.174004, 0.199429, 0.15133, 0.868996, 0.150464, 0.00410408, 0.931192, 0.255172, 0.0196722, 0.49441, 0.867866, 0.00344104, 0.153641, 0.683935, 0.945147, 0.415378, 0.532726, 0.550876, 0.711398, 0.513513, 0.800453, 0.915947, 0.373801, 0.941277, 0.32451, 0.580514, 0.87592, 0.669889, 0.112471, 0.144677, 0.928944, 0.140823, 0.150148, 0.388379, 0.764627, 0.936858, 0.489673, 0.832529, 0.512216, 0.0480154, 0.781722, 0.102626, 0.143017, 0.370566, 0.760801, 0.522148, 0.256962, 0.027775, 0.941687, 0.460628, 0.146334, 0.138644, 0.00334087, 0.630361, 0.860115, 0.537104},
{0.792156, 0.362144, 0.676941, 0.811182, 0.538571, 0.358775, 0.222624, 0.939942, 0.0928127, 0.53393, 0.17601, 0.693532, 0.415483, 0.46311, 0.824581, 0.24085, 0.284096, 0.0753635, 0.873147, 0.687343, 0.319571, 0.0707954, 0.883899, 0.87466, 0.409187, 0.132163, 0.483476, 0.89365, 0.583454, 0.53438, 0.457187, 0.993902, 0.649044, 0.700516, 0.563476, 0.86354, 0.864074, 0.33518, 0.129438, 0.465586, 0.983695, 0.854298, 0.481631, 0.459996, 0.646792, 0.733362, 0.958195, 0.121964, 0.591195, 0.977778, 0.993977, 0.151139, 0.0818744, 0.0532492, 0.881228, 0.546728, 0.566179, 0.347527, 0.685226, 0.548969, 0.4401, 0.115682, 0.311678, 0.741664, 0.0566141, 0.477134, 0.926194, 0.714491, 0.159075, 0.138017, 0.0133205, 0.622646, 0.401289, 0.543252, 0.613306, 0.300817, 0.877979, 0.385176, 0.751809, 0.195993, 0.849648, 0.821378, 0.959497, 0.503752, 0.0467057, 0.0129453, 0.974249, 0.876482, 0.757967, 0.531995, 0.862614, 0.37015, 0.717049, 0.819257, 0.713649, 0.672128, 0.0457715, 0.629136, 0.451382, 0.425982},
{0.269473, 0.51035, 0.836973, 0.976623, 0.732789, 0.117981, 0.0608809, 0.552875, 0.847665, 0.639587, 0.636836, 0.312952, 0.363199, 0.904244, 0.538562, 0.57827, 0.343374, 0.325371, 0.945596, 0.594797, 0.961851, 0.216406, 0.236628, 0.475639, 0.0121297, 0.165827, 0.403063, 0.694433, 0.355933, 0.00732653, 0.305808, 0.175526, 0.40858, 0.596182, 0.681559, 0.521704, 0.7722, 0.2401, 0.0934825, 0.880104, 0.282507, 0.0557469, 0.21975, 0.00556036, 0.0601113, 0.403166, 0.198186, 0.0102404, 0.0589015, 0.278935, 0.491861, 0.444028, 0.460854, 0.608901, 0.962336, 0.25942, 0.841798, 0.275717, 0.83095, 0.960603, 0.237712, 0.256311, 0.478415, 0.0750213, 0.252194, 0.202193, 0.787616, 0.788959, 0.572302, 0.37162, 0.163444, 0.266087, 0.547247, 0.293728, 0.415834, 0.265573, 0.426472, 0.845324, 0.927256, 0.930834, 0.8543, 0.10276, 0.404753, 0.312353, 0.497395, 0.788968, 0.521286, 0.137441, 0.386967, 0.22076, 0.608738, 0.0941446, 0.687783, 0.524769, 0.968766, 0.280036, 0.785203, 0.347181, 0.344853, 0.754417},
{0.907745, 0.914122, 0.472022, 0.379635, 0.893288, 0.787199, 0.758734, 0.157715, 0.900582, 0.266874, 0.553357, 0.468033, 0.717999, 0.348442, 0.751075, 0.649137, 0.859651, 0.568792, 0.123432, 0.17792, 0.777507, 0.299494, 0.191527, 0.443751, 0.513587, 0.993609, 0.837498, 0.893975, 0.892966, 0.0271982, 0.147088, 0.337416, 0.255236, 0.675608, 0.365098, 0.1586, 0.904615, 0.617547, 0.835469, 0.498941, 0.469285, 0.61495, 0.843451, 0.502649, 0.507392, 0.980302, 0.331323, 0.632319, 0.450414, 0.897974, 0.63352, 0.0972141, 0.88628, 0.240417, 0.102277, 0.989625, 0.719401, 0.717134, 0.852204, 0.0369239, 0.17398, 0.993084, 0.52848, 0.387731, 0.656172, 0.885895, 0.137982, 0.232295, 0.108943, 0.893758, 0.333783, 0.636557, 0.682238, 0.633944, 0.716801, 0.470895, 0.26082, 0.589449, 0.0570243, 0.0670109, 0.202129, 0.765342, 0.711244, 0.0678261, 0.945661, 0.886188, 0.937469, 0.160532, 0.34625, 0.891436, 0.0246398, 0.39436, 0.250494, 0.609108, 0.290396, 0.961414, 0.0567737, 0.0305799, 0.681435, 0.321642},
{0.311146, 0.980668, 0.0890649, 0.543504, 0.509569, 0.216737, 0.749008, 0.194579, 0.97202, 0.39988, 0.726664, 0.0556873, 0.666772, 0.833464, 0.645906, 0.350461, 0.0215324, 0.802679, 0.181919, 0.57628, 0.448776, 0.0585066, 0.339328, 0.548805, 0.381728, 0.464212, 0.252843, 0.0304445, 0.834128, 0.823877, 0.756431, 0.761287, 0.940578, 0.612352, 0.194482, 0.734466, 0.275054, 0.794961, 0.455572, 0.345903, 0.943817, 0.749258, 0.313112, 0.9873, 0.523003, 0.827523, 0.493263, 0.540044, 0.361714, 0.652634, 0.964631, 0.933654, 0.124515, 0.794328, 0.596063, 0.39715, 0.578698, 0.90599, 0.863232, 0.30233, 0.7662, 0.826073, 0.7134, 0.974896, 0.641594, 0.479468, 0.0615874, 0.0531237, 0.798379, 0.0817148, 0.107693, 0.341198, 0.0643923, 0.855584, 0.18034, 0.0727093, 0.0940469, 0.37058, 0.626388, 0.780973, 0.207041, 0.620301, 0.49465, 0.59072, 0.467709, 0.80271, 0.451323, 0.954368, 0.400933, 0.0676089, 0.514638, 0.207473, 0.649799, 0.0579159, 0.928729, 0.933657, 0.0298781, 0.130471, 0.093033, 0.912835},
{0.0406731, 0.276859, 0.628867, 0.0976367, 0.197578, 0.844508, 0.338078, 0.884387, 0.293019, 0.27618, 0.9838, 0.772804, 0.0671119, 0.0948355, 0.0830612, 0.986545, 0.48854, 0.609602, 0.514868, 0.810917, 0.371837, 0.290652, 0.293841, 0.228962, 0.77365, 0.240575, 0.750751, 0.817326, 0.406676, 0.784216, 0.676508, 0.123437, 0.769472, 0.00216109, 0.717497, 0.19839, 0.102015, 0.606042, 0.447908, 0.900985, 0.799985, 0.641992, 0.574511, 0.460926, 0.384755, 0.980487, 0.904281, 0.385087, 0.611932, 0.491253, 0.719663, 0.930943, 0.651211, 0.0717173, 0.163595, 0.589398, 0.919118, 0.368277, 0.294553, 0.522941, 0.480384, 0.938955, 0.0912976, 0.315996, 0.487734, 0.937715, 0.497213, 0.859627, 0.498475, 0.732256, 0.776167, 0.822476, 0.895766, 0.448161, 0.0511658, 0.502425, 0.806311, 0.758896, 0.308617, 0.196659, 0.234109, 0.755764, 0.676473, 0.285752, 0.896547, 0.0811402, 0.766646, 0.960146, 0.599159, 0.541998, 0.853314, 0.95997, 0.886975, 0.573199, 0.496063, 0.0672681, 0.903561, 0.586554, 0.442505, 0.853184},
{0.908111, 0.918376, 0.552934, 0.349956, 0.190144, 0.786196, 0.511821, 0.757619, 0.80958, 0.740534, 0.683345, 0.198996, 0.439009, 0.666473, 0.611057, 0.466934, 0.721751, 0.65763, 0.366187, 0.553447, 0.883174, 0.149814, 0.82477, 0.50459, 0.733267, 0.357373, 0.43947, 0.897231, 0.0594814, 0.0742398, 0.077106, 0.733578, 0.671734, 0.217235, 0.941161, 0.970325, 0.982563, 0.732742, 0.213685, 0.174282, 0.241768, 0.346662, 0.842631, 0.553221, 0.473985, 0.5624, 0.483427, 0.471769, 0.162343, 0.473535, 0.732805, 0.288223, 0.404051, 0.709905, 0.807662, 0.330159, 0.612682, 0.914655, 0.469742, 0.183902, 0.988535, 0.300161, 0.940146, 0.95341, 0.0390688, 0.386389, 0.713571, 0.658039, 0.562574, 0.843182, 0.236193, 0.319727, 0.676861, 0.239548, 0.28148, 0.655498, 0.267324, 0.498187, 0.0873335, 0.324736, 0.793152, 0.0522649, 0.945651, 0.440109, 0.489224, 0.593762, 0.233569, 0.0133245, 0.895653, 0.589572, 0.727743, 0.356168, 0.745081, 0.817116, 0.98744, 0.825091, 0.293178, 0.0857471, 0.625573, 0.15811},
{0.00996526, 0.303893, 0.213389, 0.995129, 0.491134, 0.802293, 0.701762, 0.266619, 0.512626, 0.952228, 0.966685, 0.382247, 0.425688, 0.728392, 0.838167, 0.353246, 0.300963, 0.629621, 0.445835, 0.590229, 0.225202, 0.749756, 0.546467, 0.944062, 0.383385, 0.707098, 0.686721, 0.442356, 0.790954, 0.256465, 0.515566, 0.153661, 0.61747, 0.30677, 0.234968, 0.130071, 0.598012, 0.24054, 0.183889, 0.552641, 0.801771, 0.509028, 0.288006, 0.500031, 0.425319, 0.754196, 0.741623, 0.442153, 0.807458, 0.764634, 0.474142, 0.344549, 0.144726, 0.540015, 0.459586, 0.450971, 0.801725, 0.921957, 0.665522, 0.0696524, 0.629457, 0.116351, 0.639118, 0.772336, 0.216637, 0.388024, 0.855102, 0.815666, 0.69633, 0.123975, 0.769433, 0.189403, 0.695809, 0.724368, 0.905966, 0.677816, 0.943718, 0.779061, 0.641263, 0.795922, 0.69816, 0.479929, 0.325229, 0.281517, 0.77129, 0.789783, 0.439188, 0.489097, 0.309001, 0.576881, 0.966122, 0.42398, 0.981567, 0.117327, 0.411911, 0.915563, 0.49592, 0.94566, 0.882078, 0.058987},
{0.371872, 0.867667, 0.703194, 0.780038, 0.384339, 0.0718365, 0.722263, 0.414791, 0.26149, 0.897484, 0.556419, 0.604951, 0.908606, 0.0389805, 0.889214, 0.887785, 0.670482, 0.130704, 0.508782, 0.0134813, 0.961132, 0.989405, 0.596115, 0.327793, 0.946316, 0.0646963, 0.0182758, 0.278774, 0.711586, 0.987841, 0.285067, 0.223938, 0.569917, 0.0154863, 0.534267, 0.329441, 0.442214, 0.469392, 0.254304, 0.78647, 0.03835, 0.244052, 0.354972, 0.459543, 0.701609, 0.197671, 0.253917, 0.930898, 0.286092, 0.354121, 0.377322, 0.555169, 0.0630497, 0.564499, 0.495099, 0.442693, 0.756436, 0.787054, 0.998545, 0.208675, 0.532021, 0.383505, 0.650075, 0.293661, 0.789405, 0.950399, 0.684445, 0.290741, 0.843622, 0.414404, 0.566147, 0.611185, 0.634028, 0.720633, 0.896676, 0.427041, 0.477011, 0.841157, 0.34021, 0.654041, 0.114429, 0.0105374, 0.61777, 0.0101433, 0.45403, 0.58312, 0.899658, 0.556145, 0.153723, 0.0303972, 0.983118, 0.062937, 0.425243, 0.858033, 0.374879, 0.695469, 0.566715, 0.205009, 0.497302, 0.163996},
{0.951792, 0.104262, 0.62969, 0.472444, 0.461299, 0.54488, 0.191512, 0.789426, 0.0932173, 0.404762, 0.818179, 0.850229, 0.430647, 0.199588, 0.502646, 0.0987801, 0.18253, 0.903957, 0.151269, 0.256059, 0.878001, 0.644444, 0.620323, 0.0549474, 0.77594, 0.585862, 0.144851, 0.584424, 0.152631, 0.736795, 0.343314, 0.980551, 0.87923, 0.502447, 0.569213, 0.569924, 0.261321, 0.497263, 0.295175, 0.969544, 0.299772, 0.0105569, 0.757365, 0.798492, 0.757002, 0.0232318, 0.866135, 0.503761, 0.756439, 0.663187, 0.815895, 0.93315, 0.86424, 0.70279, 0.47625, 0.78755, 0.703902, 0.0882488, 0.964066, 0.0736897, 0.267938, 0.792179, 0.406439, 0.721867, 0.139202, 0.742962, 0.126079, 0.992771, 0.930889, 0.496976, 0.912757, 0.274424, 0.968307, 0.456962, 0.443343, 0.441745, 0.442541, 0.529677, 0.41958, 0.975748, 0.29305, 0.466998, 0.695081, 0.37459, 0.847487, 0.371348, 0.461448, 0.579089, 0.509316, 0.108759, 0.51293, 0.43506, 0.0274357, 0.271907, 0.0131326, 0.104494, 0.918514, 0.884031, 0.909629, 0.175109},
};

static const std::vector<float> costs = {200.65, 363.423, 536.088, 193.962, 728.828, 440.338, 135.207, 244.713, 948.793, 764.547, 44.0696, 226.841, 162.283, 325.24, 818.816, 187.578, 355.091, 640.026, 650.106, 806.077, 573.178, 45.4003, 818.428, 159.157, 118.322, 780.244, 107.046, 104.981, 913.692, 128.246, 273.75, 964.495, 136.748, 90.348, 203.777, 225.743, 201.961, 438.429, 994.394, 107.578, 396.66, 439.113, 955.711, 546.195, 43.3694, 639.505, 402.363, 773.274, 957.452, 121.486, 955.167, 15.6898, 208.554, 931.433, 405.954, 887.445, 840.838, 656.874, 112.409, 391.667, 252.898, 997.962, 476.814, 991.25, 195.931, 917.517, 300.998, 165.547, 788.466, 891.983, 717.374, 336.787, 513.011, 444.764, 744.909, 388.806, 811.702, 514.667, 978.407, 422.447, 981.098, 826.692, 632.216, 870.884, 933.456, 40.9471, 202.771, 911.512, 966.155, 117.355, 848.104, 952.507, 509.32, 604.707, 215.529, 625.345, 132.247, 884.648, 569.606, 735.879};

static const std::vector<float> min_impressions = {0.295782, 0.634307, 0.385744, 0.539342, 0.260322, 0.209318, 0.498009, 0.121533, 0.487586, 0.71165};

//
#endif
