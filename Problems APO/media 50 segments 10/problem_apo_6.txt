#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{2.22915,4.43421,2.3666,6.87037,4.29409,9.65851,3.15689,9.60617,1.63567,6.94522},
{8.8205,5.7949,3.64442,5.39811,5.93361,4.22335,3.52593,6.29177,5.84146,6.54153},
{3.65176,1.36633,5.35186,6.61043,4.20816,9.70152,7.448,1.92129,5.75518,7.3408},
{1.60251,6.55692,9.53417,7.71346,5.77924,4.84564,5.14781,6.33159,9.19373,5.62957},
{2.85675,8.34311,3.24482,8.96606,6.67493,7.45851,4.03085,2.98266,7.03248,4.31391},
{1.71258,6.05038,7.06625,8.11858,8.68715,9.10963,6.27608,1.94275,7.47358,6.33609},
{7.09967,7.60237,6.28333,2.47194,6.43305,8.91111,5.33953,9.62938,3.64028,3.14677},
{5.63136,7.04514,2.47941,5.45027,5.7523,7.1516,8.84331,6.71342,1.58875,2.815},
{3.58204,8.14865,4.80645,3.87435,4.37973,4.24266,8.63758,1.22946,2.64308,3.33454},
{4.00708,6.54375,4.99954,5.93641,4.29556,3.62267,7.047,3.26896,8.82777,2.88415},
{7.89865,6.17402,4.71951,4.27214,8.84804,9.27997,8.67986,3.94194,3.26575,8.82921},
{2.51341,8.90004,9.25773,2.78985,4.64735,8.08133,7.38925,7.79888,4.89132,6.96249},
{1.49886,6.63277,2.94711,4.60963,6.83808,7.49961,9.68263,6.00583,2.43809,9.83437},
{5.26782,2.51631,7.74399,3.68394,6.41701,7.04711,6.20954,5.32622,4.01624,9.11825},
{6.17786,8.73911,1.27677,3.73067,3.74824,2.45786,3.88943,1.0734,7.07475,1.83771},
{5.95171,1.64313,4.73054,1.6481,2.34376,8.29675,7.43468,5.79315,1.01187,2.93815},
{8.85304,8.07083,1.79183,3.20876,8.95158,8.86647,5.96814,1.19856,8.25446,1.22441},
{9.56162,1.73687,8.34844,9.68681,2.22822,3.44829,1.99873,8.94586,8.44807,7.88277},
{3.30824,2.43925,5.70028,8.73153,6.84245,2.03023,9.63825,9.26992,9.1259,7.67998},
{9.8107,6.51558,7.22489,1.80857,2.27541,6.90496,1.11599,4.46974,8.75618,1.59001},
{8.40268,7.47786,9.8598,8.32016,3.24457,5.55001,4.48318,9.35706,6.95144,7.25833},
{5.67696,2.14823,3.50453,4.71486,4.14054,8.82644,8.91614,7.9774,2.53812,9.11287},
{4.44176,9.76149,6.73182,7.97206,6.12046,7.21931,3.57714,9.48787,4.69945,1.87113},
{8.57721,7.61071,4.9192,7.96747,9.15808,5.92126,2.26152,1.56014,7.77178,8.45708},
{5.67269,9.41396,1.14567,3.12736,9.99034,8.33302,1.5771,4.70625,7.18481,6.9492},
{5.11701,7.88459,6.01849,1.9618,1.46322,8.63393,2.5105,1.67927,3.07599,1.78958},
{2.10008,1.77671,7.93245,1.50394,3.32755,1.30562,7.06231,6.7039,6.34903,7.60064},
{2.92754,1.00749,2.94404,5.80374,1.30821,8.17304,8.31375,2.41585,3.13567,7.33828},
{7.84022,4.74497,1.36992,8.81067,1.65879,5.58947,9.10298,3.49474,5.89289,5.85728},
{6.62016,8.43635,5.2258,8.63033,6.89387,1.59494,9.54716,5.48696,2.54802,9.01327},
{3.88758,5.29697,6.66174,4.57665,9.20309,2.10679,5.2124,2.68084,5.99511,3.99681},
{6.01531,7.47711,5.49976,5.26295,1.57062,3.02637,4.01274,1.28618,7.44356,3.12344},
{1.15248,7.49225,8.52472,7.93388,9.93893,9.1816,6.97275,8.06498,1.17826,3.81146},
{8.80466,8.91166,3.01882,4.69316,7.56228,1.37498,6.72817,9.1065,3.94757,9.44107},
{3.14237,5.11243,1.47126,9.6162,3.59577,2.03934,2.1541,7.55236,9.95092,3.16601},
{5.51943,4.07922,9.14025,7.20252,9.08802,2.69073,3.15565,9.19537,7.2303,9.57201},
{6.01596,7.89663,1.33971,1.78814,6.55409,8.84658,1.28052,5.47159,9.79623,5.10406},
{8.89607,9.61697,6.89692,8.2907,6.93494,2.89237,1.8111,1.92869,3.08169,2.76406},
{6.62707,7.35426,8.93662,2.92635,9.24068,6.49308,3.70833,3.73015,1.38415,1.13783},
{6.37627,6.65514,8.85682,3.77527,5.02802,2.19814,1.97808,8.92697,2.93413,1.45497},
{8.38425,1.62498,2.00397,9.19424,9.46078,4.80461,7.15025,5.39331,8.73929,9.4535},
{3.98687,5.00046,8.25687,9.51317,8.13556,4.90664,3.44811,5.67087,8.20465,2.67559},
{6.71325,3.67432,4.81772,6.90863,5.81424,4.54617,8.58263,6.63477,8.03039,3.87284},
{5.38101,4.20142,4.21283,7.06481,2.93024,7.71304,1.28948,3.96031,7.07976,4.36207},
{5.16131,7.56485,9.06635,2.46122,4.47099,4.76873,7.8969,9.14187,6.82938,1.80247},
{4.25582,7.06884,7.68635,8.87378,9.53844,1.25459,3.80458,1.13762,1.80645,5.86898},
{8.00369,2.95275,3.02324,4.15921,8.51887,2.36172,8.00154,8.20524,8.82044,6.85372},
{1.37758,3.95203,7.67255,9.08414,6.28289,1.45073,1.79643,7.30452,1.24297,2.15854},
{9.36999,9.21552,8.83562,6.47016,1.02592,5.12128,7.48272,7.42168,3.91491,1.32587},
{2.87698,2.78475,8.56803,7.97861,2.53325,5.9611,2.0354,2.56333,8.30319,4.12622}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {258.909,355.277,429.434,765.591,268.561,208.412,692.717,445.416,394.353,114.015,798.727,340.254,426.38,77.6112,509.579,918.706,911.705,291.893,207.389,526.417,195.532,301.832,965.196,997.274,108.381,286.299,617.437,951.223,941.825,67.1477,609.668,600.949,425.379,237.573,19.8085,143.31,421.577,713.179,962.76,386.391,729.984,28.1999,707.188,487.595,270.307,374.028,20.6201,441.471,557.602,528.069};


static const std::vector<float> min_impressions = {34.8171,22.0392,47.8358,31.2745,36.0297,23.3341,20.0707,34.0333,35.4546,28.6881};


#endif
