#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{2.27682,9.0909,1.5074,3.64645,4.08552,9.05485,9.84386,4.48465,6.67104,5.68098,5.0132,2.37345,9.21162,9.32649,3.66486,3.47368,4.50331,6.60611,6.35329,3.45265},
{8.43517,6.90824,8.75153,7.59444,9.47132,4.70407,6.82046,7.16661,3.72563,4.97499,3.08033,9.01657,7.55409,5.47532,7.52536,4.64839,3.21423,9.75364,6.31371,6.6124},
{5.62353,2.77132,2.24091,8.61966,2.63635,9.43484,9.98928,9.45721,8.93067,3.14529,2.93951,3.20294,6.73663,2.09401,8.09276,7.20921,4.79719,1.56556,6.47368,5.5533},
{2.8668,9.97782,3.63429,3.74843,5.40411,6.74963,2.48319,5.28611,5.70521,3.76979,1.21586,2.69015,3.42621,3.50067,5.29231,9.6029,6.90075,1.70276,8.36808,3.86526},
{6.19159,8.84138,6.4447,4.03162,4.08262,9.37004,9.0512,6.45258,2.75736,9.02073,2.10164,5.01366,2.40231,7.0704,7.11005,4.4702,8.09404,4.14061,7.77006,4.19702},
{4.67579,3.40709,9.75953,6.69293,4.42447,5.04999,2.28611,7.23168,8.33645,3.27447,1.70257,4.02214,4.73662,9.05424,4.22771,4.5426,1.61163,2.82387,9.39882,8.34108},
{3.69674,6.75216,6.07043,8.36382,7.05902,6.4361,2.65599,2.00824,6.11542,8.37406,9.17193,4.19799,1.36188,9.57333,9.15281,9.39025,2.74024,6.64206,1.97605,7.0988},
{1.01253,5.49114,9.59875,3.82564,6.37076,7.77981,8.87374,6.66459,7.43189,2.94417,6.52889,2.80324,8.50128,2.75611,1.00692,7.11773,5.16732,4.43165,1.57468,3.54344},
{9.37352,3.70602,9.064,3.29436,1.77249,1.4179,4.19873,4.86756,4.14379,3.27661,6.65616,1.26065,4.44825,5.79371,4.38065,1.49138,5.9405,1.48138,1.90512,2.08803},
{3.68944,6.60449,5.07489,4.32284,3.27296,8.75683,3.68052,7.34697,5.81011,5.92096,7.5061,8.64247,1.5982,2.031,3.11889,9.09018,6.29163,1.47915,9.00436,7.01886},
{1.92724,7.57661,8.11752,3.95657,4.50403,2.14173,2.651,9.18102,2.71466,1.87171,9.02203,2.89692,4.17485,9.82563,6.32709,4.63488,9.84083,5.38436,2.55153,4.31468},
{6.62793,1.41126,2.88503,5.36531,6.47569,6.05475,4.40914,9.65601,4.56744,5.82646,7.82782,9.9898,9.58375,1.87694,6.6318,2.01017,8.96047,3.09303,8.72487,6.34544},
{6.11059,8.79784,9.53863,2.95683,5.79119,5.94657,6.38487,4.52555,1.19121,4.46101,3.75974,4.35098,7.84935,4.57456,7.0399,6.72126,9.55268,5.72976,9.60106,1.3492},
{1.5584,1.29191,1.51626,2.42637,3.00554,4.95969,3.55632,9.41875,5.50005,5.65304,7.67735,2.04636,6.56148,8.04645,1.63692,4.26045,3.54501,7.58571,6.12777,1.63735},
{6.84583,1.60203,6.36086,3.6336,1.40078,2.25494,9.91712,5.91191,5.55089,8.94743,9.19324,3.41644,5.07935,9.07275,4.79793,5.47952,8.14003,4.44565,8.02754,7.78687},
{7.49214,9.79206,4.05391,9.1048,7.7762,1.54955,8.40499,3.47714,6.19825,3.54924,4.60058,6.65586,8.23415,8.33012,7.3861,3.80474,2.33608,5.47669,5.76032,7.46878},
{6.56392,7.62809,1.86044,8.63564,3.53094,5.86522,2.67605,9.80235,2.40852,6.50508,4.32771,9.29965,1.56338,5.43649,4.66579,7.92048,4.08064,9.71611,7.41603,1.49382},
{6.88012,9.53058,2.41828,1.04942,5.63052,9.16333,1.11461,4.98861,9.30785,6.02302,4.3679,1.68286,4.31612,4.00707,7.99267,2.95543,3.69468,8.08807,8.14085,4.20832},
{3.2069,4.73144,9.36294,1.93796,4.7501,5.02711,8.70236,9.69737,9.83807,4.36128,5.67956,5.34666,2.404,2.52197,1.48283,2.03984,3.37558,9.95114,8.98697,9.01477},
{2.94949,1.23702,2.46094,3.04121,4.65866,9.65003,4.96701,6.8947,2.92902,3.6549,8.4505,4.17851,7.24365,2.36693,9.02532,8.83705,5.54966,1.81766,4.27148,2.99023},
{1.4182,5.27446,9.71489,6.99584,1.67436,6.57254,3.81478,7.07212,2.35258,9.73376,1.70429,7.23802,7.73923,6.44359,7.79875,8.9513,2.90509,3.29847,9.87537,3.77286},
{2.27695,3.24621,7.02131,3.05206,3.16322,5.45778,1.59967,6.24148,1.6801,7.7034,9.96154,6.66276,6.11904,2.16176,7.08012,9.64543,1.41593,3.4692,3.20567,9.44113},
{8.78476,6.91935,3.31671,2.16903,4.45981,4.55868,8.47243,9.6342,6.19799,3.00506,2.34351,6.56146,5.90445,1.86273,9.61057,6.05797,7.93773,6.24133,4.25583,2.70357},
{5.16411,8.4296,8.33314,7.74806,3.84675,4.7248,6.84624,6.68369,9.11406,7.97354,9.66708,6.64002,6.81481,4.69172,6.44607,9.63687,1.0212,4.36864,6.24027,4.88477},
{5.9831,2.7387,8.2693,6.96259,7.02632,2.79117,4.3043,4.50697,9.64824,2.82306,6.79597,6.56928,7.80633,3.37397,3.52978,5.28633,5.27167,6.86939,4.48323,6.49539},
{2.54127,2.2105,5.15263,4.12088,1.93935,7.89601,8.56128,9.20632,9.00365,5.76585,5.43596,1.91689,2.91967,2.9866,8.81919,4.42553,9.52106,6.371,1.71397,3.33522},
{4.79073,6.45984,2.31505,8.43177,8.38153,3.47314,1.12328,3.76796,2.62886,8.5242,5.97825,3.71127,8.98098,4.17279,2.82528,9.58371,3.46174,3.47471,1.74401,9.69845},
{4.89648,7.60638,2.01954,6.08547,9.70662,3.31133,5.34462,5.28849,5.48707,5.96941,5.31043,4.97406,3.4558,2.28015,9.22392,7.96721,2.08591,8.96075,2.96168,9.26619},
{3.24481,9.23155,2.28345,3.71999,1.95045,6.6466,2.54651,3.49952,8.71507,7.0671,3.28305,5.87432,4.01846,6.8743,2.87773,6.71279,1.37954,7.54466,3.30437,2.38747},
{7.79174,4.8313,2.60254,2.43053,1.84414,6.10572,4.05735,5.94772,7.24574,5.39797,4.96196,7.43373,3.55899,3.36464,6.54622,6.94064,8.44015,5.38633,5.3902,3.78862},
{2.49828,4.87542,8.40205,3.2385,1.01567,9.4,3.06003,1.30389,4.55954,2.76271,8.50993,9.73282,7.15751,8.56628,1.88562,4.96838,5.811,1.6683,5.3978,5.76604},
{8.34176,7.29707,8.26282,7.07355,6.68577,8.09293,5.71543,4.781,7.28839,2.00357,8.14987,4.52785,8.61155,5.15926,3.55445,3.60391,6.07162,9.61044,9.73915,4.04502},
{1.25217,7.13772,5.0124,1.41026,8.15016,3.927,6.60066,2.1998,7.67351,6.59297,7.26593,4.89359,8.9557,5.80432,9.87584,5.20286,8.87393,8.82161,6.08163,3.42141},
{1.75551,9.92444,5.0362,2.75418,5.97734,1.2284,2.52939,5.17641,9.52372,2.57934,4.87317,8.24743,4.68923,4.83333,4.52485,6.27381,2.87981,8.11505,8.83244,7.70881},
{7.62775,9.655,4.23437,5.1711,2.31031,8.65779,4.47429,2.33218,1.58536,2.15781,6.62263,7.91573,6.31381,1.73166,9.37757,1.89071,7.30172,9.43496,9.01097,1.77649},
{3.13204,8.18244,3.85294,2.4994,9.15221,9.30908,1.06505,5.88955,5.18509,1.98706,3.4319,4.14467,8.29362,1.17623,7.95469,5.01728,5.39755,9.52215,2.76268,9.89661},
{5.36263,1.58331,2.94667,1.11437,3.25386,3.34437,5.86643,2.05622,8.94771,2.54068,2.21378,9.69248,5.76906,3.21989,9.47113,6.73859,5.15538,1.29031,8.25597,8.19825},
{4.2299,9.24401,5.82894,9.25694,6.41699,9.90626,1.30291,4.8732,9.23642,9.47635,2.04531,4.66086,9.49301,3.31423,7.86066,6.0264,5.75389,3.45068,8.43447,8.274},
{8.98423,2.87315,5.26335,5.06646,1.58362,8.28236,2.06144,2.10151,1.5063,7.34094,4.73725,9.25864,2.73152,2.82446,2.57464,5.41808,2.46516,1.74042,8.50534,6.90299},
{3.80569,5.073,1.39941,9.46122,7.57028,4.7715,7.70736,3.04699,7.98223,2.7722,4.92088,2.74868,9.71219,1.485,8.39472,7.80152,5.09694,2.51096,1.01625,9.35535},
{4.35889,6.69252,4.2142,9.25511,3.97826,1.95096,9.10778,7.83431,6.93204,4.59211,9.93442,4.51532,7.20856,8.51581,7.70884,9.13605,1.14702,8.6623,7.79348,8.29158},
{3.11608,6.07605,6.45804,5.1099,2.28971,3.62552,6.89772,7.90649,5.80034,5.61388,6.92265,5.9682,1.77165,4.31349,6.88954,4.24958,8.35498,2.18189,5.27551,9.11322},
{6.81449,1.03768,5.95516,2.1005,5.35306,7.96879,7.42121,1.08219,1.67645,4.83316,8.00572,7.84229,1.70554,7.55644,8.55052,8.33942,5.16542,7.04281,9.47116,7.70932},
{8.54002,8.96254,9.76133,6.09329,1.1159,6.56836,4.88329,3.56921,7.89243,7.20114,7.63977,3.05261,7.06041,5.93218,3.99486,9.70634,3.32817,3.32062,9.9987,7.95066},
{6.38936,4.09911,4.33929,3.4411,9.95566,8.84356,2.16698,7.09486,1.21035,3.87952,7.42344,8.6229,3.46316,7.82083,2.97599,6.45837,8.45644,1.07378,6.69769,1.24825},
{4.23326,1.66963,2.97153,4.76902,6.38822,1.92414,4.45547,8.12532,4.42123,9.31947,5.22699,7.19285,6.36144,3.26532,5.71618,9.4206,6.44095,4.16634,1.53545,2.77203},
{4.48741,7.04277,3.59499,3.46164,2.6787,2.64971,8.69709,9.14184,3.58992,6.52216,9.62059,6.22202,1.61222,4.77298,4.51977,1.1109,6.20321,6.90022,2.93565,8.74934},
{1.98156,6.75985,2.83094,3.61862,5.55616,7.45673,1.14771,1.03215,3.4125,8.74291,2.78318,6.63963,1.19951,9.08555,5.40993,6.16659,2.64502,6.87941,3.53524,4.00366},
{4.69075,8.10015,3.53638,2.87708,9.07824,3.91957,2.00703,7.95785,9.08071,1.41182,8.05408,3.02589,9.35336,5.50656,5.01211,4.41766,4.14696,2.44374,4.14958,9.20967},
{9.82562,7.05468,7.71005,6.58487,3.64852,4.45892,9.74662,3.32674,9.27099,6.90812,4.96821,6.91862,5.48811,5.38988,4.91631,6.81531,2.80709,5.95787,5.97127,6.14743}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {663.537,640.98,535.952,485.155,44.1293,464.11,810.054,986.916,447.372,317.836,104.361,607.25,82.1475,310.76,558.244,669.999,965.512,137.987,866.158,819.687,312.474,843.18,205.957,978.193,43.6023,108.109,667.174,616.182,11.647,675.196,482.36,432.078,934.631,317.474,15.2805,543.519,436.978,513.095,354.783,811.333,453.532,532.822,847.581,993.848,629.416,103.332,745.952,637.551,389.481,291.587};


static const std::vector<float> min_impressions = {45.7737,41.81,26.7317,21.9698,24.3802,30.4857,46.7186,40.2247,26.2609,22.1808,38.867,27.3348,27.4158,35.0375,30.7802,28.3656,30.9762,45.8201,36.6411,45.8171};


#endif
