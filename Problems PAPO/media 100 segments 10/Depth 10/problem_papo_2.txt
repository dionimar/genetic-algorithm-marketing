#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(events[94], events[12]),events[48]),events[84]),events[63]),events[3]),events[15]),events[2]),events[88]),events[26]),events[6]),cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(events[30], events[17]),events[60]),events[44]),events[63]),events[92]),events[39]),events[11]),events[28]),events[29]),events[3]),cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(events[87], events[0]),events[46]),events[27]),events[1]),events[94]),events[76]),events[49]),events[85]),events[31]),events[44]),cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(events[51], events[40]),events[38]),events[32]),events[49]),events[41]),events[45]),events[94]),events[15]),events[18]),events[65]),cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(events[95], events[30]),events[5]),events[3]),events[13]),events[36]),events[98]),events[39]),events[92]),events[27]),events[82]),cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(events[35], events[46]),events[95]),events[50]),events[19]),events[39]),events[43]),events[94]),events[86]),events[34]),events[89]),cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(events[59], events[38]),events[57]),events[0]),events[46]),events[15]),events[27]),events[69]),events[9]),events[74]),events[79]),cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(events[8], events[66]),events[9]),events[73]),events[0]),events[55]),events[61]),events[14]),events[63]),events[75]),events[20]),cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(events[63], events[5]),events[84]),events[62]),events[41]),events[76]),events[89]),events[34]),events[45]),events[26]),events[86]),cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(events[11], events[73]),events[15]),events[77]),events[21]),events[51]),events[53]),events[33]),events[93]),events[58]),events[43])};


static const std::vector< std::vector<float> > prob = {{0.761806, 0.532802, 0.334162, 0.784715, 0.203628, 0.428977, 0.209886, 0.354098, 0.00362203, 0.463561, 0.595858, 0.1399, 0.491515, 0.0151289, 0.0344549, 0.274804, 0.983927, 0.696527, 0.607429, 0.677183, 0.711822, 0.210264, 0.801272, 0.695912, 0.682145, 0.0238008, 0.349917, 0.830394, 0.862807, 0.124903, 0.565492, 0.868482, 0.907304, 0.583529, 0.660568, 0.919143, 0.612569, 0.419891, 0.886153, 0.923812, 0.978272, 0.95987, 0.114213, 0.114755, 0.0450206, 0.711034, 0.573766, 0.0951546, 0.534122, 0.884029, 0.597867, 0.431498, 0.647336, 0.213846, 0.452605, 0.317603, 0.516337, 0.0482125, 0.61102, 0.378168, 0.338565, 0.398499, 0.722751, 0.265916, 0.494395, 0.684232, 0.680026, 0.132506, 0.779688, 0.690843, 0.610265, 0.843849, 0.636574, 0.658189, 0.318792, 0.0771412, 0.0324554, 0.141243, 0.86924, 0.846953, 0.322819, 0.94607, 0.761545, 0.254139, 0.744277, 0.988928, 0.687405, 0.425612, 0.862865, 0.244878, 0.503319, 0.519023, 0.826819, 0.954219, 0.302057, 0.200833, 0.190436, 0.885109, 0.0885448, 0.596671},
{0.333415, 0.3795, 0.864198, 0.852989, 0.389002, 0.763683, 0.393545, 0.0768369, 0.833035, 0.253619, 0.386976, 0.646163, 0.810634, 0.79006, 0.185978, 0.938136, 0.22141, 0.381417, 0.880393, 0.773375, 0.515728, 0.176571, 0.753858, 0.981705, 0.28993, 0.272937, 0.159596, 0.235214, 0.845751, 0.129457, 0.252334, 0.721945, 0.107226, 0.978176, 0.986005, 0.61943, 0.10044, 0.164143, 0.499914, 0.110049, 0.604526, 0.0307021, 0.355874, 0.717372, 0.605621, 0.458644, 0.400121, 0.412544, 0.687619, 0.270108, 0.532429, 0.824055, 0.33084, 0.935942, 0.795487, 0.106451, 0.0689734, 0.477694, 0.123738, 0.813967, 0.358081, 0.0317506, 0.795912, 0.366685, 0.216498, 0.49488, 0.934502, 0.00155185, 0.0053157, 0.50891, 0.835082, 0.323384, 0.0279947, 0.940675, 0.201241, 0.331418, 0.0918722, 0.9958, 0.0464728, 0.818742, 0.013817, 0.407106, 0.118667, 0.642119, 0.16157, 0.108183, 0.909636, 0.081104, 0.766619, 0.106167, 0.803241, 0.140754, 0.195351, 0.297929, 0.767289, 0.131634, 0.131939, 0.723762, 0.588006, 0.438207},
{0.590598, 0.180364, 0.984067, 0.277801, 0.857955, 0.139239, 0.579803, 0.97292, 0.260431, 0.162583, 0.486882, 0.703531, 0.141245, 0.68744, 0.807274, 0.00997244, 0.565891, 0.782441, 0.0625469, 0.935554, 0.749905, 0.905548, 0.370804, 0.600254, 0.172762, 0.551103, 0.386836, 0.609698, 0.849954, 0.316659, 0.743632, 0.58718, 0.912713, 0.461352, 0.766459, 0.25491, 0.105202, 0.950778, 0.939678, 0.69095, 0.0200413, 0.868156, 0.731164, 0.983943, 0.584154, 0.838819, 0.0118154, 0.490308, 0.667928, 0.630212, 0.872957, 0.719269, 0.159713, 0.0187736, 0.047988, 0.492038, 0.943215, 0.937464, 0.229606, 0.284775, 0.720263, 0.528783, 0.0311347, 0.0901889, 0.284639, 0.280319, 0.867065, 0.170336, 0.0634748, 0.975612, 0.026979, 0.809804, 0.686725, 0.760991, 0.3934, 0.439417, 0.921269, 0.139354, 0.585422, 0.969266, 0.453116, 0.961808, 0.39989, 0.789871, 0.840628, 0.568905, 0.913737, 0.643921, 0.0148216, 0.515481, 0.288423, 0.0434168, 0.207007, 0.641248, 0.823331, 0.0786252, 0.646062, 0.387066, 0.442555, 0.511468},
{0.80238, 0.427201, 0.846211, 0.994192, 0.825008, 0.0517533, 0.321455, 0.743865, 0.978188, 0.204416, 0.15396, 0.242432, 0.665052, 0.941811, 0.917258, 0.240508, 0.274078, 0.340842, 0.916306, 0.099392, 0.0486417, 0.52409, 0.576237, 0.921581, 0.237409, 0.464443, 0.394792, 0.8871, 0.191336, 0.655798, 0.119121, 0.728472, 0.0523391, 0.599751, 0.722894, 0.591781, 0.379951, 0.246445, 0.332218, 0.299704, 0.438484, 0.731722, 0.354519, 0.0080612, 0.937769, 0.467108, 0.940563, 0.770204, 0.820572, 0.983905, 0.953363, 0.71973, 0.237499, 0.124385, 0.622781, 0.576968, 0.455934, 0.978683, 0.26814, 0.732221, 0.28242, 0.593713, 0.359496, 0.929605, 0.997536, 0.809779, 0.66842, 0.413589, 0.531142, 0.340509, 0.750244, 0.777734, 0.398137, 0.431554, 0.0344803, 0.137885, 0.404812, 0.216821, 0.171073, 0.0415612, 0.163901, 0.863144, 0.115992, 0.0349245, 0.428177, 0.704955, 0.143584, 0.114157, 0.545224, 0.28444, 0.763814, 0.521984, 0.573535, 0.926317, 0.575954, 0.749694, 0.20869, 0.219228, 0.198197, 0.617873},
{0.273387, 0.288563, 0.20094, 0.183149, 0.227096, 0.529916, 0.453082, 0.35082, 0.991962, 0.500069, 0.0326343, 0.0534442, 0.571575, 0.525114, 0.82021, 0.880275, 0.0632643, 0.464803, 0.209114, 0.789297, 0.571561, 0.949592, 0.171442, 0.962903, 0.181675, 0.949414, 0.48577, 0.0126797, 0.641146, 0.407416, 0.331299, 0.356702, 0.871207, 0.419666, 0.853652, 0.791202, 0.518183, 0.244552, 0.0150844, 0.212839, 0.505258, 0.0384797, 0.619377, 0.759764, 0.449662, 0.286935, 0.842627, 0.483042, 0.440506, 0.443534, 0.896778, 0.314837, 0.0203857, 0.480672, 0.315719, 0.149548, 0.279656, 0.295278, 0.943244, 0.843174, 0.0391613, 0.971931, 0.0782771, 0.475989, 0.423192, 0.835267, 0.30123, 0.224061, 0.883717, 0.560207, 0.541604, 0.845333, 0.734478, 0.283622, 0.70434, 0.03283, 0.367496, 0.444861, 0.570064, 0.955332, 0.645961, 0.659037, 0.0588166, 0.351645, 0.89679, 0.220534, 0.932081, 0.655395, 0.698047, 0.891362, 0.771554, 0.0137202, 0.374562, 0.392449, 0.94834, 0.847753, 0.703011, 0.485698, 0.770715, 0.589777},
{0.987896, 0.975058, 0.551948, 0.126515, 0.819817, 0.735044, 0.397542, 0.875576, 0.047054, 0.182285, 0.842348, 0.28201, 0.91644, 0.271477, 0.544558, 0.406882, 0.244189, 0.366235, 0.906264, 0.764614, 0.488477, 0.859182, 0.864688, 0.316946, 0.750629, 0.521575, 0.506561, 0.500427, 0.754937, 0.606321, 0.532671, 0.693483, 0.710043, 0.420723, 0.375879, 0.328303, 0.432819, 0.208828, 0.223952, 0.627337, 0.278415, 0.965962, 0.963386, 0.768068, 0.709041, 0.558525, 0.985199, 0.590865, 0.122682, 0.0311628, 0.131067, 0.890328, 0.39656, 0.910838, 0.80723, 0.395963, 0.33733, 0.87963, 0.713608, 0.75283, 0.67288, 0.01864, 0.89674, 0.146473, 0.446122, 0.493326, 0.381838, 0.0692676, 0.39393, 0.062525, 0.67197, 0.0487921, 0.802258, 0.62711, 0.620434, 0.578959, 0.928079, 0.373993, 0.140111, 0.355166, 0.671342, 0.955103, 0.434185, 0.901037, 0.775653, 0.423773, 0.374697, 0.388835, 0.765811, 0.723185, 0.507466, 0.556055, 0.939987, 0.519151, 0.237884, 0.853242, 0.865704, 0.891362, 0.358967, 0.554169},
{0.465216, 0.779764, 0.377934, 0.590778, 0.730195, 0.40019, 0.683935, 0.143805, 0.827326, 0.853845, 0.984034, 0.128633, 0.391376, 0.385074, 0.217396, 0.0879096, 0.164579, 0.489576, 0.489248, 0.9428, 0.175047, 0.184181, 0.269746, 0.678676, 0.970169, 0.21371, 0.417718, 0.83113, 0.235594, 0.436856, 0.834948, 0.118659, 0.0179445, 0.0585961, 0.919277, 0.216711, 0.270201, 0.00164606, 0.252323, 0.676679, 0.996328, 0.817841, 0.748979, 0.882849, 0.573258, 0.587504, 0.130008, 0.404826, 0.621762, 0.730558, 0.99588, 0.690328, 0.139257, 0.163886, 0.311044, 0.996802, 0.2434, 0.536061, 0.866396, 0.0943111, 0.326683, 0.241072, 0.375151, 0.795063, 0.218191, 0.645392, 0.751819, 0.427272, 0.526365, 0.678435, 0.244812, 0.482992, 0.718113, 0.0278042, 0.29677, 0.686747, 0.720729, 0.908483, 0.253836, 0.273408, 0.345436, 0.656123, 0.307319, 0.798892, 0.4367, 0.201269, 0.719839, 0.919749, 0.932343, 0.88912, 0.504383, 0.638825, 0.0405005, 0.340511, 0.75002, 0.413476, 0.910551, 0.39728, 0.751919, 0.450502},
{0.468771, 0.982898, 0.96777, 0.742971, 0.176336, 0.378421, 0.35471, 0.0773755, 0.116292, 0.240509, 0.823787, 0.0366828, 0.953573, 0.590548, 0.166361, 0.3764, 0.441517, 0.745009, 0.963835, 0.767318, 0.0122718, 0.447371, 0.733057, 0.0873691, 0.79351, 0.641679, 0.282901, 0.518082, 0.933394, 0.210153, 0.380877, 0.333286, 0.0189888, 0.541188, 0.0939229, 0.603565, 0.340814, 0.0503384, 0.0479794, 0.825482, 0.854745, 0.00610043, 0.693794, 0.663622, 0.988721, 0.444804, 0.533099, 0.123572, 0.0438227, 0.400189, 0.0973802, 0.429582, 0.790225, 0.949711, 0.254499, 0.222155, 0.0818194, 0.945627, 0.412903, 0.150949, 0.0465566, 0.0175953, 0.0729929, 0.194304, 0.594784, 0.58255, 0.893157, 0.833724, 0.675524, 0.438935, 0.06285, 0.441844, 0.0807704, 0.0422475, 0.871348, 0.724755, 0.628651, 0.325925, 0.232882, 0.397674, 0.934847, 0.131272, 0.637583, 0.747733, 0.287989, 0.737152, 0.25665, 0.354465, 0.998138, 0.708521, 0.234096, 0.0431989, 0.034821, 0.543304, 0.734618, 0.6861, 0.741711, 0.400008, 0.10737, 0.921932},
{0.929816, 0.309529, 0.890056, 0.2637, 0.0396832, 0.126711, 0.497034, 0.903758, 0.770687, 0.948399, 0.673192, 0.792693, 0.427556, 0.98441, 0.060203, 0.810276, 0.924425, 0.457136, 0.200543, 0.540102, 0.349352, 0.676803, 0.0778078, 0.223613, 0.164828, 0.842942, 0.407568, 0.765044, 0.153487, 0.787942, 0.67317, 0.308259, 0.989189, 0.352577, 0.579268, 0.286318, 0.202892, 0.389525, 0.335529, 0.0567849, 0.0119739, 0.527098, 0.729054, 0.492068, 0.908436, 0.143136, 0.00963903, 0.678685, 0.596886, 0.156244, 0.91972, 0.76425, 0.231602, 0.927602, 0.383847, 0.485205, 0.972827, 0.204474, 0.505222, 0.114352, 0.269287, 0.217627, 0.222923, 0.847497, 0.924108, 0.159105, 0.0323805, 0.331416, 0.0227335, 0.539807, 0.0512929, 0.919023, 0.97559, 0.970559, 0.334407, 0.114644, 0.46994, 0.240157, 0.0273955, 0.146758, 0.543513, 0.545676, 0.971889, 0.769216, 0.384326, 0.274792, 0.0981744, 0.00310491, 0.0350275, 0.802551, 0.482675, 0.199967, 0.0114461, 0.453973, 0.868836, 0.0869344, 0.803352, 0.76231, 0.418807, 0.463096},
{0.511248, 0.661001, 0.173611, 0.875071, 0.900262, 0.914362, 0.575153, 0.294612, 0.829414, 0.410534, 0.410026, 0.767936, 0.378441, 0.0977337, 0.0350425, 0.699747, 0.666491, 0.218142, 0.560843, 0.281368, 0.820235, 0.267433, 0.161617, 0.137305, 0.722093, 0.957364, 0.73028, 0.385508, 0.172325, 0.72132, 0.336422, 0.690043, 0.123608, 0.42998, 0.255312, 0.105308, 0.71228, 0.127328, 0.292411, 0.0938755, 0.255089, 0.862515, 0.31116, 0.481227, 0.276373, 0.264405, 0.64599, 0.333355, 0.115876, 0.51125, 0.167404, 0.425137, 0.287665, 0.444581, 0.710248, 0.762938, 0.588591, 0.196084, 0.420048, 0.264701, 0.792271, 0.487885, 0.518382, 0.801611, 0.900453, 0.701996, 0.221305, 0.168947, 0.99768, 0.623335, 0.0906953, 0.605833, 0.212409, 0.397785, 0.155337, 0.395471, 0.539685, 0.65232, 0.816634, 0.275113, 0.694671, 0.0113519, 0.899227, 0.281162, 0.778274, 0.186023, 0.592046, 0.839893, 0.854905, 0.271833, 0.771682, 0.193623, 0.835458, 0.532177, 0.105384, 0.874941, 0.706687, 0.937942, 0.0202098, 0.125439},
};

static const std::vector<float> costs = {653.156, 985.967, 234.383, 493.261, 520.147, 370.916, 355.028, 935.245, 393.801, 916.492, 893.025, 802.619, 699.812, 137.822, 916.105, 405.359, 973.744, 892.082, 212.77, 858.52, 241.87, 984.5, 213.905, 74.613, 52.7203, 725.119, 822.101, 40.2601, 256.487, 444.857, 840.841, 830.835, 829.643, 264.481, 381.128, 995.899, 215.807, 581.71, 120.334, 6.11984, 372.403, 17.9363, 920.913, 541.283, 767.949, 661.967, 312.848, 795.342, 807.711, 438.709, 191.721, 3.73401, 329.221, 826.415, 467.645, 311.285, 438.075, 447.59, 700.864, 862.215, 179.95, 867.646, 294.658, 473.119, 460.317, 60.254, 497.088, 253.721, 980.211, 721.293, 660.985, 165.814, 72.4697, 238.272, 948.039, 693.091, 757.413, 202.188, 363.932, 166.776, 372.901, 615.144, 823.703, 672.375, 96.9051, 29.3273, 91.212, 783.724, 806.147, 641.281, 284.543, 75.9985, 914.105, 560.215, 158.739, 719.219, 94.8521, 752.965, 349.903, 472.34};

static const std::vector<float> min_impressions = {0.844577, 0.930294, 0.483005, 0.0175236, 0.0221013, 0.720579, 0.155485, 0.375298, 0.460084, 0.380945};

//
#endif
