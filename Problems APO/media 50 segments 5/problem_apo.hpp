#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 5;

static const std::vector<std::vector<float>> restr_rep{
    {7, 3, 4, 9, 6},   {5, 2, 9, 9, 4},   {9, 9, 8, 9, 4},   {2, 3, 10, 5, 5},
    {6, 2, 8, 5, 3},   {10, 4, 5, 1, 8},  {5, 5, 7, 2, 3},   {3, 6, 10, 2, 2},
    {10, 8, 2, 10, 6}, {4, 2, 10, 4, 7},  {9, 2, 4, 2, 5},   {2, 3, 2, 9, 8},
    {9, 3, 5, 3, 10},  {5, 7, 10, 2, 3},  {2, 6, 5, 7, 7},   {9, 5, 1, 4, 8},
    {6, 10, 6, 1, 8},  {8, 6, 2, 3, 2},   {5, 8, 4, 6, 8},   {9, 1, 8, 8, 8},
    {5, 8, 8, 9, 1},   {10, 6, 2, 2, 6},  {4, 4, 10, 5, 10}, {5, 3, 1, 10, 3},
    {6, 4, 1, 4, 3},   {9, 2, 3, 5, 2},   {7, 7, 7, 3, 9},   {6, 6, 5, 2, 9},
    {7, 9, 9, 5, 10},  {7, 1, 7, 3, 5},   {3, 2, 7, 8, 6},   {1, 9, 5, 4, 10},
    {9, 8, 6, 4, 6},   {4, 1, 10, 8, 1},  {6, 5, 2, 5, 4},   {4, 3, 10, 1, 4},
    {8, 3, 2, 1, 7},   {5, 5, 2, 9, 6},   {6, 3, 8, 8, 9},   {10, 5, 10, 10, 5},
    {10, 4, 2, 4, 7},  {5, 8, 6, 8, 1},   {8, 8, 3, 3, 5},   {7, 5, 1, 8, 9},
    {6, 5, 4, 10, 7},  {8, 10, 9, 10, 4}, {1, 8, 1, 8, 10},  {8, 9, 7, 5, 2},
    {3, 3, 10, 3, 1},  {5, 1, 8, 10, 9}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {
    26,  159, 979, 134, 527, 568, 526, 807, 146, 773, 689, 510, 51,
    449, 846, 645, 118, 146, 684, 732, 861, 741, 832, 452, 515, 851,
    441, 129, 700, 9,   430, 890, 395, 359, 3,   331, 810, 401, 478,
    455, 893, 779, 991, 586, 396, 435, 268, 722, 284, 191};

static const std::vector<float> min_impressions = {38, 33, 15, 16, 47};

#endif
