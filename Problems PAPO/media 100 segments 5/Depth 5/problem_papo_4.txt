#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[48], events[7]),events[81]),events[97]),events[20]),events[85]),cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(events[45], events[2]),events[73]),events[55]),events[26]),events[21]),cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(events[95], events[47]),events[26]),events[58]),events[54]),events[85]),cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(events[42], events[62]),events[3]),events[57]),events[18]),events[40]),cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(events[38], events[61]),events[43]),events[44]),events[98]),events[13])};


static const std::vector< std::vector<float> > prob = {{0.336509, 0.540075, 0.367737, 0.226527, 0.812942, 0.565826, 0.0811004, 0.63904, 0.616428, 0.0882422, 0.65613, 0.511095, 0.171156, 0.396588, 0.196972, 0.470829, 0.984205, 0.394351, 0.649676, 0.561744, 0.246562, 0.341935, 0.71763, 0.474525, 0.0735142, 0.445042, 0.170036, 0.0987349, 0.558461, 0.569857, 0.892271, 0.680447, 0.708751, 0.910898, 0.0533048, 0.108115, 0.288413, 0.913873, 0.606272, 0.283947, 0.347345, 0.365553, 0.326855, 0.381017, 0.79492, 0.550349, 0.631611, 0.926408, 0.620839, 0.106958, 0.44702, 0.563199, 0.243925, 0.339019, 0.864268, 0.445825, 0.0774858, 0.0970013, 0.193871, 0.332546, 0.0956218, 0.526514, 0.311325, 0.602225, 0.888273, 0.0889636, 0.749638, 0.477626, 0.067001, 0.717209, 0.455301, 0.276035, 0.734758, 0.80424, 0.014402, 0.909127, 0.516926, 0.610337, 0.804883, 0.90114, 0.179148, 0.684631, 0.504237, 0.989587, 0.785358, 0.126102, 0.180481, 0.164514, 0.657192, 0.205802, 0.125751, 0.855029, 0.300368, 0.483872, 0.698407, 0.428975, 0.188161, 0.794738, 0.446929, 0.22819},
{0.622663, 0.531621, 0.896451, 0.577632, 0.735764, 0.959901, 0.948286, 0.577649, 0.433182, 0.752513, 0.349897, 0.410911, 0.280986, 0.540158, 0.363771, 0.433872, 0.469636, 0.959506, 0.478861, 0.744702, 0.846464, 0.52137, 0.251093, 0.255172, 0.202564, 0.345417, 0.263659, 0.45865, 0.177615, 0.535529, 0.61209, 0.625239, 0.38543, 0.466121, 0.784508, 0.544847, 0.725015, 0.0723334, 0.324466, 0.773143, 0.964535, 0.175125, 0.468541, 0.865006, 0.857627, 0.902599, 0.584655, 0.179484, 0.0132049, 0.357414, 0.708392, 0.803463, 0.460375, 0.493019, 0.507554, 0.392998, 0.651156, 0.848016, 0.137921, 0.780799, 0.312517, 0.184031, 0.682622, 0.501853, 0.0796556, 0.174037, 0.516895, 0.693456, 0.653146, 0.711147, 0.281709, 0.690618, 0.850821, 0.482237, 0.548151, 0.537484, 0.869032, 0.0822323, 0.616365, 0.0698363, 0.172175, 0.196131, 0.793748, 0.774086, 0.436489, 0.981672, 0.116721, 0.189183, 0.735244, 0.101017, 0.628607, 0.91349, 0.217814, 0.325547, 0.438028, 0.284129, 0.626429, 0.38905, 0.201869, 0.851477},
{0.775224, 0.171406, 0.626735, 0.0666366, 0.616326, 0.761444, 0.615156, 0.991186, 0.507693, 0.865981, 0.833616, 0.337029, 0.837849, 0.875728, 0.183338, 0.491753, 0.275631, 0.994982, 0.564739, 0.37749, 0.0489501, 0.454025, 0.934288, 0.16463, 0.18028, 0.975657, 0.977143, 0.968656, 0.00965104, 0.586023, 0.516975, 0.802547, 0.454471, 0.892321, 0.750401, 0.568367, 0.637752, 0.965705, 0.473242, 0.771169, 0.654853, 0.611854, 0.818654, 0.806832, 0.686029, 0.216602, 0.0642872, 0.161634, 0.375625, 0.26255, 0.237148, 0.947287, 0.34405, 0.825333, 0.00822108, 0.568675, 0.500091, 0.293597, 0.636874, 0.393043, 0.359126, 0.606836, 0.664342, 0.46596, 0.0800563, 0.686072, 0.91825, 0.503889, 0.228797, 0.273726, 0.186138, 0.144555, 0.272942, 0.717181, 0.862621, 0.752237, 0.313187, 0.462195, 0.533602, 0.187182, 0.147972, 0.163144, 0.930934, 0.679016, 0.471535, 0.663426, 0.0623646, 0.794975, 0.886044, 0.262566, 0.00509435, 0.703202, 0.89301, 0.671474, 0.919966, 0.754494, 0.199181, 0.233621, 0.328362, 0.334792},
{0.405251, 0.407582, 0.0326823, 0.283983, 0.73807, 0.73526, 0.459763, 0.0754152, 0.346448, 0.378923, 0.853022, 0.402222, 0.645026, 0.812974, 0.0706663, 0.471324, 0.496606, 0.466771, 0.524392, 0.47678, 0.271838, 0.457598, 0.610034, 0.30385, 0.254908, 0.158727, 0.987368, 0.926411, 0.885328, 0.558093, 0.613135, 0.98965, 0.462962, 0.888607, 0.367385, 0.271324, 0.0678929, 0.0969006, 0.163088, 0.409988, 0.952264, 0.670905, 0.181314, 0.662029, 0.985027, 0.434618, 0.876526, 0.669654, 0.489359, 0.0931783, 0.388461, 0.917083, 0.973904, 0.0216155, 0.144656, 0.483769, 0.914321, 0.890829, 0.82607, 0.249583, 0.9035, 0.095015, 0.645315, 0.651816, 0.500993, 0.709971, 0.805092, 0.351379, 0.993113, 0.989848, 0.128266, 0.313375, 0.252593, 0.12781, 0.789381, 0.525304, 0.110273, 0.390025, 0.781606, 0.155552, 0.0944887, 0.088959, 0.912696, 0.0775102, 0.548549, 0.392032, 0.868169, 0.547559, 0.323693, 0.805058, 0.992432, 0.750946, 0.0641949, 0.230067, 0.090096, 0.370992, 0.247362, 0.17778, 0.656965, 0.291239},
{0.577619, 0.697086, 0.503862, 0.674626, 0.113747, 0.382015, 0.0316581, 0.911324, 0.0933078, 0.00211123, 0.70455, 0.986203, 0.688247, 0.129635, 0.324401, 0.638191, 0.720271, 0.762139, 0.0846334, 0.719087, 0.779176, 0.721511, 0.463143, 0.44518, 0.465702, 0.831111, 0.0225985, 0.791112, 0.321414, 0.755914, 0.408903, 0.222326, 0.699966, 0.33269, 0.798242, 0.701841, 0.221473, 0.547331, 0.793112, 0.514802, 0.910991, 0.0348135, 0.447041, 0.552125, 0.448911, 0.378495, 0.471859, 0.821383, 0.0544093, 0.213275, 0.48975, 0.308899, 0.0413062, 0.880813, 0.440845, 0.871391, 0.858522, 0.591455, 0.0606826, 0.582569, 0.0754542, 0.36433, 0.423977, 0.192387, 0.675973, 0.293255, 0.0777692, 0.481, 0.838834, 0.81694, 0.0280214, 0.858691, 0.1009, 0.901115, 0.394262, 0.337147, 0.646354, 0.771929, 0.0252179, 0.280732, 0.184419, 0.412178, 0.900217, 0.695483, 0.261178, 0.351856, 0.464365, 0.904377, 0.872831, 0.897017, 0.880313, 0.582729, 0.377271, 0.0946758, 0.213142, 0.0331932, 0.0161135, 0.684176, 0.069385, 0.932014},
};

static const std::vector<float> costs = {354.836, 379.517, 269.972, 75.6125, 969.205, 717.815, 937.931, 849.812, 963.074, 80.6727, 136.961, 444.555, 11.2256, 396.373, 36.2764, 446.233, 738.54, 531.291, 903.641, 892.447, 770.608, 658.761, 990.744, 384.454, 728.741, 702.497, 327.781, 367.306, 326.535, 62.6212, 435.1, 519.363, 760.158, 62.8969, 288.177, 276.391, 682.742, 524.047, 258.227, 346.075, 74.6452, 964.525, 507.348, 618.157, 18.6651, 71.7602, 702.091, 855.907, 638.556, 229.305, 178.016, 271.392, 381.232, 344.425, 841.331, 732.894, 193.073, 807.192, 607.908, 461.886, 501.197, 933.413, 871.088, 163.039, 1.03975, 266.187, 87.2696, 932.86, 136.585, 749.739, 633.25, 563.022, 244.092, 998.581, 366.953, 199.583, 218.826, 73.8775, 776.472, 559.617, 25.6483, 979.877, 746.802, 385.217, 425.566, 572.878, 126.32, 739.39, 491.424, 953.043, 373.442, 886.274, 701.78, 960.947, 758.46, 169.627, 758.576, 944.824, 455.352, 852.509};

static const std::vector<float> min_impressions = {0.092917, 0.191241, 0.649602, 0.535523, 0.389471};

//
#endif
