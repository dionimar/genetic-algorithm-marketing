#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[0], events[17]),events[30]),events[77]),events[12]),events[64]),events[37]),events[56]),events[28]),events[31]),events[49]),cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(events[54], events[93]),events[91]),events[67]),events[96]),events[12]),events[10]),events[19]),events[26]),events[61]),events[15]),cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(events[98], events[34]),events[19]),events[39]),events[66]),events[54]),events[31]),events[90]),events[25]),events[21]),events[95]),cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(events[5], events[35]),events[37]),events[87]),events[79]),events[30]),events[3]),events[65]),events[63]),events[4]),events[10]),cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[24], events[83]),events[14]),events[77]),events[6]),events[68]),events[59]),events[44]),events[65]),events[28]),events[2]),cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(events[57], events[47]),events[99]),events[13]),events[90]),events[40]),events[46]),events[37]),events[48]),events[55]),events[43]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(events[53], events[24]),events[90]),events[44]),events[16]),events[17]),events[3]),events[64]),events[0]),events[12]),events[32]),cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(events[49], events[43]),events[97]),events[66]),events[2]),events[81]),events[10]),events[25]),events[15]),events[60]),events[4]),cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(events[50], events[13]),events[69]),events[49]),events[45]),events[89]),events[65]),events[31]),events[76]),events[53]),events[15]),cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(events[48], events[39]),events[3]),events[33]),events[84]),events[78]),events[11]),events[5]),events[87]),events[35]),events[62])};


static const std::vector< std::vector<float> > prob = {{0.230543, 0.368143, 0.882713, 0.663444, 0.148408, 0.688862, 0.506787, 0.679825, 0.0874459, 0.700727, 0.0363802, 0.70477, 0.624649, 0.105856, 0.33784, 0.114007, 0.766544, 0.674126, 0.0251957, 0.0629821, 0.757524, 0.502414, 0.487147, 0.120928, 0.540509, 0.0636969, 0.451718, 0.288125, 0.286721, 0.389981, 0.989974, 0.963993, 0.527888, 0.605615, 0.13206, 0.847442, 0.508027, 0.481522, 0.405028, 0.0617348, 0.215651, 0.59845, 0.865497, 0.873734, 0.621937, 0.812197, 0.495335, 0.427278, 0.629405, 0.149501, 0.998857, 0.376642, 0.811183, 0.935348, 0.958455, 0.182316, 0.204701, 0.769175, 0.0674538, 0.0128047, 0.75999, 0.431743, 0.0944213, 0.174269, 0.582347, 0.90377, 0.513, 0.691904, 0.672563, 0.403129, 0.919753, 0.391282, 0.169421, 0.6299, 0.757772, 0.532328, 0.536439, 0.209715, 0.0032032, 0.829527, 0.634676, 0.768755, 0.0726254, 0.116812, 0.324222, 0.674545, 0.0351904, 0.811605, 0.453396, 0.0960356, 0.65933, 0.065609, 0.693461, 0.968284, 0.8728, 0.9119, 0.803907, 0.70241, 0.401228, 0.574411},
{0.98495, 0.0436994, 0.214047, 0.45964, 0.910708, 0.331338, 0.732857, 0.211427, 0.821753, 0.187608, 0.633681, 0.579367, 0.52889, 0.936765, 0.817996, 0.978764, 0.553651, 0.842235, 0.145807, 0.348338, 0.117224, 0.495837, 0.1605, 0.262765, 0.0214551, 0.0478242, 0.802793, 0.704123, 0.0896263, 0.053283, 0.591717, 0.507479, 0.933819, 0.0940231, 0.0589911, 0.397105, 0.131187, 0.618415, 0.340382, 0.731633, 0.619576, 0.0351637, 0.944168, 0.989638, 0.721919, 0.264029, 0.0490712, 0.738352, 0.608101, 0.525342, 0.654136, 0.284542, 0.334412, 0.534309, 0.947302, 0.553922, 0.388249, 0.765821, 0.485641, 0.802006, 0.560935, 0.870925, 0.287129, 0.895734, 0.100993, 0.236869, 0.238834, 0.442108, 0.355116, 0.885437, 0.347044, 0.69172, 0.138937, 0.214347, 0.076751, 0.592631, 0.875553, 0.655402, 0.613008, 0.178459, 0.249711, 0.754834, 0.0779872, 0.190664, 0.480344, 0.969642, 0.0254007, 0.452035, 0.524875, 0.482808, 0.732524, 0.265713, 0.359963, 0.425458, 0.233767, 0.92516, 0.737605, 0.843748, 0.865944, 0.745655},
{0.0780989, 0.75442, 0.884977, 0.937867, 0.393954, 0.668863, 0.827422, 0.716863, 0.694535, 0.224309, 0.802983, 0.0436506, 0.976829, 0.933106, 0.475597, 0.568752, 0.775656, 0.773128, 0.230469, 0.798257, 0.0937355, 0.652711, 0.93354, 0.0745417, 0.746497, 0.430756, 0.148399, 0.0593456, 0.734401, 0.60227, 0.310299, 0.404207, 0.0942547, 0.662361, 0.414596, 0.516066, 0.977333, 0.788891, 0.6518, 0.272135, 0.106865, 0.701225, 0.406398, 0.556981, 0.0045242, 0.680937, 0.14129, 0.381139, 0.57328, 0.193403, 0.335075, 0.18606, 0.593902, 0.826835, 0.240185, 0.535721, 0.608795, 0.0711403, 0.0774178, 0.558294, 0.468385, 0.400151, 0.920825, 0.185163, 0.665726, 0.0196558, 0.266262, 0.706613, 0.78848, 0.55766, 0.400642, 0.926124, 0.427437, 0.711229, 0.492476, 0.284608, 0.939507, 0.512731, 0.0844568, 0.141727, 0.951685, 0.753117, 0.50202, 0.468603, 0.807188, 0.134266, 0.201559, 0.666259, 0.808303, 0.659853, 0.508708, 0.578857, 0.369071, 0.253083, 0.318717, 0.561563, 0.867568, 0.0817829, 0.196726, 0.774478},
{0.919337, 0.720594, 0.860993, 0.594538, 0.568281, 0.187962, 0.205952, 0.460613, 0.00572086, 0.666589, 0.893164, 0.738114, 0.351231, 0.914105, 0.712564, 0.662236, 0.020832, 0.0581137, 0.481177, 0.214461, 0.243789, 0.939577, 0.0836265, 0.682919, 0.0881447, 0.393398, 0.908264, 0.741552, 0.305202, 0.823662, 0.836217, 0.859199, 0.394128, 0.44819, 0.745446, 0.941286, 0.372751, 0.684822, 0.688956, 0.0219126, 0.654677, 0.713493, 0.376294, 0.735042, 0.71626, 0.704573, 0.938029, 0.873261, 0.795111, 0.0947121, 0.112988, 0.746628, 0.880289, 0.445804, 0.147632, 0.790711, 0.959862, 0.388324, 0.587443, 0.935644, 0.617221, 0.644775, 0.836415, 0.626243, 0.706634, 0.839351, 0.628489, 0.242821, 0.395114, 0.304328, 0.987394, 0.696634, 0.782131, 0.107266, 0.189967, 0.642617, 0.14586, 0.866814, 0.806236, 0.379803, 0.578472, 0.268365, 0.406143, 0.421574, 0.969523, 0.893719, 0.038494, 0.374411, 0.201649, 0.865547, 0.540163, 0.105685, 0.565027, 0.606074, 0.20328, 0.295608, 0.976879, 0.483893, 0.820691, 0.0274667},
{0.518053, 0.235097, 0.156486, 0.370804, 0.689831, 0.350994, 0.509069, 0.429178, 0.18319, 0.780529, 0.858336, 0.0595676, 0.954143, 0.476076, 0.33803, 0.432777, 0.366967, 0.68312, 0.389045, 0.919053, 0.839331, 0.306589, 0.709555, 0.0597408, 0.812036, 0.574571, 0.01856, 0.789803, 0.740302, 0.752117, 0.974658, 0.464265, 0.0893693, 0.890016, 0.525195, 0.0674492, 0.245876, 0.475157, 0.473309, 0.330573, 0.493767, 0.755117, 0.466636, 0.249923, 0.851884, 0.0285122, 0.238868, 0.993113, 0.928562, 0.569804, 0.303868, 0.400479, 0.50891, 0.79548, 0.293092, 0.937606, 0.742287, 0.0421742, 0.837674, 0.552629, 0.280246, 0.22038, 0.855327, 0.0874826, 0.675191, 0.46984, 0.794969, 0.437426, 0.337419, 0.184313, 0.371365, 0.791325, 0.558748, 0.0158675, 0.410722, 0.451118, 0.0734603, 0.0484441, 0.394973, 0.0393208, 0.788697, 0.422712, 0.21918, 0.168778, 0.861012, 0.406729, 0.192181, 0.760859, 0.893978, 0.981465, 0.852745, 0.42754, 0.462553, 0.605007, 0.396761, 0.401773, 0.469964, 0.136986, 0.284744, 0.73089},
{0.457178, 0.306896, 0.108689, 0.0863156, 0.862216, 0.217887, 0.669322, 0.198675, 0.351679, 0.768688, 0.533552, 0.909529, 0.830602, 0.27144, 0.231654, 0.0397112, 0.40601, 0.529416, 0.364073, 0.189517, 0.0642168, 0.606848, 0.332757, 0.993532, 0.122965, 0.469627, 0.130193, 0.296348, 0.884172, 0.435497, 0.331045, 0.257674, 0.541206, 0.939907, 0.881113, 0.851268, 0.46266, 0.267502, 0.34726, 0.698325, 0.483683, 0.910907, 0.287698, 0.765273, 0.209167, 0.145017, 0.774362, 0.778744, 0.881786, 0.0972398, 0.51154, 0.407354, 0.218979, 0.423015, 0.634353, 0.911643, 0.790804, 0.502305, 0.462943, 0.810328, 0.0588708, 0.252616, 0.691079, 0.66593, 0.603303, 0.213719, 0.789432, 0.575264, 0.404694, 0.746858, 0.825445, 0.52047, 0.716921, 0.377972, 0.211712, 0.600046, 0.849001, 0.722306, 0.931066, 0.610283, 0.891555, 0.493806, 0.72026, 0.869534, 0.824739, 0.993094, 0.357857, 0.728882, 0.25321, 0.640087, 0.00988186, 0.868611, 0.503852, 0.163517, 0.76823, 0.230184, 0.626602, 0.380652, 0.219185, 0.085216},
{0.508841, 0.931671, 0.0133781, 0.964003, 0.809025, 0.0814348, 0.0337639, 0.267, 0.118811, 0.33925, 0.531591, 0.396515, 0.777975, 0.84533, 0.41035, 0.349368, 0.431697, 0.474516, 0.650041, 0.10846, 0.402441, 0.725092, 0.0858982, 0.0639624, 0.105093, 0.757413, 0.239343, 0.884432, 0.555998, 0.531806, 0.207698, 0.740245, 0.964157, 0.0775396, 0.258571, 0.617206, 0.305248, 0.592351, 0.597527, 0.501135, 0.369137, 0.599378, 0.216242, 0.304555, 0.227059, 0.112104, 0.528677, 0.00659921, 0.405436, 0.28532, 0.877749, 0.447247, 0.791949, 0.363982, 0.250953, 0.929764, 0.926187, 0.582071, 0.237806, 0.275129, 0.15498, 0.279869, 0.297698, 0.431226, 0.748576, 0.949692, 0.505033, 0.946537, 0.599504, 0.832757, 0.466716, 0.344816, 0.339625, 0.581746, 0.49472, 0.537072, 0.0546135, 0.62913, 0.662123, 0.0559052, 0.290136, 0.878706, 0.891657, 0.00569983, 0.684866, 0.323175, 0.619266, 0.0232749, 0.105844, 0.934933, 0.0382461, 0.189345, 0.30104, 0.948367, 0.497581, 0.28784, 0.460616, 0.255043, 0.778388, 0.815236},
{0.532759, 0.182646, 0.0586288, 0.669158, 0.101158, 0.0116168, 0.715539, 0.67432, 0.0430115, 0.438717, 0.643649, 0.508528, 0.827272, 0.823795, 0.44194, 0.711121, 0.629041, 0.858087, 0.727607, 0.490719, 0.717026, 0.706549, 0.812109, 0.372923, 0.484076, 0.490045, 0.608472, 0.0987117, 0.844498, 0.306192, 0.811412, 0.882998, 0.640488, 0.980618, 0.309113, 0.220418, 0.725661, 0.561805, 0.0672465, 0.552063, 0.21979, 0.236135, 0.661705, 0.503348, 0.0952336, 0.893056, 0.586539, 0.471783, 0.114654, 0.0487398, 0.0141419, 0.204631, 0.348408, 0.701631, 0.962093, 0.525584, 0.619556, 0.86684, 0.290414, 0.199934, 0.376314, 0.973161, 0.979486, 0.793646, 0.752284, 0.589048, 0.377714, 0.198979, 0.688568, 0.614435, 0.671476, 0.433919, 0.265403, 0.660149, 0.484082, 0.0474029, 0.630815, 0.513883, 0.191816, 0.405764, 0.317808, 0.196593, 0.206337, 0.591923, 0.497655, 0.841551, 0.66504, 0.979938, 0.568284, 0.851224, 0.350792, 0.958102, 0.0211809, 0.305934, 0.913171, 0.498445, 0.190806, 0.641004, 0.311658, 0.401728},
{0.078607, 0.406811, 0.72672, 0.682629, 0.0510188, 0.532154, 0.472363, 0.839445, 0.558585, 0.925878, 0.685142, 0.0918726, 0.871215, 0.636632, 0.244508, 0.989836, 0.069884, 0.346352, 0.54516, 0.252978, 0.294232, 0.539904, 0.181146, 0.186332, 0.744369, 0.724203, 0.487193, 0.767897, 0.639298, 0.260376, 0.288812, 0.0548542, 0.689607, 0.934295, 0.617375, 0.493411, 0.560406, 0.293023, 0.560459, 0.807388, 0.159887, 0.914354, 0.0447175, 0.871274, 0.704434, 0.20586, 0.0543496, 0.858908, 0.390096, 0.880558, 0.0106366, 0.984143, 0.822312, 0.888929, 0.85993, 0.39805, 0.906505, 0.36142, 0.584351, 0.109141, 0.870227, 0.966985, 0.0602454, 0.00328406, 0.822522, 0.780093, 0.691481, 0.559494, 0.702567, 0.122417, 0.714717, 0.265948, 0.468539, 0.314707, 0.298292, 0.714495, 0.341712, 0.877008, 0.290094, 0.654447, 0.00585388, 0.40925, 0.813421, 0.384739, 0.21336, 0.131842, 0.419476, 0.404592, 0.779947, 0.456105, 0.912534, 0.719866, 0.737508, 0.323989, 0.487566, 0.483453, 0.605981, 0.375149, 0.129701, 0.626559},
{0.0380011, 0.92346, 0.614466, 0.0707943, 0.207745, 0.625838, 0.409974, 0.346309, 0.418906, 0.128411, 0.80851, 0.380436, 0.929157, 0.250889, 0.159324, 0.0830347, 0.885407, 0.307166, 0.171956, 0.762378, 0.426074, 0.41992, 0.785826, 0.382084, 0.537206, 0.111798, 0.620185, 0.655611, 0.248836, 0.0631754, 0.374346, 0.649366, 0.152023, 0.235053, 0.631909, 0.00279768, 0.781249, 0.50818, 0.496163, 0.11714, 0.673668, 0.327586, 0.215153, 0.23303, 0.690098, 0.171427, 0.997293, 0.812288, 0.0848421, 0.14459, 0.417999, 0.586402, 0.361677, 0.889549, 0.943685, 0.930855, 0.426088, 0.724827, 0.0948311, 0.906013, 0.519623, 0.43346, 0.673008, 0.864106, 0.44019, 0.834578, 0.93465, 0.408178, 0.180311, 0.426255, 0.953014, 0.822125, 0.0781132, 0.480319, 0.587996, 0.265112, 0.470415, 0.318024, 0.101325, 0.393542, 0.84509, 0.998984, 0.18781, 0.583525, 0.10205, 0.524543, 0.498752, 0.870907, 0.496125, 0.887478, 0.19358, 0.488187, 0.909947, 0.0340137, 0.982247, 0.369976, 0.888637, 0.113752, 0.0459542, 0.908493},
};

static const std::vector<float> costs = {988.382, 751.876, 138.195, 663.838, 963.15, 462.462, 765.462, 161.924, 971.149, 695.391, 965.121, 255.398, 529.377, 907.957, 623.335, 411.37, 491.522, 52.5114, 326.729, 246.533, 397.363, 844.686, 565.908, 321.449, 340.85, 488.812, 896.072, 977.246, 789.382, 489.012, 386.431, 116.451, 90.2327, 899.972, 744.115, 322.112, 783.551, 477.969, 136.338, 465.776, 347.151, 872.416, 924.087, 410.427, 751.304, 36.2351, 889.335, 753.189, 510.892, 901.147, 154.408, 807.699, 799.236, 421.182, 453.394, 261.793, 301.18, 843.106, 378.03, 403.043, 907.502, 630.135, 60.8218, 144.55, 553.143, 796.775, 921.305, 143.027, 51.8506, 263.049, 427.431, 257.154, 129.303, 222.947, 834.836, 490.768, 818.714, 766.783, 224.349, 950.11, 497.656, 695.03, 823.75, 591.719, 604.418, 871.982, 748.305, 302.264, 7.0129, 128.629, 700.099, 224.93, 752.917, 726.522, 926.256, 204.445, 361.392, 897.056, 528.698, 648.55};

static const std::vector<float> min_impressions = {0.501677, 0.414814, 0.685976, 0.0729225, 0.578244, 0.88464, 0.958205, 0.0911611, 0.975308, 0.223659};

//
#endif
