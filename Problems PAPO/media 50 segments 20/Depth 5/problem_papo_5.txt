#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(events[11], events[16]),events[7]),events[46]),events[37]),events[14]),cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[30], events[42]),events[8]),events[18]),events[26]),events[21]),cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(events[49], events[38]),events[6]),events[33]),events[39]),events[44]),cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(events[41], events[3]),events[19]),events[18]),events[25]),events[11]),cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(events[23], events[2]),events[5]),events[29]),events[46]),events[45]),cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(events[10], events[12]),events[48]),events[6]),events[42]),events[49]),cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(events[42], events[36]),events[33]),events[1]),events[7]),events[34]),cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(events[9], events[39]),events[18]),events[28]),events[7]),events[26]),cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(events[20], events[23]),events[48]),events[19]),events[33]),events[29]),cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(events[14], events[38]),events[29]),events[28]),events[43]),events[32]),cons_indep(cons_excl(cons_indep(cons_indep(cons_excl(events[1], events[49]),events[21]),events[2]),events[44]),events[8]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(events[5], events[3]),events[28]),events[46]),events[0]),events[8]),cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(events[14], events[28]),events[47]),events[15]),events[26]),events[1]),cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(events[36], events[30]),events[49]),events[46]),events[29]),events[1]),cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(events[0], events[22]),events[16]),events[49]),events[48]),events[34]),cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(events[24], events[16]),events[28]),events[2]),events[11]),events[42]),cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[22], events[6]),events[7]),events[21]),events[3]),events[42]),cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(events[42], events[45]),events[25]),events[19]),events[29]),events[36]),cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(events[8], events[33]),events[5]),events[12]),events[10]),events[24]),cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(events[15], events[32]),events[30]),events[28]),events[22]),events[36])};


static const std::vector< std::vector<float> > prob = {{0.543331, 0.452855, 0.927973, 0.756164, 0.951849, 0.626349, 0.79125, 0.044055, 0.270419, 0.423698, 0.889859, 0.00532677, 0.779386, 0.00945525, 0.771103, 0.533761, 0.582917, 0.264611, 0.171004, 0.724318, 0.185747, 0.370738, 0.500382, 0.484926, 0.569624, 0.400659, 0.47088, 0.930043, 0.707266, 0.738762, 0.835258, 0.537361, 0.452541, 0.301607, 0.808154, 0.033721, 0.0297436, 0.922777, 0.0457141, 0.968968, 0.128129, 0.112054, 0.632026, 0.752759, 0.134629, 0.350465, 0.382861, 0.817446, 0.335288, 0.827871},
{0.182596, 0.937233, 0.228147, 0.00315105, 0.706703, 0.915398, 0.479886, 0.605051, 0.958702, 0.805824, 0.0586575, 0.331766, 0.033085, 0.976564, 0.554739, 0.10726, 0.23243, 0.34088, 0.0838823, 0.476562, 0.644117, 0.780301, 0.886782, 0.286671, 0.481425, 0.759898, 0.5158, 0.854957, 0.23647, 0.921354, 0.315158, 0.750278, 0.363253, 0.459788, 0.796392, 0.194105, 0.804852, 0.203395, 0.969396, 0.167913, 0.144522, 0.0676271, 0.73087, 0.0326079, 0.115279, 0.211121, 0.931276, 0.384706, 0.626385, 0.312041},
{0.247705, 0.543072, 0.624408, 0.137294, 0.770869, 0.609406, 0.898905, 0.0189088, 0.837185, 0.467849, 0.583346, 0.796851, 0.511341, 0.460033, 0.841434, 0.408755, 0.527006, 0.952072, 0.278249, 0.748884, 0.0904796, 0.334998, 0.719783, 0.632877, 0.562387, 0.0364479, 0.339921, 0.868549, 0.123167, 0.195132, 0.499031, 0.245881, 0.224651, 0.833827, 0.188791, 0.901288, 0.612678, 0.89691, 0.675702, 0.785517, 0.969252, 0.898787, 0.516277, 0.248333, 0.0311961, 0.0850965, 0.447829, 0.74934, 0.827992, 0.59502},
{0.664647, 0.45874, 0.489773, 0.600563, 0.461688, 0.872874, 0.265366, 0.0726818, 0.601305, 0.61107, 0.397668, 0.979712, 0.119022, 0.176284, 0.473593, 0.574517, 0.610908, 0.557685, 0.0885061, 0.226832, 0.563481, 0.546334, 0.378228, 0.0169036, 0.821659, 0.39453, 0.13414, 0.647357, 0.319884, 0.808071, 0.265357, 0.901721, 0.714896, 0.466825, 0.605571, 0.288966, 0.971244, 0.345047, 0.299622, 0.904244, 0.490933, 0.234659, 0.97332, 0.755394, 0.318346, 0.116133, 0.0416848, 0.488017, 0.68573, 0.283826},
{0.872208, 0.325374, 0.442057, 0.328488, 0.657497, 0.493719, 0.0883579, 0.823478, 0.0352004, 0.459474, 0.885697, 0.423424, 0.0465657, 0.905244, 0.537235, 0.173706, 0.688649, 0.677968, 0.950536, 0.728474, 0.161477, 0.546227, 0.557607, 0.0559051, 0.416003, 0.211643, 0.586465, 0.0101817, 0.299096, 0.193085, 0.101945, 0.846148, 0.443527, 0.16044, 0.640741, 0.964254, 0.0788519, 0.715274, 0.839842, 0.203431, 0.0939331, 0.304626, 0.250464, 0.560921, 0.208435, 0.197143, 0.941921, 0.43004, 0.251968, 0.696068},
{0.215591, 0.716004, 0.794171, 0.514486, 0.824612, 0.065697, 0.776053, 0.58519, 0.765137, 0.970213, 0.277784, 0.419783, 0.147418, 0.826647, 0.91763, 0.19781, 0.0428993, 0.600097, 0.257611, 0.438604, 0.259098, 0.399381, 0.286302, 0.891259, 0.603824, 0.293895, 0.499823, 0.984561, 0.964932, 0.642373, 0.416831, 0.436283, 0.425717, 0.810289, 0.478564, 0.869896, 0.786095, 0.00310799, 0.778934, 0.799179, 0.222092, 0.90446, 0.505342, 0.350755, 0.817483, 0.749957, 0.424579, 0.457161, 0.139102, 0.513938},
{0.946707, 0.145585, 0.223155, 0.394175, 0.18185, 0.619155, 0.760094, 0.121338, 0.153899, 0.668058, 0.398213, 0.645263, 0.280357, 0.169796, 0.791349, 0.195341, 0.321441, 0.757344, 0.811957, 0.771076, 0.365943, 0.674481, 0.814053, 0.462116, 0.642441, 0.260472, 0.127786, 0.218574, 0.160363, 0.840849, 0.55666, 0.628934, 0.0827636, 0.282948, 0.996493, 0.323268, 0.93462, 0.599319, 9.83564e05, 0.929185, 0.0694856, 0.305948, 0.748419, 0.480018, 0.323107, 0.662302, 0.4669, 0.40133, 0.985831, 0.278471},
{0.930514, 0.711088, 0.902682, 0.981352, 0.922109, 0.00121559, 0.190253, 0.554845, 0.483852, 0.167667, 0.28756, 0.835317, 0.445622, 0.0685087, 0.848882, 0.181445, 0.508759, 0.316998, 0.135817, 0.417588, 0.896333, 0.959467, 0.95259, 0.191771, 0.94544, 0.540085, 0.596835, 0.229154, 0.0403258, 0.533193, 0.423699, 0.33305, 0.844684, 0.777977, 0.823176, 0.708043, 0.581888, 0.313088, 0.661818, 0.881137, 0.80788, 0.91469, 0.027838, 0.128521, 0.118801, 0.471915, 0.208119, 0.284425, 0.675087, 0.371354},
{0.336152, 0.72961, 0.267488, 0.986706, 0.414084, 0.502666, 0.799111, 0.575639, 0.0216956, 0.401602, 0.321211, 0.627113, 0.417974, 0.799661, 0.748577, 0.304964, 0.145783, 0.711455, 0.273197, 0.980784, 0.277292, 0.628987, 0.721349, 0.623673, 0.748632, 0.295762, 0.637188, 0.230095, 0.137032, 0.317968, 0.140513, 0.415016, 0.803182, 0.706023, 0.807499, 0.772797, 0.746938, 0.262213, 0.311308, 0.0971866, 0.683685, 0.477254, 0.345952, 0.343029, 0.710923, 0.954625, 0.627414, 0.83572, 0.412221, 0.726169},
{0.224494, 0.212256, 0.471303, 0.52692, 0.274605, 0.470042, 0.80774, 0.715723, 0.568591, 0.626648, 0.190684, 0.936831, 0.703321, 0.4938, 0.819567, 0.954819, 0.531501, 0.779755, 0.232064, 0.188534, 0.270139, 0.197917, 0.430346, 0.645052, 0.237603, 0.87705, 0.0208539, 0.585029, 0.484815, 0.126785, 0.717949, 0.693241, 0.989172, 0.0491886, 0.16204, 0.278453, 0.588162, 0.100258, 0.052273, 0.603576, 0.138712, 0.737417, 0.911717, 0.794026, 0.0867253, 0.860146, 0.901498, 0.852321, 0.318249, 0.759652},
{0.556949, 0.993736, 0.726253, 0.204982, 0.629532, 0.924684, 0.0834683, 0.520152, 0.954026, 0.283429, 0.52635, 0.364104, 0.0780496, 0.525075, 0.656192, 0.277709, 0.544511, 0.788545, 0.164491, 0.385966, 0.831123, 0.124148, 0.599399, 0.120766, 0.416918, 0.517464, 0.476608, 0.902056, 0.681964, 0.281675, 0.445477, 0.362208, 0.935966, 0.0143992, 0.210527, 0.836567, 0.0576832, 0.924865, 0.9097, 0.221689, 0.0629118, 0.370881, 0.115953, 0.554041, 0.957709, 0.965381, 0.318976, 0.65815, 0.502467, 0.259859},
{0.121211, 0.023539, 0.965388, 0.208619, 0.192655, 0.28517, 0.0237031, 0.942462, 0.654138, 0.175818, 0.981606, 0.650989, 0.0433102, 0.806368, 0.0199024, 0.105539, 0.388995, 0.372242, 0.617598, 0.278052, 0.277524, 0.999319, 0.817101, 0.800114, 0.0320848, 0.144316, 0.50069, 0.493243, 0.846787, 0.654682, 0.824483, 0.848559, 0.365298, 0.781438, 0.97579, 0.820559, 0.363759, 0.0795508, 0.151249, 0.121198, 0.46129, 0.856009, 0.985046, 0.387581, 0.0905926, 0.453418, 0.808639, 0.898188, 0.444666, 0.524481},
{0.611461, 0.945545, 0.968052, 0.523917, 0.221988, 0.150106, 0.337776, 0.802186, 0.157133, 0.820839, 0.549038, 0.213142, 0.812103, 0.273079, 0.336577, 0.677509, 0.424363, 0.0629559, 0.707721, 0.22059, 0.285783, 0.680231, 0.776908, 0.324782, 0.774272, 0.156963, 0.968488, 0.642963, 0.260416, 0.497747, 0.268201, 0.223686, 0.729598, 0.470318, 0.861912, 0.901581, 0.267624, 0.842762, 0.0293605, 0.191858, 0.147062, 0.611699, 0.0798395, 0.61859, 0.437312, 0.798937, 0.718836, 0.0632778, 0.180905, 0.536521},
{0.353453, 0.18149, 0.767869, 0.683171, 0.226581, 0.353893, 0.368535, 0.234545, 0.961104, 0.884825, 0.805011, 0.871517, 0.322418, 0.774698, 0.469994, 0.32508, 0.243794, 0.250557, 0.864436, 0.800861, 0.747666, 0.577906, 0.269752, 0.421333, 0.304085, 0.119137, 0.95014, 0.390406, 0.341004, 0.730802, 0.650609, 0.991313, 0.59297, 0.287254, 0.513153, 0.0964853, 0.117773, 0.904187, 0.74115, 0.526202, 0.490316, 0.369905, 0.846894, 0.055235, 0.600182, 0.193852, 0.721498, 0.770887, 0.773524, 0.318271},
{0.644282, 0.0202754, 0.938442, 0.0194952, 0.325318, 0.318056, 0.847427, 0.827862, 0.921185, 0.482867, 0.904074, 0.273249, 0.770875, 0.967514, 0.849266, 0.242605, 0.146853, 0.773085, 0.820542, 0.687368, 0.0966626, 0.505054, 0.913932, 0.923468, 0.878473, 0.152173, 0.14372, 0.716443, 0.0683184, 0.0109054, 0.330023, 0.337074, 0.665664, 0.284217, 0.378641, 0.943639, 0.594686, 0.727596, 0.178379, 0.542542, 0.46892, 0.00955597, 0.759769, 0.867697, 0.923698, 0.404075, 0.470252, 0.973134, 0.704563, 0.411092},
{0.228253, 0.911991, 0.58653, 0.82878, 0.666562, 0.548451, 0.176158, 0.570238, 0.470887, 0.672332, 0.410768, 0.0509004, 0.575213, 0.135802, 0.262351, 0.473832, 0.662065, 0.849186, 0.869939, 0.80661, 0.0592532, 0.709129, 0.605285, 0.355224, 0.969845, 0.27867, 0.215826, 0.460667, 0.688526, 0.884864, 0.54726, 0.757094, 0.134651, 0.583217, 0.663585, 0.563393, 0.324379, 0.151889, 0.265242, 0.657545, 0.0160196, 0.419636, 0.976025, 0.736383, 0.736492, 0.989395, 0.0414547, 0.14864, 0.178762, 0.767525},
{0.421916, 0.931628, 0.987544, 0.465562, 0.423163, 0.778069, 0.549241, 0.375391, 0.333503, 0.00892231, 0.644418, 0.524734, 0.165969, 0.830827, 0.50754, 0.992127, 0.551811, 0.988369, 0.275649, 0.395496, 0.774438, 0.401084, 0.724837, 0.649319, 0.589445, 0.949756, 0.171306, 0.644741, 0.166531, 0.296139, 0.112993, 0.314557, 0.939353, 0.3379, 0.862518, 0.353026, 0.368212, 0.629881, 0.0709277, 0.188981, 0.489916, 0.0155512, 0.945167, 0.551629, 0.0557725, 0.306969, 0.628026, 0.370035, 0.535151, 0.162074},
{0.0253935, 0.225151, 0.765153, 0.878011, 0.840789, 0.776188, 0.20171, 0.55875, 0.786016, 0.0809591, 0.332186, 0.389619, 0.332381, 0.933915, 0.251445, 0.0630405, 0.954954, 0.05082, 0.410729, 0.662587, 0.961357, 0.00978263, 0.530512, 0.152865, 0.935365, 0.0602256, 0.232419, 0.877101, 0.090429, 0.429806, 0.329531, 0.0852799, 0.920589, 0.742184, 0.253605, 0.849166, 0.996426, 0.27278, 0.0976629, 0.0283937, 0.466755, 0.936814, 0.379455, 0.81341, 0.803922, 0.465767, 0.239067, 0.977121, 0.346425, 0.295016},
{0.491428, 0.845322, 0.0780642, 0.728882, 0.919297, 0.798074, 0.700795, 0.659752, 0.404167, 0.18552, 0.0392388, 0.0288044, 0.849982, 0.63486, 0.257043, 0.309884, 0.628741, 0.246249, 0.310574, 0.280486, 0.888365, 0.673314, 0.260327, 0.297377, 0.808838, 0.798048, 0.0555776, 0.377727, 0.567297, 0.271735, 0.371223, 0.508259, 0.445731, 0.25415, 0.0203151, 0.435044, 0.730987, 0.591679, 0.420281, 0.408703, 0.24602, 0.802251, 0.0526981, 0.704583, 0.668064, 0.202188, 0.890051, 0.23163, 0.504981, 0.427925},
{0.0522361, 0.636009, 0.184199, 0.1993, 0.681205, 0.0102039, 0.200371, 0.403983, 0.686462, 0.109296, 0.603568, 0.628474, 0.0694909, 0.917933, 0.988415, 0.996071, 0.26665, 0.972862, 0.537893, 0.283759, 0.422823, 0.597707, 0.674372, 0.276114, 0.91967, 0.350567, 0.948724, 0.796756, 0.0404166, 0.435114, 0.858291, 0.925056, 0.299091, 0.559867, 0.141985, 0.99454, 0.367, 0.927763, 0.0815487, 0.992453, 0.240984, 0.342687, 0.591037, 0.474701, 0.547729, 0.243691, 0.125296, 0.260333, 0.657654, 0.365515},
};

static const std::vector<float> costs = {80.081, 694.761, 503.927, 957.997, 467.611, 379.36, 857.703, 525.715, 798.489, 999.877, 608.495, 896.466, 404.432, 311.998, 493.578, 577.156, 733.087, 743.457, 113.625, 593.032, 805.191, 12.2486, 638.4, 723.647, 165.872, 691.171, 397.125, 475.171, 147.868, 273.1, 374.995, 853.951, 743.617, 688.144, 238.076, 49.0272, 402.246, 394.075, 783.2, 903.586, 965.097, 840.52, 776.229, 99.7079, 85.7911, 545.772, 922.818, 937.707, 333.972, 772.842};

static const std::vector<float> min_impressions = {0.893395, 0.0127869, 0.477686, 0.971826, 0.088599, 0.11666, 0.697252, 0.710299, 0.136827, 0.212362, 0.205996, 0.276036, 0.630804, 0.268798, 0.288831, 0.94572, 0.884653, 0.978687, 0.611988, 0.690714};

//
#endif
