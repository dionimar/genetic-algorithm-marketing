#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{3.69773,1.45571,6.28027,5.62814,6.05674,8.99385,9.77887,5.15768,7.5164,1.07204,6.46597,9.36178,2.12166,5.84035,7.15966,3.11587,8.38868,9.99807,6.65965,9.97739},
{5.11789,2.32502,4.74991,2.91016,3.52259,2.67765,8.81181,2.57678,6.12212,7.9049,7.22357,9.6565,9.60814,4.65624,5.41177,4.6277,2.6151,8.93324,6.93303,8.91334},
{1.88455,3.4124,6.01763,4.83086,2.12342,6.82305,9.07846,7.6767,3.15802,6.11626,1.54926,7.12833,3.84108,4.42611,5.6769,7.33805,2.29062,1.41175,4.09495,1.08531},
{9.69248,4.5569,4.54952,5.70671,3.429,8.00026,6.19362,7.62573,9.45151,9.73442,5.6116,1.62176,2.32095,1.41483,4.37737,5.29317,1.55685,2.34317,2.24437,9.14016},
{8.30817,4.32448,8.26427,2.95307,4.09948,7.42968,5.65722,9.57928,2.02908,4.48536,7.29327,7.01151,6.45928,1.09313,8.68842,7.28548,3.92093,2.77749,8.55933,8.79381},
{2.33976,1.25535,6.27071,5.05428,8.95446,5.26526,3.47062,9.28537,5.75667,5.40201,6.87363,1.68352,5.37225,2.11054,3.32504,7.43903,2.48897,9.45996,3.78594,9.26738},
{8.69946,7.53518,1.14018,1.37998,8.61851,8.72899,6.90338,2.74885,3.379,1.49263,4.98168,1.25,7.86193,4.02527,1.47102,3.93666,2.30548,4.23119,5.34904,3.33649},
{5.49645,4.09436,6.09618,6.86108,6.24464,3.68482,7.98012,4.40129,7.53273,8.69027,7.11579,4.34617,5.92753,9.11157,3.81765,3.70832,4.99784,4.14848,2.68273,2.95926},
{9.77472,1.69532,5.44668,7.35033,6.54496,9.56382,3.26133,6.60552,3.28472,2.66416,7.99908,4.30526,3.95652,1.84452,6.40195,3.26638,1.72786,1.23396,8.55188,5.3624},
{1.74861,6.8021,4.65073,9.85396,3.09962,9.51807,1.84259,9.03377,6.45379,8.64257,5.80879,7.48112,1.00787,5.73401,9.3853,8.26659,4.6036,6.91623,3.21663,5.18341},
{4.83353,7.73359,1.1616,4.78224,4.42046,1.18282,6.59472,3.95671,6.97139,6.76183,8.92321,8.66359,4.56757,1.69861,9.45828,5.91041,9.90548,2.87832,6.93497,2.79495},
{6.92963,3.73401,4.30809,3.08847,4.01891,5.715,9.27566,6.78262,3.68236,5.6464,3.229,3.25164,9.16473,2.24144,5.719,4.09944,2.67944,8.02432,9.71614,5.1662},
{6.24027,8.43942,2.33425,7.44675,9.23107,4.86074,4.83071,1.88388,4.92476,7.61811,8.08996,9.03708,5.60278,7.06638,6.82792,3.98202,4.45696,6.09422,9.02977,6.71573},
{3.06856,7.57489,9.90726,2.90817,5.38429,8.00745,1.74109,8.24611,8.23882,5.54312,5.55603,7.56223,7.41827,5.35202,3.34943,1.32145,5.852,3.12835,7.82462,6.02359},
{7.25596,9.78956,8.23501,5.65728,4.48675,7.19063,2.96005,8.03992,1.16927,1.79095,8.0472,1.13425,7.02347,2.8466,9.01272,4.25113,9.40223,5.13907,3.21771,7.45201},
{8.94537,7.80549,5.00668,9.06099,2.18252,6.45617,5.36354,5.9147,3.97205,4.65599,3.76465,5.86185,8.87558,8.45869,8.99895,5.07515,5.26169,4.67486,9.73676,4.3304},
{1.42629,3.98846,7.86169,6.14685,2.51877,3.04999,6.29798,3.55032,7.80524,2.21339,4.07288,6.62921,4.4983,7.01444,3.81731,4.86474,6.75391,8.58731,4.1393,4.71027},
{4.01197,6.16066,8.08056,6.36172,3.10767,4.88113,3.66104,1.10565,6.64657,4.64907,4.96,3.91242,4.86773,4.92073,5.84693,5.66533,1.65076,1.29847,6.72103,2.11245},
{4.14535,7.18604,1.74695,2.3961,6.38163,8.28716,2.30118,2.942,9.92684,2.0101,9.78535,4.81062,2.71468,7.88561,1.89934,8.35753,7.89908,3.46813,6.86734,2.60621},
{1.52133,1.40718,1.44228,2.37925,3.98541,8.9676,7.90812,7.48269,3.22929,9.74165,6.29512,4.50148,6.99175,7.71484,6.60746,7.92071,6.57206,4.88324,8.67109,2.08859},
{8.28639,5.1303,3.93048,8.79775,5.8037,9.51232,6.52972,8.45875,2.68098,9.08013,1.06641,1.51434,2.35994,3.01686,3.82793,4.77752,4.89972,5.83712,3.54417,1.73794},
{5.25479,5.78865,2.5225,1.62863,9.46013,7.63846,7.81725,2.12627,3.02093,7.51257,2.99589,9.7874,2.98793,9.4261,7.41115,1.97947,4.33375,1.73366,3.20424,4.08199},
{7.53309,7.20803,6.49374,3.53115,4.44701,1.53849,8.9514,4.47129,9.4798,6.00316,7.03922,2.19443,2.54783,7.41867,2.13711,6.2647,1.18675,2.656,3.79552,3.16668},
{1.5934,6.27037,6.02371,6.9796,5.02485,7.1536,3.08153,2.5006,1.79718,8.14597,1.96171,3.54621,4.75134,2.6314,3.68748,4.10085,2.16873,9.38368,6.12938,8.41795},
{9.67623,5.18693,8.71115,2.78954,8.53922,5.68586,3.70011,9.66951,9.21594,8.64731,5.25867,1.15513,8.89287,5.71394,7.19015,9.55933,5.73114,2.27064,4.77549,6.16049},
{1.91695,6.27485,6.39125,6.07147,2.83078,4.81347,8.00155,2.62084,6.59896,3.07755,1.14463,1.35223,6.8653,4.30218,2.81386,2.82975,3.10359,8.14864,5.95577,5.88263},
{1.3046,3.01464,8.98485,7.02102,1.25975,6.06281,3.04092,1.49135,1.4845,1.77223,7.13303,3.95036,8.25012,1.67438,9.60471,2.52852,4.9899,8.8889,7.92301,8.88329},
{4.85073,9.88638,6.47113,2.08538,3.034,9.75303,5.75128,5.46385,1.67004,4.03922,5.70618,5.50248,3.8937,4.7843,9.55459,6.10744,9.27878,9.41507,8.15111,9.52127},
{5.57964,4.67965,1.39717,8.72633,3.19615,2.62988,6.46093,9.07074,1.3608,9.57476,5.66107,9.14549,9.8494,3.1624,6.88874,4.40941,8.35254,7.33778,5.74089,1.23534},
{5.09995,2.78587,1.09006,2.16662,9.22541,5.17449,1.02888,9.68179,2.31127,3.62185,7.13934,9.26161,7.0337,3.24731,5.62958,8.36049,9.37057,3.02666,6.8701,4.82637},
{8.49443,2.64428,6.8478,7.46537,2.04615,4.92931,7.24373,3.33713,1.82875,7.9778,9.26079,9.94668,1.10952,7.83234,6.08255,8.56833,3.79262,8.89237,2.51528,8.56962},
{1.95194,1.93298,3.83748,7.24493,8.50149,2.63847,5.72071,2.67552,9.53439,6.0484,7.07546,9.51708,6.48705,4.46213,4.17799,6.78946,1.9942,4.73278,9.25611,1.56874},
{7.64499,2.41842,5.14683,6.83768,2.41281,8.5315,6.08177,9.90417,4.62072,7.80126,6.13567,3.92266,6.36413,4.27155,3.90387,2.7032,3.5445,7.086,3.44319,2.79041},
{5.50197,9.50834,1.83826,2.88535,8.01774,7.56851,9.94783,7.91363,4.83034,8.0429,7.30727,4.55896,3.76789,9.64912,2.67712,8.56149,4.49511,7.3934,8.00144,6.05297},
{4.55008,9.57636,3.32543,5.41744,5.78215,3.16183,5.53817,6.07148,6.19117,5.14337,7.89927,8.66406,3.26823,7.0292,6.20565,8.23419,8.49571,1.37542,6.91482,9.55659},
{4.03848,8.22027,7.50074,5.93947,9.01746,9.59628,5.33581,5.12663,5.91565,8.49923,4.94952,5.77055,7.66269,3.9979,2.29749,3.5832,4.52371,9.66156,8.83234,1.89469},
{4.75531,5.44393,6.77439,8.58662,2.8295,9.85095,4.78045,5.77095,3.04425,2.1823,9.47046,4.1881,1.30454,8.38964,9.76069,6.80548,7.87932,5.80368,8.89805,2.97558},
{8.05669,4.01386,2.4777,4.92657,7.9119,8.01394,1.6754,7.91637,5.67454,4.11124,6.72317,2.84611,6.65211,4.54751,5.33663,1.40885,3.57093,6.1603,4.30824,1.76742},
{5.91126,4.53702,3.81771,8.33614,4.6404,8.44482,7.09418,3.96509,9.82434,2.91205,2.54825,8.98897,3.48355,1.85762,3.91993,7.47567,2.20563,8.20434,6.95958,4.21295},
{8.32084,1.04566,5.33905,4.98032,4.60497,8.19233,7.26946,6.17695,8.21519,7.69342,7.89748,5.87351,3.34111,8.69415,1.13161,4.59761,4.26033,1.35242,5.70643,8.15389},
{5.78252,7.03652,1.48669,4.96907,1.43679,3.26827,6.30058,6.36049,3.82567,9.10953,6.07094,4.56161,7.398,8.67437,3.17061,1.16899,2.10197,2.17524,5.83729,2.44917},
{7.29944,8.14203,7.52551,5.26456,5.51036,6.65972,1.08773,9.96145,5.39187,2.16349,5.54909,8.04322,8.56414,1.67339,6.31191,6.02589,6.29903,6.47162,5.25326,5.02262},
{3.17756,8.60217,7.16147,3.4618,1.58875,6.41841,1.5314,3.2452,3.93888,6.75765,2.53101,3.83108,7.47222,6.363,5.15526,2.29083,4.50183,7.08049,9.14483,6.15396},
{5.78084,7.68276,4.8907,4.18239,6.93772,5.81725,1.05062,9.66608,6.23615,1.88297,6.58533,4.13741,7.70109,3.94987,7.70463,3.96584,5.33256,6.84963,4.81359,7.50608},
{6.82617,6.31747,3.05543,7.62988,7.66329,2.67324,5.56408,2.22168,8.42806,8.21733,6.13851,6.02934,6.91023,1.57504,7.41847,4.42323,5.27796,9.13148,1.88532,7.21031},
{1.28026,2.50518,8.67467,9.91754,8.04824,8.57292,4.62112,1.06171,4.49075,1.53784,4.43932,3.76578,4.57729,1.28287,5.50121,6.38008,3.91381,1.27747,6.37367,2.09566},
{7.61452,7.07235,7.79538,1.4552,5.15556,8.43546,6.17225,2.86242,3.00465,8.75569,5.47532,3.94006,1.7947,4.57339,3.62279,3.07606,3.12976,5.31858,1.14632,5.28785},
{6.54289,9.73639,9.77981,4.50114,1.2487,3.08355,4.43721,9.46204,4.21172,1.60635,5.63839,2.97985,5.52641,4.53233,2.62917,3.96207,1.65344,7.33246,5.08774,1.39956},
{2.89371,5.06936,2.25935,8.10063,5.74038,3.63925,3.32982,4.89557,8.47262,5.23273,8.68528,8.40667,2.32968,5.56267,1.68015,1.05005,3.81991,4.31696,5.26552,4.10127},
{2.68145,9.32805,4.64558,2.18615,2.9412,2.9891,6.46536,2.22206,1.97622,4.29597,7.01693,7.06516,1.75637,4.6251,9.43682,1.70772,4.34268,8.5217,8.48187,8.4401}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {434.356,37.5911,537.586,367.135,533.611,794.374,427.231,668.821,519.95,805.81,139.264,143.634,765.707,496.523,496.576,192.292,364.115,217.919,261.829,365.168,499.193,886.958,252.23,999.519,303.432,288.329,159.901,519.863,431.647,2.50957,286.197,70.0448,942.536,319.181,937.665,93.4275,366.236,624.087,889.777,689.899,209.894,368.783,593.195,225.843,838.568,672.023,535.004,136.437,817.086,956.723};


static const std::vector<float> min_impressions = {20.13,22.2813,44.3498,40.4328,30.9607,47.5315,48.9371,26.9745,39.7668,28.5018,27.0304,44.9425,33.5044,20.2444,38.2423,30.2978,32.0573,20.7869,32.8144,22.4982};


#endif
