#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(events[47], events[148]),events[165]),events[138]),events[31]),events[152]),events[88]),events[124]),events[77]),events[91]),events[59]),cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(events[32], events[127]),events[7]),events[147]),events[170]),events[111]),events[172]),events[90]),events[185]),events[106]),events[149]),cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(events[135], events[194]),events[18]),events[117]),events[58]),events[176]),events[144]),events[196]),events[191]),events[8]),events[104]),cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(events[150], events[141]),events[189]),events[50]),events[76]),events[19]),events[21]),events[134]),events[173]),events[90]),events[52]),cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(events[112], events[118]),events[188]),events[191]),events[82]),events[147]),events[12]),events[122]),events[76]),events[58]),events[93])};


static const std::vector< std::vector<float> > prob = {{0.894982, 0.894187, 0.024568, 0.175119, 0.242154, 0.965856, 0.729287, 0.204902, 0.267802, 0.133701, 0.875194, 0.390311, 0.227937, 0.757961, 0.926275, 0.598885, 0.202895, 0.724015, 0.8881, 0.46347, 0.368946, 0.837771, 0.0825863, 0.88079, 0.481837, 0.126307, 0.528479, 0.335839, 0.654104, 0.964067, 0.890852, 0.0902248, 0.541975, 0.957049, 0.550023, 0.422217, 0.150883, 0.903368, 0.0672335, 0.970126, 0.062604, 0.881357, 0.518045, 0.503961, 0.774312, 0.875534, 0.214997, 0.871926, 0.934229, 0.709099, 0.657461, 0.711536, 0.108683, 0.620165, 0.415778, 0.866824, 0.659827, 0.849557, 0.965583, 0.230731, 0.786075, 0.200329, 0.543763, 0.345121, 0.742834, 0.795333, 0.741422, 0.107859, 0.196734, 0.94862, 0.364387, 0.0697907, 0.916682, 0.565384, 0.94968, 0.526419, 0.284189, 0.0135909, 0.708397, 0.632931, 0.514007, 0.160187, 0.784857, 0.521018, 0.994325, 0.904297, 0.623107, 0.460231, 0.468029, 0.0507783, 0.692857, 0.28543, 0.256229, 0.425983, 0.0544837, 0.891209, 0.910701, 0.311223, 0.0340172, 0.149808, 0.746923, 0.564398, 0.733758, 0.310514, 0.115261, 0.105803, 0.404409, 0.24966, 0.644535, 0.93512, 0.656997, 0.790937, 0.889051, 0.286158, 0.420179, 0.0827369, 0.600878, 0.0648652, 0.466595, 0.253401, 0.434082, 0.846265, 0.503058, 0.916677, 0.700628, 0.300295, 0.266658, 0.296576, 0.702134, 0.631273, 0.468066, 0.763576, 0.176272, 0.305244, 0.109512, 0.499341, 0.438806, 0.849112, 0.156233, 0.667546, 0.666811, 0.145288, 0.833658, 0.0149078, 0.864323, 0.448184, 0.00948428, 0.0649147, 0.593721, 0.376031, 0.0577958, 0.0320396, 0.811393, 0.164238, 0.583061, 0.906704, 0.443175, 0.483879, 0.294594, 0.300345, 0.227377, 0.416995, 0.494256, 0.760764, 0.475253, 0.0596053, 0.407939, 0.64215, 0.926901, 0.577445, 0.513923, 0.722036, 0.278209, 0.159291, 0.28924, 0.466543, 0.48746, 0.197349, 0.974098, 0.491929, 0.308668, 0.285082, 0.320124, 0.892918, 0.215415, 0.0560909, 0.0575469, 0.430623, 0.717721, 0.985413, 0.879732, 0.0056597, 0.595833, 0.090895, 0.423223, 0.221508, 0.683467, 0.878711, 0.518611, 0.349205},
{0.0535405, 0.589604, 0.339111, 0.164291, 0.598887, 0.614106, 0.739612, 0.976693, 0.269711, 0.649207, 0.678656, 0.0362586, 0.754307, 0.148905, 0.598924, 0.895257, 0.825139, 0.786515, 0.269322, 0.632429, 0.81948, 0.955599, 0.877363, 0.0210082, 0.555435, 0.0757373, 0.549377, 0.558363, 0.774327, 0.735449, 0.0878047, 0.0660128, 0.0229186, 0.458367, 0.938312, 0.385354, 0.108098, 0.210188, 0.741773, 0.227653, 0.0131887, 0.795399, 0.737743, 0.775362, 0.876997, 0.0768083, 0.960317, 0.970196, 0.788468, 0.613912, 0.719541, 0.950436, 0.656083, 0.0415542, 0.347196, 0.644529, 0.286586, 0.980042, 0.944135, 0.535105, 0.343403, 0.820272, 0.587877, 0.0614602, 0.273558, 0.306359, 0.47389, 0.785425, 0.392867, 0.458978, 0.155581, 0.386797, 0.81728, 0.016692, 0.275106, 0.350095, 0.0844078, 0.889747, 0.558243, 0.693297, 0.666207, 0.974437, 0.734444, 0.793815, 0.389461, 0.723384, 0.961655, 0.358211, 0.750887, 0.00252192, 0.232552, 0.11149, 0.979584, 0.78008, 0.720668, 0.670166, 0.493587, 0.475869, 0.187392, 0.338524, 0.821382, 0.959773, 0.535815, 0.149302, 0.437288, 0.38831, 0.956217, 0.876519, 0.15472, 0.74706, 0.551442, 0.732823, 0.877544, 0.989096, 0.549301, 0.132211, 0.435334, 0.676086, 0.479085, 0.958822, 0.476646, 0.339076, 0.425963, 0.191897, 0.846896, 0.60579, 0.93588, 0.633442, 0.0728631, 0.394177, 0.590192, 0.302632, 0.506214, 0.565482, 0.00995878, 0.890259, 0.642696, 0.210164, 0.266443, 0.548855, 0.282543, 0.336655, 0.67045, 0.755731, 0.220737, 0.432906, 0.59738, 0.448791, 0.770222, 0.0674109, 0.909909, 0.631558, 0.394626, 0.288941, 0.538904, 0.152092, 0.712069, 0.91429, 0.39019, 0.931377, 0.920879, 0.991002, 0.778588, 0.698341, 0.18383, 0.194732, 0.329134, 0.251434, 0.0212191, 0.155045, 0.158017, 0.898246, 0.0926866, 0.931009, 0.0171291, 0.589939, 0.173094, 0.387114, 0.147211, 0.819821, 0.226605, 0.675646, 0.614567, 0.442709, 0.785476, 0.649881, 0.410187, 0.0228981, 0.624566, 0.0662944, 0.89114, 0.391549, 0.377037, 0.742716, 0.984331, 0.655503, 0.0272983, 0.89127, 0.568701, 0.0292341},
{0.233232, 0.777813, 0.841536, 0.257933, 0.515268, 0.765203, 0.996325, 0.196679, 0.500933, 0.922054, 0.546348, 0.748198, 0.783568, 0.742402, 0.675972, 0.712213, 0.624342, 0.310563, 0.277534, 0.822489, 0.118794, 0.755387, 0.45225, 0.113822, 0.614146, 0.807971, 0.0335962, 0.399256, 0.462797, 0.966804, 0.433464, 0.446882, 0.403072, 0.466638, 0.954858, 0.669563, 0.0823993, 0.38746, 0.207969, 0.109767, 0.772855, 0.840179, 0.922302, 0.527008, 0.483203, 0.988164, 0.441598, 0.0371535, 0.299099, 0.730789, 0.182768, 0.531818, 0.357161, 0.941648, 0.865833, 0.940733, 0.364727, 0.330919, 0.703921, 0.433727, 0.738678, 0.0500847, 0.555269, 0.260857, 0.791314, 0.326574, 0.914864, 0.897922, 0.869661, 0.367835, 0.0862641, 0.31288, 0.907417, 0.0675916, 0.709748, 0.383597, 0.36214, 0.181897, 0.553792, 0.11419, 0.137866, 0.160702, 0.397159, 0.073729, 0.352681, 0.470021, 0.543984, 0.388063, 0.96493, 0.906725, 0.147164, 0.899142, 0.312245, 0.728613, 0.605626, 0.795762, 0.47095, 0.0827304, 0.454367, 0.806671, 0.0588268, 0.0343717, 0.981385, 0.61388, 0.588755, 0.00924816, 0.590019, 0.801938, 0.188873, 0.937464, 0.103384, 0.698972, 0.291892, 0.453569, 0.65602, 0.848706, 0.372925, 0.456759, 0.179588, 0.547727, 0.0955583, 0.456191, 0.534916, 0.747871, 0.986926, 0.440301, 0.424324, 0.452045, 0.512217, 0.500679, 0.966672, 0.0769687, 0.777027, 0.0954931, 0.301135, 0.458546, 0.12782, 0.190025, 0.363475, 0.314591, 0.743196, 0.0540047, 0.693606, 0.391869, 0.472175, 0.790021, 0.871107, 0.664529, 0.515269, 0.417671, 0.510772, 0.917856, 0.15874, 0.329207, 0.651356, 0.276764, 0.168679, 0.53327, 0.335615, 0.8386, 0.676624, 0.921885, 0.965946, 0.545101, 0.427475, 0.52553, 0.393781, 0.78919, 0.434089, 0.956027, 0.888039, 0.719941, 0.75381, 0.349078, 0.165898, 0.748963, 0.121894, 0.786394, 0.681858, 0.73956, 0.430143, 0.31838, 0.198711, 0.985375, 0.613683, 0.117386, 0.678222, 0.747434, 0.782962, 0.899921, 0.640469, 0.356529, 0.144426, 0.389584, 0.484171, 0.812648, 0.600266, 0.614561, 0.426607, 0.478237},
{0.52381, 0.625833, 0.0296973, 0.261188, 0.326973, 0.728651, 0.0896162, 0.0382471, 0.526421, 0.627257, 0.119389, 0.743967, 0.599789, 0.456648, 0.133115, 0.471449, 0.71809, 0.636821, 0.970146, 0.937288, 0.143029, 0.358804, 0.180642, 0.721151, 0.524843, 0.680702, 0.185514, 0.0307525, 0.10154, 0.437082, 0.279246, 0.279485, 0.13018, 0.270045, 0.810415, 0.322397, 0.1878, 0.491814, 0.442801, 0.951123, 0.354831, 0.668813, 0.421152, 0.948817, 0.104539, 0.336993, 0.994152, 0.694978, 0.605151, 0.680158, 0.947707, 0.781413, 0.948164, 0.504285, 0.6952, 0.77289, 0.395295, 0.823931, 0.23695, 0.614956, 0.344636, 0.338377, 0.305122, 0.427802, 0.829198, 0.76657, 0.818594, 0.336372, 0.401418, 0.774359, 0.756465, 0.277711, 0.226697, 0.945261, 0.96908, 0.789883, 0.226553, 0.0370027, 0.612395, 0.981861, 0.199919, 0.596452, 0.439509, 0.511799, 0.973625, 0.829902, 0.368275, 0.170005, 0.954175, 0.581164, 0.601468, 0.491919, 0.393302, 0.391272, 0.775235, 0.717836, 0.132168, 0.923269, 0.09579, 0.53439, 0.236715, 0.897114, 0.415509, 0.787402, 0.856108, 0.375766, 0.319485, 0.301856, 0.940592, 0.955267, 0.706606, 0.90717, 0.0186497, 0.350894, 0.303309, 0.128953, 0.41037, 0.105411, 0.0217415, 0.129534, 0.274792, 0.557767, 0.198658, 0.739369, 0.125156, 0.633376, 0.12174, 0.502755, 0.859402, 0.865866, 0.284617, 0.620494, 0.291376, 0.646949, 0.847784, 0.0346005, 0.650514, 0.843056, 0.16638, 0.752138, 0.495216, 0.809007, 0.716231, 0.96239, 0.800688, 0.455245, 0.144039, 0.76263, 0.368156, 0.735706, 0.478322, 0.839511, 0.468286, 0.941466, 0.624144, 0.0107046, 0.707647, 0.377397, 0.572475, 0.253893, 0.725992, 0.384171, 0.15166, 0.730842, 0.256118, 0.609382, 0.622017, 0.61339, 0.409405, 0.848859, 0.890972, 0.210209, 0.425439, 0.10062, 0.684416, 0.681522, 0.116516, 0.425244, 0.972866, 0.631863, 0.386515, 0.204839, 0.921545, 0.630415, 0.480897, 0.911688, 0.444509, 0.137049, 0.178403, 0.484603, 0.805645, 0.712631, 0.0294346, 0.522502, 0.650411, 0.616309, 0.873954, 0.19362, 0.207064, 0.446908},
{0.154236, 0.613796, 0.081053, 0.817538, 0.95864, 0.120768, 0.985429, 0.15456, 0.450293, 0.651665, 0.575398, 0.0707369, 0.126566, 0.456835, 0.022507, 0.378109, 0.472019, 0.759858, 0.26721, 0.811011, 0.59499, 0.271557, 0.241486, 0.672087, 0.48414, 0.292805, 0.847558, 0.414791, 0.011019, 0.387446, 0.5041, 0.890417, 0.0100015, 0.132543, 0.274877, 0.442386, 0.449428, 0.22891, 0.911737, 0.0588106, 0.720066, 0.670463, 0.483431, 0.340789, 0.129674, 0.750874, 0.506556, 0.694195, 0.556492, 0.742605, 0.3859, 0.515511, 0.785067, 0.887386, 0.122611, 0.844141, 0.798299, 0.0748583, 0.940769, 0.355521, 0.975706, 0.965142, 0.954851, 0.617867, 0.512046, 0.480871, 0.168966, 0.263525, 0.316896, 0.0829713, 0.277774, 0.752791, 0.195964, 0.20808, 0.47759, 0.194562, 0.437664, 0.273841, 0.801168, 0.0572849, 0.506486, 0.735654, 0.101216, 0.759151, 0.131939, 0.277798, 0.544458, 0.279369, 0.0597626, 0.191666, 0.871132, 0.792, 0.0985827, 0.135247, 0.656515, 0.602492, 0.520427, 0.322266, 0.352665, 0.0712121, 0.886797, 0.450782, 0.821222, 0.0307332, 0.934743, 0.483866, 0.367007, 0.0479376, 0.476269, 0.0996937, 0.0994811, 0.544296, 0.547542, 0.186339, 0.995764, 0.912641, 0.151406, 0.350716, 0.0250682, 0.965178, 0.845416, 0.3652, 0.101435, 0.752265, 0.916573, 0.734555, 0.223505, 0.575, 0.754286, 0.920427, 0.61823, 0.79763, 0.266154, 0.2459, 0.852894, 0.834397, 0.305192, 0.0923054, 0.848663, 0.140078, 0.154595, 0.85246, 0.856987, 0.241204, 0.988174, 0.310542, 0.0587041, 0.323578, 0.00581309, 0.59047, 0.305026, 0.259478, 0.190219, 0.422573, 0.885602, 0.442755, 0.274788, 0.713465, 0.794058, 0.0823894, 0.745075, 0.570226, 0.838032, 0.292431, 0.845293, 0.16504, 0.960627, 0.0738069, 0.437024, 0.0790465, 0.52022, 0.57394, 0.0210551, 0.750182, 0.858312, 0.239955, 0.840851, 0.591908, 0.0528781, 0.981551, 0.546387, 7.68374e05, 0.791009, 0.180826, 0.0458581, 0.645669, 0.975395, 0.931382, 0.733724, 0.105636, 0.561319, 0.162328, 0.619056, 0.515551, 0.00977643, 0.233136, 0.657562, 0.0417085, 0.348734, 0.568933},
};

static const std::vector<float> costs = {152.271, 272.214, 196.173, 986.057, 491.694, 137.039, 193.949, 541.659, 369.841, 658.359, 109.244, 834.42, 265.665, 444.361, 875.851, 25.6732, 991.796, 491.436, 838.877, 999.153, 302.941, 108.874, 643.154, 528.203, 787.403, 748.989, 796.984, 48.1607, 206.99, 962.682, 400.859, 253.876, 550.826, 543.798, 3.57903, 696.582, 354.839, 829.157, 695.176, 584.088, 699.162, 591.55, 345.99, 903.324, 216.446, 263.745, 575.096, 43.9533, 115.368, 532.138, 348.014, 501.688, 827.636, 71.8934, 154.379, 621.621, 676.199, 576.141, 777.85, 10.2074, 133.798, 73.4295, 868.324, 86.3196, 225.058, 988.074, 986.528, 433.698, 222.356, 167.945, 314.645, 851.73, 538.51, 914.763, 242.573, 763.92, 646.518, 436.132, 541.758, 656.054, 215.27, 726.943, 53.9037, 223.502, 302.34, 816.176, 26.9738, 21.7126, 263.535, 604.471, 576.538, 165.625, 418.405, 277.366, 749.187, 388.982, 743.983, 503.678, 543.821, 349.95, 281.58, 985.377, 505.381, 139.308, 720.903, 137.484, 732.969, 686.321, 454.945, 32.9839, 177.095, 443.854, 577.116, 500.276, 383.683, 330.077, 665.238, 691.508, 501.618, 798.366, 21.2998, 889.114, 701.675, 10.5165, 7.32012, 654.617, 269.512, 428.997, 981.374, 776.809, 203.004, 845.972, 115.088, 756.216, 44.3052, 183.907, 17.089, 323.437, 855.306, 663.632, 834.151, 302.817, 60.2143, 678.899, 82.8779, 566.248, 106.688, 153.319, 804.553, 370.018, 553.55, 299.215, 197.558, 58.7434, 540.596, 30.775, 592.937, 344.202, 447.631, 194.612, 481.805, 751.612, 147.434, 824.336, 563.554, 445.063, 59.6846, 420.92, 182.928, 460.764, 564.629, 801.174, 579.431, 666.82, 924.553, 53.8181, 681.502, 719.917, 352.068, 965.194, 442.294, 446.041, 862.615, 931.284, 772.706, 36.1711, 879.784, 533.241, 543.102, 296.964, 261.165, 396.126, 94.4982, 936.431, 112.883, 631.379, 33.7815, 89.6677, 546.387, 580.054};

static const std::vector<float> min_impressions = {0.075768, 0.549825, 0.992621, 0.883257, 0.341117};

//
#endif
