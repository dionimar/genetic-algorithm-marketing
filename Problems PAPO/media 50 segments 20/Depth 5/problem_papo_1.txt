#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[46], events[6]),events[22]),events[45]),events[19]),events[32]),cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(events[15], events[14]),events[31]),events[21]),events[2]),events[42]),cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[11], events[31]),events[25]),events[39]),events[3]),events[22]),cons_excl(cons_indep(cons_indep(cons_incl(cons_indep(events[18], events[45]),events[31]),events[0]),events[5]),events[17]),cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[0], events[28]),events[25]),events[9]),events[4]),events[33]),cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(events[12], events[16]),events[9]),events[21]),events[22]),events[35]),cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(events[14], events[21]),events[36]),events[11]),events[0]),events[24]),cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(events[15], events[13]),events[36]),events[23]),events[10]),events[25]),cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(events[15], events[29]),events[13]),events[10]),events[48]),events[26]),cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(events[10], events[39]),events[48]),events[27]),events[45]),events[3]),cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(events[49], events[38]),events[14]),events[20]),events[16]),events[22]),cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(events[33], events[11]),events[17]),events[5]),events[3]),events[34]),cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(events[35], events[49]),events[26]),events[32]),events[27]),events[9]),cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[24], events[20]),events[11]),events[32]),events[1]),events[8]),cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[31], events[7]),events[21]),events[15]),events[35]),events[29]),cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(events[41], events[39]),events[0]),events[34]),events[12]),events[45]),cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[25], events[26]),events[16]),events[7]),events[39]),events[37]),cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(events[39], events[38]),events[27]),events[46]),events[24]),events[5]),cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(events[33], events[17]),events[36]),events[37]),events[16]),events[23]),cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(events[24], events[37]),events[7]),events[32]),events[6]),events[44])};


static const std::vector< std::vector<float> > prob = {{0.0996089, 0.101562, 0.242993, 0.936621, 0.195357, 0.974613, 0.611034, 0.204217, 0.837431, 0.0733222, 0.623228, 0.561599, 0.946883, 0.568918, 0.23943, 0.0600831, 0.876848, 0.0870946, 0.79931, 0.803736, 0.558318, 0.879521, 0.233343, 0.769087, 0.912635, 0.97879, 0.312525, 0.342843, 0.460504, 0.396288, 0.282217, 0.529041, 0.216702, 0.123057, 0.575028, 0.137472, 0.00609315, 0.588511, 0.515798, 0.996609, 0.399435, 0.298906, 0.429928, 0.400955, 0.0550997, 0.822936, 0.383395, 0.448686, 0.853845, 0.218005},
{0.522519, 0.176868, 0.05538, 0.118202, 0.295586, 0.407756, 0.312742, 0.265595, 0.670477, 0.729621, 0.200391, 0.056429, 0.935252, 0.883412, 0.909427, 0.840287, 0.0749571, 0.139493, 0.49402, 0.546447, 0.0244404, 0.925274, 0.310665, 0.265245, 0.363338, 0.257403, 0.0654421, 0.725838, 0.971509, 0.300469, 0.669469, 0.938259, 0.882926, 0.707387, 0.279597, 0.0478906, 0.737204, 0.102876, 0.57311, 0.708468, 0.363051, 0.499701, 0.785814, 0.74066, 0.153863, 0.578941, 0.119129, 0.83506, 0.618727, 0.0202171},
{0.597563, 0.996453, 0.0609716, 0.234977, 0.587077, 0.309969, 0.639795, 0.00269685, 0.855034, 0.235414, 0.705359, 0.190056, 0.43731, 0.17442, 0.856573, 0.313962, 0.823994, 0.151689, 0.450295, 0.00910141, 0.578581, 0.909252, 0.838951, 0.584724, 0.454545, 0.209429, 0.838765, 0.868305, 0.80602, 0.481126, 0.13306, 0.976627, 0.253362, 0.19378, 0.401463, 0.898879, 0.810645, 0.680269, 0.570748, 0.712703, 0.883593, 0.63061, 0.692833, 0.235399, 0.24865, 0.249109, 0.27949, 0.754963, 0.785781, 0.423423},
{0.213065, 0.465994, 0.438937, 0.933755, 0.649303, 0.482147, 0.780922, 0.333165, 0.423213, 0.0890402, 0.688759, 0.81504, 0.627169, 0.987431, 0.448155, 0.545785, 0.704056, 0.493946, 0.526489, 0.177127, 0.333725, 0.629832, 0.192043, 0.973713, 0.415054, 0.529936, 0.347371, 0.707602, 0.803732, 0.283292, 0.0416312, 0.782506, 0.152702, 0.842837, 0.3816, 0.735991, 0.226652, 0.328198, 0.173937, 0.901004, 0.0222607, 0.73207, 0.919605, 0.307869, 0.402734, 0.854156, 0.78394, 0.28999, 0.513293, 0.619942},
{0.566029, 0.554933, 0.705442, 0.850752, 0.758984, 0.193733, 0.236835, 0.853429, 0.363182, 0.215293, 0.145272, 0.134504, 0.278709, 0.0453091, 0.773202, 0.966059, 0.450161, 0.66599, 0.498722, 0.195106, 0.563391, 0.520415, 0.90409, 0.678634, 0.444093, 0.0433552, 0.109553, 0.748061, 0.749062, 0.34326, 0.331373, 0.211892, 0.87841, 0.550344, 0.818311, 0.667835, 0.619259, 0.670759, 0.497825, 0.303503, 0.594696, 0.302173, 0.506082, 0.418189, 0.539875, 0.277502, 0.919625, 0.784858, 0.996234, 0.720065},
{0.237896, 0.271902, 0.205332, 0.301282, 0.350576, 0.491099, 0.265182, 0.690793, 0.557722, 0.908466, 0.791544, 0.11832, 0.271174, 0.145091, 0.267349, 0.205217, 0.47221, 0.156641, 0.91409, 0.49411, 0.716924, 0.315203, 0.12977, 0.0403235, 0.0191584, 0.953479, 0.208582, 0.162333, 0.323036, 0.822432, 0.809953, 0.730271, 0.00585006, 0.315151, 0.261642, 0.93575, 0.881953, 0.426502, 0.776764, 0.528163, 0.694519, 0.61645, 0.109296, 0.587476, 0.433742, 0.793627, 0.609315, 0.592192, 0.00537473, 0.530605},
{0.674896, 0.450678, 0.0150019, 0.686157, 0.321356, 0.799092, 0.431599, 0.678962, 0.809378, 0.970402, 0.368643, 0.460348, 0.613404, 0.627794, 0.852676, 0.562374, 0.774915, 0.177051, 0.682999, 0.710219, 0.0499983, 0.29891, 0.789162, 0.936699, 0.929358, 0.390999, 0.851359, 0.525892, 0.786712, 0.297912, 0.102336, 0.737347, 0.723465, 0.19323, 0.893621, 0.643678, 0.724657, 0.985727, 0.616263, 0.416742, 0.497247, 0.876503, 0.117688, 0.530477, 0.552414, 0.621775, 0.859044, 0.888944, 0.0325617, 0.53802},
{0.430618, 0.913987, 0.654557, 0.369029, 0.369875, 0.39927, 0.480862, 0.927711, 0.26837, 0.0279197, 0.828606, 0.989683, 0.382092, 0.162873, 0.151813, 0.558185, 0.343993, 0.884912, 0.89206, 0.90933, 0.879166, 0.884742, 0.127162, 0.394074, 0.604956, 0.49039, 0.400718, 0.692482, 0.179117, 0.00482098, 0.762208, 0.57765, 0.829873, 0.742623, 0.819605, 0.248947, 0.366423, 0.796371, 0.640782, 0.370445, 0.308042, 0.663682, 0.101709, 0.990515, 0.113833, 0.87841, 0.603734, 0.471863, 0.628785, 0.209108},
{0.267895, 0.000546952, 0.320136, 0.470893, 0.434947, 0.936213, 0.828516, 0.84916, 0.811822, 0.493313, 0.496303, 0.629094, 0.872177, 0.346272, 0.919113, 0.211911, 0.945347, 0.109813, 0.316164, 0.884617, 0.324725, 0.956485, 0.393704, 0.61974, 0.482952, 0.526157, 0.173981, 0.772708, 0.242936, 0.165608, 0.166746, 0.259107, 0.773339, 0.462875, 0.605999, 0.386765, 0.103625, 0.226966, 0.15508, 0.491137, 0.476966, 0.76842, 0.848417, 0.268115, 0.362443, 0.412331, 0.964956, 0.378568, 0.545917, 0.312921},
{0.604372, 0.621012, 0.296077, 0.63668, 0.018748, 0.913744, 0.195223, 0.272357, 0.719119, 0.565538, 0.509817, 0.00509771, 0.797355, 0.081784, 0.0184677, 0.564717, 0.0246419, 0.951207, 0.989241, 0.510878, 0.816483, 0.0714245, 0.466845, 0.134521, 0.573078, 0.590182, 0.0732157, 0.173451, 0.889894, 0.577209, 0.754828, 0.531568, 0.675691, 0.148548, 0.191395, 0.280044, 0.27664, 0.8176, 0.857623, 0.00847053, 0.260651, 0.937401, 0.938377, 0.907443, 0.907314, 0.827039, 0.873514, 0.855825, 0.0104606, 0.558563},
{0.937854, 0.728017, 0.119474, 0.334314, 0.975061, 0.248405, 0.606351, 0.0788092, 0.576693, 0.389561, 0.747432, 0.568962, 0.319689, 0.632803, 0.519544, 0.406535, 0.542939, 0.0170338, 0.384976, 0.142883, 0.72674, 0.777726, 0.161997, 0.815018, 0.779238, 0.0103212, 0.878057, 0.542263, 0.180822, 0.128156, 0.313682, 0.208238, 0.813425, 0.675098, 0.102371, 0.867893, 0.772585, 0.0509137, 0.284592, 0.40844, 0.707994, 0.145006, 0.705581, 0.894019, 0.0375541, 0.195408, 0.841544, 0.00803745, 0.820509, 0.365031},
{0.0669048, 0.035619, 0.734817, 0.123801, 0.734824, 0.202094, 0.0207106, 0.942106, 0.0277853, 0.964059, 0.839213, 0.309759, 0.208032, 0.786503, 0.0674378, 0.74228, 0.12406, 0.530796, 0.111732, 0.35515, 0.211084, 0.496684, 0.480369, 0.332324, 0.696551, 0.278147, 0.0824079, 0.682595, 0.0976292, 0.970756, 0.542543, 0.70182, 0.0391959, 0.027762, 0.999393, 0.31335, 0.764616, 0.487106, 0.745588, 0.501669, 0.0362753, 0.17673, 0.995653, 0.318534, 0.398861, 0.528846, 0.200437, 0.100335, 0.211779, 0.349742},
{0.961, 0.0467279, 0.752196, 0.861937, 0.781832, 0.518782, 0.804769, 0.504994, 0.923074, 0.311928, 0.461157, 0.932155, 0.616467, 0.440431, 0.661678, 0.504375, 0.959124, 0.523528, 0.498235, 0.465919, 0.0609254, 0.557338, 0.811565, 0.225747, 0.0552571, 0.514243, 0.838821, 0.714521, 0.508749, 0.870353, 0.208722, 0.0830855, 0.201975, 0.538765, 0.433305, 0.342106, 0.431655, 0.321784, 0.141113, 0.747928, 0.710248, 0.956358, 0.523328, 0.37293, 0.820766, 0.500015, 0.48407, 0.614792, 0.141355, 0.0875462},
{0.777275, 0.609215, 0.837631, 0.169506, 0.160722, 0.956884, 0.52477, 0.370119, 0.973971, 0.955453, 0.730976, 0.636143, 0.566815, 0.742433, 0.490562, 0.0447308, 0.818622, 0.63833, 0.845842, 0.188321, 0.924855, 0.703993, 0.195889, 0.311508, 0.840285, 0.0765576, 0.619215, 0.416478, 0.161694, 0.128297, 0.730693, 0.0434865, 0.207066, 0.50148, 0.387691, 0.108939, 0.743283, 0.166526, 0.909965, 0.159969, 0.348223, 0.878463, 0.258298, 0.485749, 0.921031, 0.229452, 0.70917, 0.15009, 0.522144, 0.848602},
{0.160756, 0.539429, 0.827065, 0.57479, 0.891782, 0.0230236, 0.447171, 0.709275, 0.624881, 0.887639, 0.345645, 0.72757, 0.59456, 0.701033, 0.374691, 0.0638941, 0.615387, 0.0210988, 0.96348, 0.471211, 0.965586, 0.572051, 0.525652, 0.875126, 0.129303, 0.768774, 0.0936881, 0.226653, 0.518739, 0.174944, 0.795146, 0.606705, 0.593038, 0.569672, 0.847839, 0.677953, 0.174304, 0.599082, 0.101391, 0.0140529, 0.305975, 0.375321, 0.562257, 0.91307, 0.884946, 0.744082, 0.783205, 0.0158054, 0.989735, 0.308024},
{0.663972, 0.147871, 0.664251, 0.0887704, 0.574992, 0.726687, 0.178318, 0.142397, 0.0411368, 0.26506, 0.872169, 0.3928, 0.534481, 0.460432, 0.733168, 0.226154, 0.168313, 0.0713238, 0.746411, 0.225901, 0.181852, 0.308504, 0.968039, 0.497223, 0.673356, 0.804237, 0.389035, 0.467556, 0.628899, 0.341377, 0.546739, 0.55785, 0.883546, 0.546089, 0.378557, 0.968434, 0.863003, 0.710002, 0.697127, 0.599156, 0.995326, 0.389328, 0.0511076, 0.590716, 0.347739, 0.11916, 0.320322, 0.0857429, 0.564364, 0.324241},
{0.181117, 0.422952, 0.990825, 0.302458, 0.723408, 0.297525, 0.172422, 0.842418, 0.345939, 0.430592, 0.330503, 0.117284, 0.224536, 0.0677634, 0.395444, 0.123705, 0.381006, 0.0909263, 0.181576, 0.199595, 0.449934, 0.360477, 0.328193, 0.396092, 0.584472, 0.172612, 0.246323, 0.23858, 0.160173, 0.37937, 0.593536, 0.0987936, 0.36677, 0.148458, 0.343987, 0.482646, 0.412404, 0.986798, 0.0505433, 0.53054, 0.843123, 0.817085, 0.176553, 0.700301, 0.142333, 0.742666, 0.475755, 0.84766, 0.765987, 0.281226},
{0.0326383, 0.545274, 0.427187, 0.32167, 0.460431, 0.081582, 0.955551, 0.958204, 0.8716, 0.24081, 0.88788, 0.533549, 0.170545, 0.875811, 0.928659, 0.176727, 0.539564, 0.905118, 0.248566, 0.886279, 0.839534, 0.236744, 0.0823745, 0.962567, 0.886579, 0.640962, 0.464558, 0.231129, 0.58592, 0.852383, 0.0090235, 0.968854, 0.333014, 0.0312928, 0.511086, 0.218345, 0.665037, 0.845396, 0.0569728, 0.580264, 0.252252, 0.15737, 0.684755, 0.262905, 0.997421, 0.0230693, 0.802339, 0.546096, 0.84034, 0.62466},
{0.679256, 0.822124, 0.264502, 0.38503, 0.621799, 0.142829, 0.148734, 0.872292, 0.859162, 0.650324, 0.368366, 0.0842675, 0.701537, 0.816086, 0.64979, 0.297794, 0.734132, 0.518226, 0.547748, 0.899356, 0.654329, 0.834403, 0.0831369, 0.623204, 0.284419, 0.395718, 0.368218, 0.739899, 0.194479, 0.171164, 0.561203, 0.364104, 0.923554, 0.929797, 0.950398, 0.425743, 0.536045, 0.860717, 0.688258, 0.382989, 0.182446, 0.494981, 0.925556, 0.498081, 0.930497, 0.218413, 0.668238, 0.804623, 0.204155, 0.914289},
{0.629583, 0.184276, 0.928196, 0.95257, 0.572909, 0.218842, 0.976524, 0.747531, 0.0505053, 0.289378, 0.536456, 0.575973, 0.883471, 0.804382, 0.603567, 0.805055, 0.411765, 0.507563, 0.734391, 0.367157, 0.920415, 0.283197, 0.864704, 0.0743557, 0.324686, 0.667615, 0.476979, 0.386938, 0.625542, 0.135292, 0.585104, 0.423068, 0.871213, 0.381222, 0.848026, 0.157498, 0.848592, 0.237749, 0.195507, 0.0127529, 0.0521075, 0.262024, 0.00596784, 0.206418, 0.32309, 0.639479, 0.684259, 0.521377, 0.434151, 0.146199},
};

static const std::vector<float> costs = {197.976, 849.808, 802.96, 483.699, 576.196, 515.169, 117.581, 922.799, 406.575, 718.313, 732.679, 109.599, 551.123, 729.239, 932.963, 546.258, 450.263, 350.041, 14.4535, 66.2385, 947.121, 901.733, 118.378, 351.91, 574.962, 821.568, 980.196, 92.7312, 101.689, 62.1462, 262.328, 130.208, 883.502, 551.355, 479.933, 701.188, 576.928, 16.4157, 234.097, 564.536, 309.558, 889.221, 37.4082, 522.716, 530.744, 324.936, 718.889, 495.348, 907.95, 420.741};

static const std::vector<float> min_impressions = {0.271076, 0.751505, 0.673088, 0.794093, 0.337277, 0.122529, 0.346543, 0.417175, 0.47061, 0.672056, 0.00678722, 0.960362, 0.978832, 0.700551, 0.0041275, 0.0417549, 0.856793, 0.314548, 0.0562475, 0.0638832};

//
#endif
