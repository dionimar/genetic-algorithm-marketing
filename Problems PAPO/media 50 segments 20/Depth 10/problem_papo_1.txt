#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(events[29], events[44]),events[38]),events[20]),events[36]),events[49]),events[23]),events[28]),events[43]),events[30]),events[4]),cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[24], events[16]),events[12]),events[45]),events[3]),events[46]),events[25]),events[11]),events[36]),events[49]),events[38]),cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(events[2], events[43]),events[4]),events[17]),events[7]),events[26]),events[0]),events[36]),events[8]),events[16]),events[25]),cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_indep(events[25], events[48]),events[27]),events[45]),events[14]),events[7]),events[38]),events[8]),events[22]),events[23]),events[28]),cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(events[42], events[11]),events[31]),events[26]),events[38]),events[28]),events[12]),events[25]),events[5]),events[36]),events[49]),cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(events[38], events[6]),events[46]),events[29]),events[43]),events[26]),events[12]),events[22]),events[25]),events[14]),events[20]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(events[34], events[39]),events[45]),events[35]),events[0]),events[48]),events[36]),events[25]),events[44]),events[31]),events[29]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(events[7], events[33]),events[18]),events[5]),events[20]),events[30]),events[23]),events[36]),events[15]),events[13]),events[8]),cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(events[0], events[7]),events[1]),events[2]),events[15]),events[47]),events[5]),events[27]),events[21]),events[8]),events[35]),cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(events[27], events[41]),events[7]),events[0]),events[35]),events[9]),events[4]),events[40]),events[19]),events[22]),events[36]),cons_excl(cons_indep(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(events[14], events[43]),events[23]),events[25]),events[7]),events[5]),events[0]),events[21]),events[44]),events[22]),events[19]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(events[44], events[41]),events[31]),events[47]),events[25]),events[36]),events[24]),events[23]),events[20]),events[42]),events[29]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(cons_incl(events[27], events[15]),events[33]),events[45]),events[32]),events[46]),events[9]),events[25]),events[49]),events[31]),events[23]),cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(events[19], events[10]),events[9]),events[25]),events[36]),events[24]),events[2]),events[31]),events[11]),events[7]),events[49]),cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(events[4], events[15]),events[11]),events[39]),events[38]),events[17]),events[26]),events[18]),events[33]),events[34]),events[13]),cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(events[49], events[39]),events[22]),events[27]),events[30]),events[26]),events[35]),events[20]),events[7]),events[5]),events[38]),cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(events[18], events[7]),events[32]),events[26]),events[6]),events[20]),events[21]),events[23]),events[47]),events[36]),events[40]),cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(events[21], events[27]),events[11]),events[20]),events[26]),events[1]),events[43]),events[37]),events[31]),events[30]),events[39]),cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(events[38], events[5]),events[33]),events[7]),events[15]),events[10]),events[26]),events[23]),events[21]),events[0]),events[20]),cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(events[0], events[33]),events[7]),events[48]),events[34]),events[40]),events[37]),events[25]),events[8]),events[38]),events[42])};


static const std::vector< std::vector<float> > prob = {{0.885388, 0.171827, 0.278104, 0.704416, 0.0429204, 0.462562, 0.927553, 0.407798, 0.536917, 0.911181, 0.119921, 0.624929, 0.836568, 0.0240858, 0.676572, 0.76555, 0.158382, 0.15567, 0.269915, 0.555158, 0.520719, 0.733824, 0.666291, 0.896659, 0.758386, 0.864171, 0.545229, 0.0159713, 0.534166, 0.506547, 0.80961, 0.418584, 0.032923, 0.713684, 0.700208, 0.0302458, 0.473732, 0.431793, 0.111326, 0.394079, 0.889334, 0.931998, 0.973845, 0.199494, 0.277599, 0.685783, 0.144926, 0.0175145, 0.796217, 0.358593},
{0.140143, 0.993449, 0.97743, 0.873803, 0.902319, 0.833129, 0.924551, 0.831486, 0.883275, 0.193483, 0.538643, 0.87202, 0.04576, 0.926039, 0.284741, 0.579503, 0.413354, 0.474797, 0.73983, 0.544175, 0.310382, 0.738054, 0.884032, 0.557844, 0.185465, 0.372688, 0.437704, 0.832139, 0.484885, 0.793947, 0.583243, 0.889548, 0.135062, 0.206247, 0.931843, 0.530833, 0.99137, 0.0265024, 0.221953, 0.0794631, 0.0822924, 0.411294, 0.882606, 0.58362, 0.696232, 0.28499, 0.500005, 0.906502, 0.417993, 0.785716},
{0.869551, 0.911898, 0.240774, 0.751523, 0.253884, 0.415706, 0.844702, 0.521852, 0.329376, 0.204988, 0.135492, 0.400918, 0.96666, 0.0155504, 0.659013, 0.118394, 0.747141, 0.923701, 0.560347, 0.0233015, 0.420985, 0.893266, 0.554652, 0.444225, 0.250339, 0.803266, 0.221131, 0.504888, 0.267234, 0.0854875, 0.348879, 0.923262, 0.360068, 0.920496, 0.115047, 0.283059, 0.373907, 0.205655, 0.0364675, 0.968366, 0.287064, 0.109591, 0.604035, 0.849236, 0.363317, 0.541008, 0.232615, 0.740359, 0.703908, 0.480183},
{0.729875, 0.764427, 0.702928, 0.140055, 0.195752, 0.159585, 0.573619, 0.859124, 0.483416, 0.36187, 0.551794, 0.423506, 0.285961, 0.262114, 0.827598, 0.669742, 0.208571, 0.959671, 0.126063, 0.0405046, 0.963942, 0.812699, 0.5414, 0.292612, 0.159912, 0.422985, 0.0109184, 0.963272, 0.778155, 0.528136, 0.0552275, 0.608836, 0.832991, 0.294564, 0.494921, 0.384911, 0.858653, 0.760837, 0.597533, 0.284593, 0.823718, 0.674971, 0.00567611, 0.510737, 0.294418, 0.783608, 0.32028, 0.432493, 0.875464, 0.252627},
{0.952511, 0.0591953, 0.0197542, 0.388252, 0.897072, 0.92478, 0.829975, 0.490535, 0.975404, 0.747777, 0.478483, 0.0332402, 0.471753, 0.598947, 0.408394, 0.129588, 0.628683, 0.998515, 0.82798, 0.439877, 0.400179, 0.912793, 0.327424, 0.945149, 0.651978, 0.118774, 0.789212, 0.553673, 0.576172, 0.898467, 0.723132, 0.399523, 0.149768, 0.0533211, 0.357656, 0.722459, 0.557856, 0.819628, 0.754454, 0.351587, 0.267332, 0.31468, 0.964976, 0.937702, 0.133635, 0.408484, 0.893417, 0.123436, 0.0198273, 0.871729},
{0.394786, 0.157005, 0.387803, 0.607439, 0.685773, 0.572267, 0.0307412, 0.294992, 0.599147, 0.552275, 0.658548, 0.757691, 0.384931, 0.0751686, 0.805791, 0.00906691, 0.357089, 0.180917, 0.934329, 0.28732, 0.211003, 0.940612, 0.805699, 0.0275867, 0.637901, 0.617062, 0.766858, 0.42088, 0.539764, 0.662669, 0.928588, 0.507709, 0.195716, 0.0136767, 0.155694, 0.95682, 0.279615, 0.0794128, 0.461293, 0.69269, 0.573438, 0.828167, 0.633776, 0.773927, 0.473696, 0.139435, 0.221819, 0.349545, 0.103853, 0.723721},
{0.211738, 0.52687, 0.568228, 0.466482, 0.17078, 0.135135, 0.319926, 0.504589, 0.928577, 0.913217, 0.158887, 0.361971, 0.697773, 0.770599, 0.241538, 0.991372, 0.414699, 0.381606, 0.393151, 0.886345, 0.615714, 0.623587, 0.620771, 0.598117, 0.155486, 0.0916792, 0.989379, 0.241729, 0.956268, 0.315149, 0.258514, 0.217489, 0.902469, 0.530384, 0.314903, 0.0859897, 0.69486, 0.0703073, 0.630094, 0.309945, 0.962922, 0.69322, 0.101243, 0.65829, 0.744963, 0.379345, 0.359034, 0.445788, 0.411524, 0.864585},
{0.209576, 0.697405, 0.14809, 0.702307, 0.560433, 0.753744, 0.627166, 0.204201, 0.907123, 0.710966, 0.534298, 0.220498, 0.694867, 0.406402, 0.361339, 0.344265, 0.343594, 0.428614, 0.0119072, 0.780446, 0.725569, 0.51785, 0.127575, 0.630833, 0.220976, 0.803169, 0.584998, 0.0830035, 0.946763, 0.528169, 0.913298, 0.183383, 0.060779, 0.585189, 0.546296, 0.567142, 0.703341, 0.672602, 0.192171, 0.521993, 0.227826, 0.0697808, 0.426831, 0.219064, 0.00241323, 0.534849, 0.723505, 0.678388, 0.906912, 0.0251566},
{0.962911, 0.390313, 0.596688, 0.791056, 0.875652, 0.366795, 0.160934, 0.696279, 0.0661003, 0.591194, 0.152218, 0.366068, 0.561086, 0.285182, 0.211952, 0.318176, 0.395307, 0.362139, 0.146196, 0.193883, 0.673305, 0.373302, 0.730653, 0.112383, 0.436153, 0.0294508, 0.822074, 0.73621, 0.424274, 0.235111, 0.283893, 0.127694, 0.069175, 0.833172, 0.0864163, 0.362277, 0.509975, 0.427495, 0.0514184, 0.647122, 0.0756315, 0.243183, 0.413895, 0.76692, 0.912996, 0.384072, 0.628559, 0.9648, 0.933976, 0.767835},
{0.572095, 0.68788, 0.920543, 0.303941, 0.989746, 0.067224, 0.165027, 0.0872209, 0.761293, 0.690955, 0.867078, 0.772829, 0.912777, 0.951325, 0.718808, 0.969566, 0.612633, 0.717955, 0.765941, 0.527096, 0.979841, 0.951353, 0.124449, 0.098636, 0.148249, 0.176688, 0.37252, 0.382195, 0.470173, 0.159798, 0.342774, 0.684791, 0.602269, 0.412617, 0.891928, 0.7789, 0.352369, 0.656484, 0.286923, 0.143424, 0.255747, 0.789316, 0.127877, 0.893896, 0.568524, 0.0877865, 0.853598, 0.833773, 0.0214863, 0.535338},
{0.825737, 0.800139, 0.0309731, 0.89798, 0.606111, 0.711898, 0.199592, 0.0256235, 0.471584, 0.760768, 0.802651, 0.30226, 0.480203, 0.715968, 0.0310966, 0.470871, 0.673832, 0.499154, 0.997867, 0.69093, 0.485866, 0.0955503, 0.29546, 0.89992, 0.164077, 0.10461, 0.259824, 0.0640873, 0.572769, 0.594528, 0.980797, 0.936711, 0.932288, 0.0970555, 0.790281, 0.851029, 0.412933, 0.0207431, 0.062858, 0.637133, 0.628533, 0.670477, 0.745175, 0.189296, 0.287307, 0.193537, 0.815666, 0.892806, 0.479573, 0.577274},
{0.10158, 0.152553, 0.611583, 0.178512, 0.959792, 0.626133, 0.953729, 0.838166, 0.610528, 0.4477, 0.339476, 0.383494, 0.809715, 0.411142, 0.051551, 0.316002, 0.0682709, 0.0970334, 0.640965, 0.505546, 0.189032, 0.496274, 0.400332, 0.827126, 0.167081, 0.554543, 0.580436, 0.794449, 0.505172, 0.490136, 0.650026, 0.685036, 0.338731, 0.965459, 0.310074, 0.660793, 0.0820627, 0.409831, 0.361703, 0.803914, 0.919104, 0.120216, 0.743477, 0.158257, 0.398067, 0.977488, 0.576897, 0.416012, 0.90789, 0.259375},
{0.117393, 0.669161, 0.416494, 0.00273436, 0.931119, 0.470855, 0.116288, 0.51083, 0.259618, 0.367378, 0.517119, 0.419657, 0.385816, 0.892899, 0.118117, 0.0241382, 0.986709, 0.864068, 0.17039, 0.265006, 0.581145, 0.123801, 0.818261, 0.962183, 0.313687, 0.0314506, 0.421147, 0.851462, 0.892864, 0.631917, 0.0817116, 0.208234, 0.0453845, 0.786595, 0.90233, 0.77501, 0.252859, 0.936397, 0.283058, 0.757365, 0.271196, 0.550286, 0.351682, 0.631169, 0.929706, 0.106473, 0.495161, 0.117519, 0.698265, 0.918119},
{0.372243, 0.588647, 0.966006, 0.902799, 0.630177, 0.688621, 0.887047, 0.0889978, 0.726568, 0.303667, 0.265028, 0.627364, 0.105495, 0.598759, 0.165113, 0.391771, 0.176417, 0.0275905, 0.833019, 0.532899, 0.303726, 0.711001, 0.528158, 0.0297486, 0.500583, 0.84639, 0.943611, 0.316547, 0.297003, 0.278409, 0.173891, 0.249946, 0.309018, 0.0137804, 0.805272, 0.631499, 0.210384, 0.938014, 0.171435, 0.608224, 0.267554, 0.78543, 0.954265, 0.25884, 0.982067, 0.330642, 0.376021, 0.338788, 0.782544, 0.880829},
{0.850701, 0.369524, 0.727986, 0.846067, 0.89767, 0.165131, 0.470057, 0.913199, 0.776651, 0.938527, 0.592096, 0.601521, 0.149119, 0.420759, 0.616153, 0.236954, 0.255711, 0.0413431, 0.998456, 0.410733, 0.952391, 0.785243, 0.803722, 0.0101999, 0.462933, 0.0616666, 0.815422, 0.924135, 0.512131, 0.289845, 0.951772, 0.940902, 0.277345, 0.87157, 0.567705, 0.156401, 0.700205, 0.296623, 0.763529, 0.339549, 0.517552, 0.649318, 0.572557, 0.479306, 0.904427, 0.0646354, 0.482107, 0.803323, 0.252629, 0.249292},
{0.478765, 0.207342, 0.578861, 0.224386, 0.974847, 0.487146, 0.378308, 0.446438, 0.489881, 0.138647, 0.467771, 0.221345, 0.679729, 0.850989, 0.629048, 0.328612, 0.935115, 0.542451, 0.466213, 0.703639, 0.536481, 0.178504, 0.954524, 0.164109, 0.549255, 0.162103, 0.843506, 0.779029, 0.675787, 0.865591, 0.421674, 0.965849, 0.128127, 0.920808, 0.376523, 0.669504, 0.858096, 0.740721, 0.970357, 0.963426, 0.686838, 0.581467, 0.264793, 0.697928, 0.637892, 0.711896, 0.681493, 0.816374, 0.259834, 0.368382},
{0.314, 0.434301, 0.528, 0.323652, 0.768474, 0.157879, 0.627492, 0.940405, 0.689924, 0.480061, 0.238059, 0.770009, 0.439336, 0.415841, 0.653331, 0.461643, 0.960368, 0.114369, 0.791042, 0.579628, 0.547788, 0.107173, 0.583678, 0.766903, 0.42222, 0.592206, 0.0648797, 0.374986, 0.52686, 0.681942, 0.776977, 0.0337745, 0.0321157, 0.65062, 0.80508, 0.189105, 0.0702177, 0.227237, 0.09131, 0.341645, 0.65393, 0.0584919, 0.679236, 0.46122, 0.895015, 0.873863, 0.803998, 0.820663, 0.674198, 0.898288},
{0.713163, 0.0408569, 0.129105, 0.823669, 0.451539, 0.395607, 0.0609761, 0.263349, 0.20689, 0.226882, 0.832044, 0.106084, 0.177628, 0.163204, 0.210647, 0.955325, 0.258131, 0.842251, 0.930898, 0.603361, 0.428311, 0.461691, 0.0657835, 0.0197135, 0.909299, 0.471878, 0.778569, 0.659558, 0.640031, 0.015708, 0.106569, 0.853613, 0.942582, 0.460986, 0.606326, 0.0500704, 0.482801, 0.0829651, 0.978606, 0.35403, 0.643109, 0.296845, 0.860137, 0.545201, 0.0981419, 0.601809, 0.571708, 0.323746, 0.162525, 0.819702},
{0.397196, 0.162456, 0.467459, 0.955574, 0.44305, 0.355301, 0.660438, 0.757337, 0.734097, 0.985837, 0.902888, 0.228443, 0.0582812, 0.114389, 0.0693696, 0.581224, 0.409065, 0.403376, 0.0596391, 0.789173, 0.373939, 0.871099, 0.0790381, 0.0392985, 0.799016, 0.61858, 0.444972, 0.398456, 0.551347, 0.59103, 0.188565, 0.618849, 0.0299987, 0.526716, 0.526317, 0.577249, 0.0880104, 0.898991, 0.565257, 0.0431868, 0.808171, 0.468191, 0.982788, 0.125953, 0.363769, 0.643306, 0.252371, 0.440868, 0.651278, 0.211619},
{0.493496, 0.746271, 0.19528, 0.071123, 0.616263, 0.513386, 0.732691, 0.688989, 0.905223, 0.289177, 0.0108168, 0.464509, 0.221887, 0.0697683, 0.365983, 0.610494, 0.14055, 0.32103, 0.706678, 0.445593, 0.374128, 0.834401, 0.697411, 0.511875, 0.914017, 0.507773, 0.986347, 0.0515972, 0.271258, 0.119537, 0.828484, 0.357826, 0.0272969, 0.651685, 0.43069, 0.0356093, 0.946434, 0.614412, 0.190394, 0.734895, 0.739285, 0.89406, 0.601585, 0.665452, 0.902838, 0.541782, 0.538154, 0.946228, 0.535591, 0.667526},
};

static const std::vector<float> costs = {495.151, 105.527, 515.454, 605.758, 950.068, 861.164, 177.934, 870.88, 159.038, 888.981, 731.124, 68.6639, 226.371, 484.453, 997.074, 504.013, 534.335, 802.323, 368.055, 489.188, 540.006, 96.7809, 831.939, 249.934, 331.044, 382.602, 45.3315, 217.154, 4.28401, 157.001, 955.985, 666.911, 325.883, 997.547, 489.037, 296.462, 776.641, 214.579, 436.433, 378.725, 173.533, 2.16606, 3.74758, 6.28568, 534.429, 727.312, 774.782, 327.8, 738.288, 345.793};

static const std::vector<float> min_impressions = {0.55716, 0.783865, 0.344808, 0.583671, 0.760696, 0.851672, 0.768739, 0.804776, 0.0340944, 0.500838, 0.997857, 0.935356, 0.848933, 0.0780017, 0.0676807, 0.967889, 0.302968, 0.776144, 0.498955, 0.943979};

//
#endif
