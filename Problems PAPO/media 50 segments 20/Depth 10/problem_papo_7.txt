#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(events[28], events[11]),events[17]),events[46]),events[7]),events[14]),events[43]),events[15]),events[39]),events[37]),events[20]),cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(events[49], events[22]),events[23]),events[11]),events[38]),events[28]),events[2]),events[21]),events[30]),events[43]),events[36]),cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(events[42], events[11]),events[20]),events[9]),events[26]),events[10]),events[17]),events[33]),events[5]),events[49]),events[18]),cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(events[17], events[41]),events[6]),events[7]),events[9]),events[2]),events[46]),events[38]),events[0]),events[30]),events[34]),cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(events[4], events[37]),events[6]),events[41]),events[15]),events[5]),events[7]),events[2]),events[34]),events[35]),events[43]),cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(events[46], events[1]),events[7]),events[29]),events[20]),events[37]),events[39]),events[43]),events[4]),events[23]),events[42]),cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[19], events[1]),events[8]),events[4]),events[14]),events[39]),events[20]),events[49]),events[5]),events[6]),events[28]),cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(events[3], events[20]),events[6]),events[12]),events[34]),events[28]),events[38]),events[14]),events[25]),events[47]),events[21]),cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[14], events[32]),events[0]),events[48]),events[9]),events[23]),events[39]),events[34]),events[18]),events[12]),events[3]),cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(events[3], events[11]),events[27]),events[25]),events[35]),events[10]),events[19]),events[8]),events[48]),events[15]),events[49]),cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(events[33], events[40]),events[17]),events[35]),events[14]),events[41]),events[21]),events[25]),events[1]),events[28]),events[5]),cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(events[21], events[20]),events[33]),events[12]),events[24]),events[0]),events[17]),events[49]),events[6]),events[30]),events[42]),cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(events[32], events[16]),events[30]),events[48]),events[21]),events[14]),events[34]),events[35]),events[41]),events[20]),events[27]),cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(events[33], events[12]),events[46]),events[36]),events[0]),events[21]),events[28]),events[29]),events[43]),events[6]),events[35]),cons_excl(cons_excl(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[4], events[26]),events[18]),events[13]),events[43]),events[21]),events[10]),events[42]),events[3]),events[32]),events[22]),cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(events[31], events[47]),events[29]),events[27]),events[12]),events[41]),events[33]),events[4]),events[42]),events[9]),events[19]),cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(events[34], events[16]),events[33]),events[10]),events[15]),events[19]),events[41]),events[3]),events[43]),events[11]),events[18]),cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(events[33], events[28]),events[14]),events[6]),events[43]),events[31]),events[32]),events[13]),events[34]),events[36]),events[7]),cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(events[42], events[47]),events[15]),events[43]),events[1]),events[27]),events[29]),events[49]),events[20]),events[9]),events[22]),cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(events[36], events[8]),events[13]),events[18]),events[23]),events[9]),events[31]),events[44]),events[17]),events[1]),events[20])};


static const std::vector< std::vector<float> > prob = {{0.161056, 0.368875, 0.564117, 0.0548499, 0.886619, 0.522128, 0.435335, 0.186839, 0.0615252, 0.418808, 0.299872, 0.752528, 0.381072, 0.585935, 0.577373, 0.787826, 0.0108623, 0.25961, 0.963004, 0.736868, 0.714678, 0.822815, 0.843451, 0.81489, 0.0501413, 0.0549965, 0.602806, 0.966838, 0.717248, 0.0367663, 0.559907, 0.692528, 0.503213, 0.369954, 0.468768, 0.945461, 0.608487, 0.325836, 0.218042, 0.848711, 0.300742, 0.42173, 0.403963, 0.116739, 0.0467808, 0.862068, 0.62839, 0.845812, 0.53934, 0.736964},
{0.27206, 0.335657, 0.902416, 0.970461, 0.126646, 0.220847, 0.26714, 0.203408, 0.128861, 0.30624, 0.206011, 0.139877, 0.0336245, 0.971684, 0.56744, 0.0331135, 0.201622, 0.313381, 0.473603, 0.530755, 0.244438, 0.31868, 0.935878, 0.633561, 0.588167, 0.547173, 0.0653226, 0.243835, 0.0707843, 0.617992, 0.944147, 0.579301, 0.0573358, 0.666984, 0.546567, 0.620576, 0.40921, 0.93859, 0.712382, 0.39008, 0.61969, 0.377573, 0.229741, 0.631767, 0.972189, 0.0800446, 0.835684, 0.353742, 0.00863073, 0.991553},
{0.714824, 0.798, 0.748158, 0.291596, 0.660185, 0.218759, 0.491941, 0.122121, 0.749749, 0.170179, 0.72178, 0.51926, 0.337448, 0.372002, 0.71037, 0.26147, 0.906725, 0.44199, 0.676877, 0.339997, 0.596951, 0.286394, 0.559882, 0.192306, 0.265861, 0.973283, 0.14248, 0.182538, 0.924246, 0.273628, 0.13906, 0.854164, 0.680439, 0.903748, 0.248242, 0.113739, 0.384509, 0.363579, 0.716147, 0.320237, 0.256834, 0.154502, 0.525643, 0.0800937, 0.742041, 0.629067, 0.968337, 0.497373, 0.546236, 0.613479},
{0.214615, 0.42436, 0.831594, 0.465055, 0.439304, 0.109266, 0.45707, 0.507306, 0.88221, 0.377864, 0.420861, 0.807445, 0.59101, 0.280856, 0.0611901, 0.370779, 0.504552, 0.82893, 0.362619, 0.810152, 0.524282, 0.880559, 0.386851, 0.254463, 0.233168, 0.323929, 0.574735, 0.270119, 0.560899, 0.0931692, 0.799926, 0.854728, 0.923821, 0.454261, 0.731015, 0.872769, 0.820436, 0.224412, 0.0945382, 0.666003, 0.950763, 0.0268798, 0.874396, 0.448823, 0.655051, 0.380619, 0.324478, 0.989298, 0.353974, 0.891933},
{0.0957677, 0.643043, 0.99839, 0.377507, 0.555912, 0.603763, 0.999848, 0.828041, 0.464287, 0.378383, 0.805345, 0.712789, 0.690328, 0.103797, 0.0934963, 0.652213, 0.254936, 0.102013, 0.76978, 0.0163612, 0.165656, 0.190976, 0.816003, 0.774657, 0.624, 0.715158, 0.687096, 0.0703095, 0.439719, 0.967117, 0.666629, 0.476702, 0.892241, 0.608342, 0.420445, 0.152524, 0.0926891, 0.19726, 0.494015, 0.86511, 0.941986, 0.315881, 0.540604, 0.181406, 0.21629, 0.826284, 0.413903, 0.0157131, 0.644921, 0.85524},
{0.0814385, 0.559717, 0.578067, 0.211455, 0.745983, 0.256809, 0.332785, 0.814405, 0.0680285, 0.107229, 0.975803, 0.883428, 0.472801, 0.98673, 0.608303, 0.759734, 0.275874, 0.626604, 0.371744, 0.252544, 0.389789, 0.779184, 0.714624, 0.692223, 0.494866, 0.331591, 0.830768, 0.930372, 0.762376, 0.383518, 0.0131209, 0.195489, 0.121199, 0.508914, 0.726924, 0.783515, 0.486416, 0.331651, 0.0896744, 0.12231, 0.126719, 0.363555, 0.68812, 0.206288, 0.0367815, 0.716774, 0.545433, 0.655255, 0.842303, 0.388577},
{0.189893, 0.934724, 0.178373, 0.0968152, 0.928969, 0.79976, 0.274001, 0.0322429, 0.310838, 0.0203287, 0.827381, 0.920909, 0.855761, 0.577782, 0.603126, 0.841136, 0.851577, 0.786947, 0.0778082, 0.133306, 0.920822, 0.674802, 0.658706, 0.656525, 0.978362, 0.727844, 0.121483, 0.547324, 0.304247, 0.666559, 0.0571292, 0.312676, 0.79956, 0.0881515, 0.789677, 0.337402, 0.194386, 0.00740864, 0.493946, 0.944284, 0.480792, 0.862631, 0.67269, 0.284468, 0.426435, 0.512978, 0.916014, 0.624451, 0.561725, 0.545771},
{0.398172, 0.0762154, 0.20519, 0.954723, 0.366449, 0.65014, 0.802649, 0.990069, 0.00878413, 0.329268, 0.648719, 0.11661, 0.584293, 0.160654, 0.993974, 0.895717, 0.206065, 0.74314, 0.726482, 0.298697, 0.977387, 0.68279, 0.296419, 0.0548193, 0.518822, 0.186764, 0.848336, 0.789115, 0.564699, 0.473832, 0.312408, 0.032505, 0.774698, 0.762198, 0.897337, 0.327341, 0.538956, 0.292944, 0.360325, 0.742826, 0.308188, 0.46748, 0.285076, 0.91208, 0.0930034, 0.389835, 0.706601, 0.143152, 0.452767, 0.369994},
{0.363602, 0.940946, 0.35706, 0.827174, 0.525183, 0.602857, 0.664375, 0.239278, 0.581191, 0.437238, 0.912391, 0.00316619, 0.765131, 0.542422, 0.62072, 0.288447, 0.986181, 0.043766, 0.0423038, 0.980927, 0.320997, 0.394852, 0.955997, 0.705312, 0.195706, 0.175712, 0.555927, 0.559988, 0.225055, 0.909727, 0.243289, 0.0843484, 0.333329, 0.0986266, 0.885388, 0.0216109, 0.682799, 0.693147, 0.415771, 0.775491, 0.585703, 0.724228, 0.386022, 0.881723, 0.793325, 0.995934, 0.55563, 0.559408, 0.365973, 0.0227169},
{0.887666, 0.963213, 0.557066, 0.952391, 0.350162, 0.542412, 0.759258, 0.124812, 0.330761, 0.687555, 0.417835, 0.977068, 0.914649, 0.803718, 0.0807698, 0.606508, 0.880943, 0.390165, 0.626726, 0.535168, 0.978738, 0.726735, 0.988858, 0.460137, 0.0981575, 0.0222635, 0.130267, 0.456676, 0.631434, 0.990064, 0.0539954, 0.535265, 0.268588, 0.99266, 0.99436, 0.274703, 0.326639, 0.29315, 0.285015, 0.766563, 0.453671, 0.512668, 0.274708, 0.211954, 0.748016, 0.690848, 0.910987, 0.910544, 0.0785034, 0.298162},
{0.350141, 0.557769, 0.201962, 0.656362, 0.774574, 0.0134733, 0.615654, 0.559801, 0.130399, 0.303285, 0.770119, 0.992559, 0.707137, 0.860536, 0.606401, 0.762896, 0.265952, 0.00949323, 0.642625, 0.147388, 0.0441029, 0.276931, 0.261596, 0.189601, 0.869882, 0.939424, 0.125784, 0.076824, 0.507138, 0.0262331, 0.0709462, 0.216897, 0.537184, 0.054114, 0.908081, 0.761295, 0.998375, 0.305385, 0.235968, 0.703921, 0.416228, 0.607228, 0.747966, 0.43206, 0.0406378, 0.370588, 0.250252, 0.477908, 0.182889, 0.542252},
{0.513609, 0.500712, 0.275653, 0.0192233, 0.771605, 0.808875, 0.147437, 0.582581, 0.426754, 0.116762, 0.777835, 0.103719, 0.5443, 0.198613, 0.880436, 0.899035, 0.265184, 0.470793, 0.939511, 0.506326, 0.291778, 0.666345, 0.148755, 0.828635, 0.845148, 0.217356, 0.0119703, 0.249806, 0.231248, 0.859665, 0.914313, 0.714079, 0.0714722, 0.174793, 0.945709, 0.0298841, 0.545534, 0.901541, 0.364598, 0.677569, 0.985666, 0.598829, 0.692831, 0.224512, 0.0560011, 0.294376, 0.501781, 0.357591, 0.4358, 0.109339},
{0.00635648, 0.648978, 0.273448, 0.0924853, 0.354334, 0.0763201, 0.632149, 0.173674, 0.278447, 0.867721, 0.0365676, 0.185776, 0.00175539, 0.475943, 0.153152, 0.588339, 0.756241, 0.650213, 0.825238, 0.180628, 0.94253, 0.604081, 0.642573, 0.457772, 0.817458, 0.818918, 0.515362, 0.160778, 0.233765, 0.488103, 0.177473, 0.569792, 0.425348, 0.338995, 0.631204, 0.365828, 0.79884, 0.00504251, 0.673194, 0.496631, 0.705716, 0.151083, 0.412792, 0.294602, 0.178527, 0.524068, 0.282986, 0.239166, 0.826599, 0.513507},
{0.802248, 0.509293, 0.392304, 0.496541, 0.0508862, 0.750197, 0.106666, 0.360302, 0.969216, 0.921522, 0.918423, 0.517997, 0.271486, 0.404289, 0.167408, 0.290973, 0.924608, 0.140624, 0.965089, 0.853515, 0.47583, 0.608686, 0.175412, 0.533157, 0.325687, 0.719901, 0.335046, 0.520092, 0.565085, 0.964464, 0.0722388, 0.812544, 0.647182, 0.511293, 0.102089, 0.768248, 0.988863, 0.375163, 0.749709, 0.460456, 0.312183, 0.354188, 0.19473, 0.554762, 0.343349, 0.272207, 0.818574, 0.0209692, 0.130266, 0.122777},
{0.431225, 0.47814, 0.120292, 0.922668, 0.171845, 0.697491, 0.355606, 0.241677, 0.438823, 0.0136474, 0.544604, 0.580678, 0.714074, 0.940226, 0.322792, 0.442329, 0.473496, 0.571658, 0.894373, 0.848183, 0.474961, 0.889668, 0.724392, 0.896845, 0.549787, 0.572822, 0.686457, 0.21004, 0.547154, 0.965436, 0.774194, 0.0291968, 0.0708397, 0.117423, 0.367199, 0.384841, 0.996281, 0.433193, 0.413033, 0.615353, 0.652071, 0.763625, 0.430086, 0.656409, 0.985689, 0.732774, 0.70816, 0.114363, 0.816208, 0.490967},
{0.943195, 0.401179, 0.424374, 0.0269672, 0.0275458, 0.771688, 0.47493, 0.225165, 0.578628, 0.824363, 0.210489, 0.645919, 0.858787, 0.070422, 0.862221, 0.0470136, 0.220723, 0.0890298, 0.418156, 0.521314, 0.931701, 0.286369, 0.00699523, 0.76134, 0.862372, 0.52251, 0.746661, 0.295328, 0.649643, 0.939189, 0.0817054, 0.277804, 0.960214, 0.97652, 0.231813, 0.307018, 0.72665, 0.624495, 0.00390338, 0.943597, 0.865277, 0.618136, 0.345581, 0.464474, 0.504959, 0.685744, 0.86497, 0.245232, 0.972514, 0.934312},
{0.914445, 0.624293, 0.624931, 0.992701, 0.302678, 0.868801, 0.162808, 0.162811, 0.85817, 0.350463, 0.121663, 0.329433, 0.602551, 0.016814, 0.0109634, 0.491619, 0.503849, 0.243851, 0.54686, 0.968657, 0.32496, 0.110173, 0.307272, 0.47279, 0.0700309, 0.100262, 0.731994, 0.880419, 0.50024, 0.802292, 0.70082, 0.43832, 0.892524, 0.581822, 0.494769, 0.61581, 0.395417, 0.335551, 0.806631, 0.717208, 0.165785, 0.478678, 0.0839794, 0.133442, 0.233796, 0.893245, 0.481319, 0.625731, 0.265176, 0.0884187},
{0.646393, 0.974353, 0.973235, 0.974615, 0.973995, 0.681674, 0.919394, 0.886894, 0.957594, 0.452932, 0.197033, 0.47257, 0.792591, 0.378629, 0.472161, 0.628474, 0.834589, 0.291718, 0.893086, 0.664484, 0.18706, 0.974853, 0.0588749, 0.543293, 0.3874, 0.100777, 0.148494, 0.280791, 0.201289, 0.332742, 0.75879, 0.341255, 0.608725, 0.0624614, 0.680268, 0.157944, 0.859261, 0.393772, 0.0991737, 0.669278, 0.406598, 0.547122, 0.99935, 0.28008, 0.814322, 0.57289, 0.0292757, 0.205788, 0.00490459, 0.375458},
{0.0174841, 0.639253, 0.889304, 0.511266, 0.235572, 0.551259, 0.109836, 0.289026, 0.238658, 0.926486, 0.629594, 0.245848, 0.858161, 0.580761, 0.325288, 0.134383, 0.0208813, 0.0653883, 0.833544, 0.24858, 0.184019, 0.990183, 0.918665, 0.77387, 0.907579, 0.552507, 0.573227, 0.334688, 0.540086, 0.326486, 0.181413, 0.651454, 0.947506, 0.872799, 0.848378, 0.0522828, 0.953411, 0.363843, 0.366479, 0.490075, 0.51163, 0.274037, 0.351974, 0.874069, 0.854936, 0.519653, 0.212536, 0.124092, 0.0241825, 0.453305},
{0.651742, 0.523637, 0.74661, 0.567553, 0.872435, 0.128572, 0.275008, 0.540124, 0.608998, 0.135151, 0.0480934, 0.648514, 0.053724, 0.676117, 0.899345, 0.150746, 0.595791, 0.190823, 0.210868, 0.967106, 0.824572, 0.373844, 0.0685784, 0.433348, 0.832929, 0.40861, 0.86879, 0.111934, 0.691034, 0.989467, 0.502226, 0.679108, 0.550212, 0.086349, 0.619252, 0.678481, 0.493818, 0.855169, 0.813028, 0.0935427, 0.916113, 0.907237, 0.897422, 0.642162, 0.875871, 0.0887459, 0.586386, 0.812771, 0.0304036, 0.223535},
};

static const std::vector<float> costs = {249.476, 517.706, 876.396, 467.561, 209.849, 472.642, 680.681, 582.338, 731.899, 811.793, 752.711, 342.688, 994.679, 251.623, 901.432, 178.747, 659.954, 175.429, 396.118, 782.095, 394.634, 75.6472, 69.5666, 239.31, 919.536, 660.019, 328.941, 533.373, 649.046, 736.739, 558.818, 509.867, 666.943, 879.468, 902.582, 90.4862, 24.3441, 964.115, 755.388, 146.61, 469.116, 20.1413, 653.724, 10.615, 413.603, 16.1464, 23.3352, 410.373, 470.296, 595.875};

static const std::vector<float> min_impressions = {0.645568, 0.0330039, 0.835768, 0.52745, 0.444955, 0.576535, 0.374831, 0.779416, 0.991042, 0.624714, 0.778488, 0.652509, 0.0548146, 0.272137, 0.110148, 0.333842, 0.226992, 0.858076, 0.310185, 0.784627};

//
#endif
