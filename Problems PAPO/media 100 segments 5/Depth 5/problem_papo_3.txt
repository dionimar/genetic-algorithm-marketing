#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(events[78], events[51]),events[72]),events[93]),events[44]),events[22]),cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(events[97], events[12]),events[49]),events[74]),events[78]),events[51]),cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[24], events[3]),events[98]),events[81]),events[35]),events[11]),cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(events[99], events[7]),events[97]),events[8]),events[5]),events[18]),cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(events[72], events[4]),events[3]),events[21]),events[51]),events[62])};


static const std::vector< std::vector<float> > prob = {{0.854011, 0.563722, 0.0369687, 0.0881753, 0.775028, 0.386686, 0.0691822, 0.255785, 0.183513, 0.17135, 0.233244, 0.763522, 0.756891, 0.382696, 0.510782, 0.418775, 0.0404872, 0.686346, 0.93236, 0.927393, 0.201891, 0.277869, 0.721696, 0.995788, 0.909485, 0.54332, 0.841236, 0.567298, 0.750604, 0.841314, 0.503271, 0.6545, 0.0668546, 0.351998, 0.522709, 0.101874, 0.859436, 0.178119, 0.636366, 0.984818, 0.264932, 0.548363, 0.32292, 0.860587, 0.3274, 0.265571, 0.353234, 0.401602, 0.470214, 0.735368, 0.542131, 0.379552, 0.482296, 0.224333, 0.147161, 0.192508, 0.817397, 0.193847, 0.40553, 0.913426, 0.461353, 0.0472053, 0.41601, 0.716112, 0.178978, 0.24132, 0.342763, 0.171474, 0.476496, 0.153554, 0.414338, 0.27248, 0.812433, 0.0369671, 0.766178, 0.639002, 0.235183, 0.848107, 0.306334, 0.447454, 0.101287, 0.0804059, 0.531626, 0.15588, 0.0934128, 0.481516, 0.0925429, 0.68136, 0.0667159, 0.566828, 0.210923, 0.776055, 0.0567377, 0.449659, 0.285248, 0.375519, 0.0595476, 0.0754592, 0.781954, 0.64397},
{0.357156, 0.916637, 0.398132, 0.946461, 0.700755, 0.504503, 0.0173345, 0.848832, 0.751562, 0.298623, 0.00878676, 0.164333, 0.468037, 0.258607, 0.87172, 0.798268, 0.098431, 0.0122227, 0.641133, 0.211585, 0.727206, 0.69664, 0.05954, 0.929351, 0.0774302, 0.554846, 0.224254, 0.598558, 0.797973, 0.626025, 0.475632, 0.707339, 0.727933, 0.950764, 0.275219, 0.485858, 0.311171, 0.265942, 0.480424, 0.327239, 0.458827, 0.377865, 0.0255067, 0.685816, 0.0299732, 0.523856, 0.791563, 0.964713, 0.783343, 0.559756, 0.840764, 0.469532, 0.12448, 0.74253, 0.686969, 0.0662628, 0.348443, 0.223158, 0.527867, 0.151546, 0.761708, 0.843854, 0.410838, 0.549104, 0.873971, 0.513963, 0.486319, 0.080374, 0.0676184, 0.0875124, 0.378031, 0.565357, 0.0495826, 0.608742, 0.614551, 0.962833, 0.261898, 0.0360043, 0.331966, 0.472167, 0.875438, 0.757805, 0.0834824, 0.912723, 0.817474, 0.817538, 0.880275, 0.0296718, 0.615603, 0.912691, 0.890607, 0.464201, 0.921559, 0.490361, 0.650136, 0.705773, 0.497096, 0.0646795, 0.282498, 0.273886},
{0.98804, 0.473566, 0.629173, 0.221427, 0.416211, 0.0266412, 0.0417884, 0.0752094, 0.124707, 0.0400206, 0.226275, 0.916737, 0.332, 0.0899736, 0.676422, 0.137004, 0.762642, 0.06793, 0.439317, 0.623445, 0.0221362, 0.186674, 0.183324, 0.776306, 0.276532, 0.462197, 0.0156459, 0.263814, 0.876577, 0.575367, 0.507006, 0.0172904, 0.362155, 0.108897, 0.441307, 0.542152, 0.705256, 0.215084, 0.26679, 0.184637, 0.758905, 0.0997164, 0.0972079, 0.48545, 0.863536, 0.541965, 0.163462, 0.388192, 0.50753, 0.322526, 0.518398, 0.931569, 0.262404, 0.465841, 0.459663, 0.771307, 0.271131, 0.099743, 0.30425, 0.31128, 0.212735, 0.119853, 0.844015, 0.0638367, 0.791102, 0.102529, 0.0998681, 0.416923, 0.742561, 0.63844, 0.181527, 0.195138, 0.268935, 0.565009, 0.717334, 0.729966, 0.900486, 0.861881, 0.941863, 0.288749, 0.517943, 0.269437, 0.33465, 0.544784, 0.221592, 0.774309, 0.721763, 0.128818, 0.82894, 0.77883, 0.527599, 0.875034, 0.933284, 0.139909, 0.31554, 0.635322, 0.853752, 0.69704, 0.0997091, 0.24085},
{0.989166, 0.576186, 0.445033, 0.758155, 0.3159, 0.460205, 0.361737, 0.837968, 0.0476844, 0.123647, 0.678105, 0.0206205, 0.0423347, 0.497466, 0.477015, 0.937317, 0.0572945, 0.41663, 0.962963, 0.0466405, 0.505201, 0.70146, 0.353788, 0.527032, 0.878351, 0.133447, 0.983903, 0.897952, 0.377389, 0.466255, 0.102062, 0.654261, 0.614468, 0.854264, 0.908235, 0.441235, 0.140023, 0.148456, 0.882883, 0.536442, 0.140027, 0.765294, 0.990391, 0.00663796, 0.674479, 0.868007, 0.837686, 0.00989837, 0.144666, 0.777916, 0.784709, 0.719178, 0.849325, 0.521566, 0.989773, 0.144171, 0.664021, 0.319403, 0.0828494, 0.279573, 0.730764, 0.587165, 0.20016, 0.694521, 0.306681, 0.927607, 0.190265, 0.0289661, 0.62024, 0.804796, 0.373314, 0.200965, 0.909412, 0.321604, 0.0640974, 0.73104, 0.648019, 0.692458, 0.350031, 0.665531, 0.0173853, 0.539394, 0.599399, 0.777474, 0.0182793, 0.624094, 0.532711, 0.387529, 0.713511, 0.109142, 0.194989, 0.40446, 0.659275, 0.18447, 0.245292, 0.984675, 0.238794, 0.848224, 0.860208, 0.694392},
{0.407151, 0.731993, 0.0822746, 0.838477, 0.364011, 0.612864, 0.765223, 0.117488, 0.630531, 0.331274, 0.4426, 0.290996, 0.535118, 0.796803, 0.153182, 0.505929, 0.362686, 0.0412789, 0.110112, 0.242064, 0.872768, 0.322, 0.498219, 0.581949, 0.771206, 0.642633, 0.900131, 0.205266, 0.707054, 0.863919, 0.305726, 0.0657402, 0.559626, 0.0346882, 0.225741, 0.778812, 0.944722, 0.194692, 0.49382, 0.668025, 0.492902, 0.62807, 0.182947, 0.547764, 0.496204, 0.901283, 0.581756, 0.531659, 0.971602, 0.0523636, 0.0105746, 0.443676, 0.406675, 0.399922, 0.576195, 0.655636, 0.234097, 0.222975, 0.405832, 0.225621, 0.768437, 0.43329, 0.926584, 0.954078, 0.740463, 0.196938, 0.554034, 0.500975, 0.682878, 0.173805, 0.981319, 0.276315, 0.0636492, 0.0603689, 0.641755, 0.818953, 0.29332, 0.10722, 0.838053, 0.333092, 0.592998, 0.110114, 0.839253, 0.89065, 0.339459, 0.0351303, 0.427778, 0.964414, 0.355325, 0.00291104, 0.606968, 0.79733, 0.506126, 0.370496, 0.106762, 0.519385, 0.546561, 0.28535, 0.714494, 0.305751},
};

static const std::vector<float> costs = {568.688, 706.749, 67.7237, 219.274, 101.789, 166.599, 814.232, 180.784, 233.153, 583.752, 373.539, 188.893, 912.856, 349.152, 896.835, 776.241, 429.314, 116.565, 780.68, 424.287, 861.66, 227.883, 901.906, 610.952, 892.57, 88.4376, 140.238, 550.76, 824.841, 580.999, 57.7467, 260.05, 316.727, 15.5231, 58.1094, 931.147, 567.315, 502.523, 255.941, 556.633, 641.238, 807.459, 400.258, 779.672, 668.746, 519.402, 452.698, 915.423, 236.022, 751.033, 105.436, 235.83, 998.534, 173.589, 173.322, 918.689, 825.358, 796.884, 489.752, 985.966, 336.048, 399.011, 66.484, 645.563, 713.686, 40.4102, 983.205, 844.296, 757.695, 338.283, 627.684, 641.098, 654.02, 439.317, 918.432, 252.509, 612.085, 374.506, 720.618, 864.074, 368.774, 260.589, 641.418, 394.125, 21.625, 816.462, 382.104, 768.331, 163.829, 388.395, 586.932, 404.384, 525.351, 868.071, 66.5352, 36.2721, 129.318, 575.814, 376.385, 195.568};

static const std::vector<float> min_impressions = {0.0150645, 0.186531, 0.364331, 0.950638, 0.740284};

//
#endif
