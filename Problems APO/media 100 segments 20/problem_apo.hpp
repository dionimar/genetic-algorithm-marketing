#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 100;
static const int segments = 20;

static const std::vector<std::vector<float>> restr_rep{
    {10, 9, 8, 5, 2, 8, 3, 1, 1, 6, 9, 9, 10, 2, 5, 2, 8, 9, 5, 6},
    {9, 4, 1, 6, 2, 8, 2, 7, 8, 9, 2, 1, 8, 4, 3, 7, 9, 7, 7, 5},
    {6, 7, 9, 8, 6, 4, 4, 10, 5, 7, 4, 10, 7, 4, 5, 5, 10, 8, 10, 7},
    {1, 6, 6, 1, 3, 4, 3, 9, 9, 3, 1, 9, 7, 2, 5, 7, 2, 4, 7, 4},
    {10, 4, 1, 5, 10, 2, 2, 2, 5, 2, 10, 3, 10, 6, 7, 5, 7, 6, 7, 7},
    {4, 9, 4, 2, 10, 8, 2, 6, 10, 8, 4, 3, 2, 8, 6, 4, 6, 3, 7, 2},
    {9, 7, 1, 5, 8, 4, 7, 5, 7, 3, 2, 2, 1, 2, 7, 7, 9, 1, 4, 5},
    {8, 6, 5, 10, 3, 2, 1, 5, 3, 2, 2, 2, 6, 5, 2, 9, 7, 1, 9, 3},
    {8, 5, 1, 9, 7, 10, 3, 3, 10, 8, 2, 9, 1, 10, 6, 8, 2, 7, 6, 6},
    {7, 5, 4, 1, 7, 3, 3, 5, 7, 8, 8, 3, 3, 2, 6, 3, 7, 1, 3, 5},
    {3, 7, 10, 3, 3, 5, 7, 10, 8, 1, 8, 6, 1, 7, 7, 1, 3, 10, 10, 2},
    {5, 4, 7, 8, 7, 8, 1, 9, 2, 4, 1, 10, 2, 10, 10, 3, 10, 2, 8, 8},
    {4, 10, 6, 5, 4, 6, 1, 3, 9, 10, 10, 4, 6, 9, 2, 3, 1, 1, 9, 1},
    {5, 5, 8, 8, 4, 4, 8, 5, 7, 10, 5, 1, 5, 7, 6, 5, 9, 9, 4, 7},
    {9, 4, 1, 10, 6, 4, 3, 1, 8, 10, 1, 4, 10, 3, 3, 5, 10, 1, 2, 9},
    {3, 9, 9, 9, 7, 1, 10, 2, 5, 10, 1, 5, 9, 6, 4, 3, 5, 5, 3, 6},
    {6, 9, 8, 5, 9, 3, 6, 1, 9, 1, 5, 6, 9, 6, 3, 1, 2, 4, 5, 4},
    {4, 10, 8, 1, 7, 8, 9, 1, 8, 2, 10, 5, 5, 3, 10, 8, 2, 10, 6, 5},
    {2, 1, 3, 3, 7, 1, 7, 2, 10, 6, 5, 5, 6, 5, 10, 6, 3, 1, 5, 2},
    {2, 2, 9, 7, 2, 4, 10, 3, 10, 5, 5, 9, 5, 7, 8, 9, 3, 8, 6, 9},
    {1, 3, 7, 8, 10, 10, 2, 4, 2, 6, 1, 7, 5, 6, 9, 1, 8, 3, 4, 9},
    {9, 4, 4, 4, 8, 2, 7, 7, 6, 9, 8, 7, 7, 7, 6, 9, 3, 4, 8, 9},
    {5, 4, 2, 2, 8, 5, 6, 1, 2, 5, 7, 7, 6, 1, 5, 4, 5, 10, 7, 6},
    {6, 9, 8, 7, 10, 8, 5, 6, 4, 1, 10, 4, 10, 8, 10, 6, 6, 2, 3, 5},
    {1, 8, 6, 5, 8, 5, 8, 10, 4, 6, 1, 9, 5, 4, 9, 3, 7, 3, 6, 8},
    {4, 4, 8, 2, 7, 10, 1, 7, 4, 8, 10, 3, 8, 2, 3, 6, 9, 2, 6, 6},
    {1, 5, 7, 3, 3, 2, 4, 3, 6, 7, 1, 3, 9, 6, 1, 3, 5, 9, 7, 8},
    {1, 2, 10, 10, 8, 6, 10, 10, 2, 4, 6, 10, 3, 6, 3, 4, 10, 6, 1, 9},
    {9, 8, 1, 3, 8, 9, 10, 8, 10, 4, 7, 5, 5, 10, 3, 4, 3, 5, 3, 3},
    {5, 3, 10, 6, 1, 2, 2, 9, 10, 2, 8, 3, 6, 4, 3, 10, 8, 2, 1, 6},
    {4, 4, 5, 5, 4, 6, 6, 2, 5, 8, 2, 1, 10, 4, 10, 2, 8, 3, 3, 8},
    {5, 9, 1, 2, 7, 5, 9, 1, 2, 6, 10, 10, 9, 4, 10, 3, 8, 5, 8, 1},
    {9, 6, 7, 8, 9, 3, 1, 1, 6, 3, 5, 6, 2, 5, 8, 2, 9, 6, 7, 10},
    {5, 9, 6, 5, 4, 2, 8, 1, 7, 6, 3, 7, 3, 3, 9, 5, 3, 1, 2, 9},
    {3, 1, 7, 6, 6, 2, 10, 9, 10, 10, 2, 5, 9, 1, 6, 4, 10, 3, 3, 4},
    {2, 1, 1, 5, 1, 5, 4, 1, 9, 9, 8, 5, 1, 8, 6, 5, 8, 6, 4, 2},
    {8, 6, 1, 8, 9, 7, 3, 3, 10, 7, 10, 10, 9, 10, 2, 4, 7, 2, 9, 6},
    {6, 4, 4, 10, 7, 10, 3, 4, 3, 1, 4, 3, 8, 1, 1, 6, 7, 8, 2, 10},
    {9, 3, 2, 8, 4, 2, 2, 5, 3, 8, 6, 4, 2, 5, 4, 2, 1, 4, 7, 7},
    {9, 3, 8, 1, 7, 4, 1, 5, 3, 1, 9, 5, 6, 6, 8, 7, 1, 5, 10, 8},
    {9, 5, 9, 10, 2, 8, 7, 1, 4, 9, 8, 7, 9, 1, 9, 8, 2, 6, 5, 3},
    {5, 1, 1, 1, 5, 2, 5, 6, 9, 9, 4, 5, 6, 6, 5, 10, 4, 1, 4, 7},
    {4, 9, 3, 9, 7, 7, 6, 2, 9, 3, 10, 2, 4, 1, 10, 2, 7, 1, 5, 10},
    {7, 3, 4, 7, 7, 8, 7, 7, 7, 9, 6, 6, 2, 8, 5, 2, 1, 3, 2, 5},
    {8, 3, 7, 5, 3, 1, 8, 2, 8, 7, 3, 2, 8, 9, 10, 4, 7, 10, 6, 6},
    {6, 8, 7, 1, 4, 4, 2, 7, 9, 7, 10, 10, 10, 2, 8, 8, 9, 8, 10, 3},
    {5, 1, 2, 6, 1, 7, 1, 2, 1, 7, 10, 9, 6, 1, 2, 7, 7, 1, 2, 9},
    {2, 9, 3, 7, 5, 3, 5, 5, 1, 8, 1, 7, 2, 2, 1, 1, 10, 9, 9, 3},
    {10, 9, 5, 7, 10, 3, 9, 2, 5, 3, 10, 8, 4, 4, 6, 1, 1, 10, 7, 8},
    {4, 7, 6, 9, 4, 9, 6, 7, 3, 5, 3, 4, 4, 3, 8, 10, 5, 8, 9, 2},
    {3, 7, 3, 1, 7, 5, 2, 7, 2, 4, 6, 3, 7, 7, 6, 5, 7, 3, 1, 7},
    {1, 10, 6, 6, 7, 2, 5, 10, 3, 8, 7, 1, 3, 10, 4, 5, 9, 6, 1, 1},
    {10, 9, 3, 10, 9, 2, 6, 7, 1, 4, 3, 2, 5, 6, 10, 7, 10, 10, 2, 9},
    {9, 3, 9, 8, 1, 3, 2, 9, 9, 5, 6, 7, 3, 4, 5, 5, 7, 7, 4, 1},
    {1, 2, 3, 3, 9, 7, 6, 7, 7, 9, 8, 7, 1, 4, 4, 5, 6, 10, 9, 10},
    {10, 8, 2, 4, 5, 2, 2, 7, 6, 9, 3, 4, 7, 5, 2, 10, 1, 3, 10, 1},
    {6, 10, 8, 3, 2, 4, 5, 7, 8, 1, 2, 4, 2, 6, 2, 3, 8, 4, 3, 6},
    {9, 4, 9, 4, 2, 6, 8, 1, 10, 4, 1, 8, 3, 2, 3, 1, 8, 10, 10, 9},
    {3, 8, 1, 9, 9, 9, 3, 6, 1, 4, 8, 10, 1, 7, 4, 5, 1, 1, 5, 8},
    {6, 9, 2, 6, 9, 6, 4, 9, 3, 5, 8, 2, 5, 7, 5, 6, 1, 4, 3, 10},
    {10, 2, 4, 2, 10, 6, 5, 9, 6, 4, 8, 10, 7, 6, 6, 3, 5, 1, 2, 6},
    {9, 2, 3, 5, 3, 6, 6, 4, 2, 10, 8, 8, 3, 6, 10, 10, 7, 2, 2, 6},
    {3, 8, 2, 2, 9, 4, 8, 1, 6, 10, 10, 2, 8, 9, 2, 8, 2, 1, 9, 9},
    {10, 4, 9, 2, 10, 2, 9, 3, 8, 4, 2, 6, 5, 4, 9, 10, 1, 3, 5, 8},
    {10, 9, 2, 7, 7, 3, 3, 3, 6, 10, 4, 9, 7, 5, 8, 9, 3, 4, 1, 3},
    {5, 7, 5, 1, 8, 3, 5, 7, 9, 3, 10, 9, 1, 5, 1, 6, 9, 3, 8, 8},
    {6, 4, 6, 4, 10, 4, 4, 1, 2, 7, 8, 10, 5, 10, 6, 6, 10, 8, 7, 8},
    {9, 10, 9, 1, 7, 6, 9, 6, 1, 8, 1, 6, 10, 2, 6, 5, 10, 2, 10, 5},
    {8, 3, 4, 2, 10, 5, 8, 10, 1, 6, 1, 2, 5, 4, 7, 4, 4, 4, 10, 7},
    {3, 1, 8, 10, 8, 9, 4, 1, 4, 1, 1, 10, 3, 1, 6, 8, 7, 3, 2, 9},
    {9, 7, 5, 6, 7, 3, 5, 2, 4, 7, 1, 9, 9, 7, 4, 9, 4, 3, 8, 2},
    {2, 6, 6, 5, 1, 3, 4, 6, 7, 4, 5, 7, 9, 9, 5, 3, 1, 7, 5, 2},
    {1, 10, 3, 10, 5, 5, 6, 5, 6, 6, 8, 10, 4, 6, 3, 6, 10, 9, 10, 4},
    {3, 10, 3, 7, 5, 7, 1, 6, 4, 7, 7, 2, 1, 5, 1, 8, 8, 9, 9, 8},
    {10, 7, 7, 10, 2, 1, 10, 9, 7, 6, 4, 1, 8, 8, 9, 7, 4, 5, 7, 1},
    {3, 7, 10, 4, 8, 7, 4, 9, 8, 5, 8, 10, 3, 10, 7, 3, 4, 8, 3, 6},
    {2, 5, 4, 4, 7, 9, 10, 6, 9, 7, 8, 3, 1, 10, 6, 6, 3, 8, 2, 3},
    {3, 7, 8, 10, 9, 2, 9, 1, 9, 5, 5, 4, 5, 10, 8, 2, 7, 9, 10, 5},
    {9, 7, 1, 3, 1, 1, 10, 5, 9, 9, 6, 8, 3, 4, 1, 3, 6, 6, 3, 5},
    {3, 9, 6, 4, 1, 8, 9, 9, 1, 8, 7, 8, 1, 10, 8, 9, 3, 7, 8, 9},
    {5, 9, 7, 4, 10, 7, 6, 4, 8, 5, 1, 10, 1, 7, 5, 2, 9, 2, 4, 5},
    {3, 7, 1, 7, 10, 6, 1, 6, 8, 3, 4, 4, 10, 1, 4, 7, 4, 7, 4, 5},
    {7, 3, 9, 7, 5, 2, 2, 8, 2, 1, 10, 7, 1, 3, 8, 7, 3, 10, 9, 8},
    {1, 1, 10, 2, 9, 3, 7, 4, 10, 1, 8, 2, 4, 5, 9, 5, 7, 1, 6, 5},
    {8, 7, 8, 2, 3, 5, 7, 2, 2, 1, 8, 10, 10, 10, 4, 7, 10, 4, 2, 8},
    {2, 7, 1, 2, 8, 5, 3, 6, 5, 10, 10, 2, 3, 2, 1, 3, 8, 6, 3, 6},
    {7, 9, 5, 5, 9, 10, 1, 5, 7, 7, 1, 9, 8, 6, 2, 2, 8, 7, 3, 8},
    {1, 8, 9, 2, 4, 10, 4, 2, 7, 10, 6, 1, 8, 8, 3, 5, 2, 1, 3, 8},
    {9, 6, 6, 3, 6, 1, 4, 5, 3, 10, 1, 1, 6, 1, 2, 9, 3, 10, 8, 7},
    {7, 8, 4, 5, 9, 9, 9, 1, 2, 3, 9, 2, 5, 1, 6, 4, 8, 8, 6, 4},
    {7, 3, 10, 1, 6, 6, 6, 6, 9, 9, 9, 1, 5, 2, 5, 8, 1, 6, 4, 9},
    {9, 1, 4, 5, 3, 5, 3, 5, 1, 8, 5, 5, 3, 3, 3, 9, 10, 2, 1, 8},
    {5, 7, 4, 9, 3, 5, 8, 8, 2, 6, 10, 9, 7, 2, 4, 5, 10, 5, 9, 9},
    {10, 10, 6, 4, 2, 9, 2, 6, 5, 8, 7, 2, 4, 6, 3, 8, 6, 9, 1, 1},
    {9, 4, 10, 6, 3, 7, 2, 6, 7, 8, 6, 6, 5, 7, 7, 9, 2, 9, 10, 3},
    {1, 10, 5, 4, 3, 9, 8, 6, 3, 10, 6, 4, 3, 6, 7, 7, 5, 9, 1, 10},
    {5, 5, 2, 3, 1, 2, 7, 4, 3, 1, 2, 8, 10, 4, 10, 7, 6, 9, 8, 2},
    {2, 1, 6, 3, 4, 2, 3, 1, 1, 10, 6, 4, 10, 6, 6, 3, 1, 1, 7, 4},
    {4, 6, 9, 8, 10, 4, 6, 2, 8, 6, 9, 1, 8, 9, 1, 8, 3, 5, 2, 2},
    {5, 9, 2, 8, 5, 1, 7, 3, 7, 6, 4, 4, 10, 4, 8, 2, 3, 7, 1, 1}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {
    412, 64,  718, 263, 470, 117, 852, 788, 301, 466, 52,  7,   685, 850, 28,
    842, 321, 443, 634, 506, 315, 499, 619, 525, 955, 387, 280, 126, 90,  715,
    119, 303, 377, 967, 725, 882, 969, 330, 616, 148, 538, 862, 752, 707, 844,
    975, 279, 722, 977, 611, 506, 53,  840, 567, 382, 231, 622, 849, 714, 972,
    282, 867, 709, 427, 762, 510, 325, 521, 104, 704, 422, 117, 978, 75,  776,
    654, 700, 645, 91,  250, 367, 540, 343, 185, 830, 297, 270, 985, 622, 667,
    7,   358, 437, 73,  856, 759, 869, 343, 755, 363};

static const std::vector<float> min_impressions = {45, 71, 73, 47, 62, 27, 79,
                                                   16, 68, 84, 63, 44, 72, 75,
                                                   29, 31, 97, 31, 92, 79};

#endif
