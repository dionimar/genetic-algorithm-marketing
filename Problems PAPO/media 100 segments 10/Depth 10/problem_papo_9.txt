#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(events[31], events[4]),events[87]),events[76]),events[22]),events[3]),events[15]),events[28]),events[19]),events[72]),events[50]),cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(events[51], events[47]),events[39]),events[87]),events[96]),events[27]),events[78]),events[14]),events[54]),events[64]),events[73]),cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(events[57], events[51]),events[15]),events[21]),events[69]),events[66]),events[84]),events[17]),events[47]),events[20]),events[49]),cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(events[17], events[89]),events[29]),events[88]),events[79]),events[50]),events[94]),events[15]),events[28]),events[18]),events[31]),cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(events[28], events[33]),events[20]),events[4]),events[48]),events[3]),events[62]),events[69]),events[72]),events[67]),events[73]),cons_indep(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[3], events[57]),events[79]),events[68]),events[72]),events[75]),events[27]),events[91]),events[24]),events[22]),events[90]),cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(events[61], events[47]),events[78]),events[28]),events[68]),events[64]),events[21]),events[77]),events[87]),events[27]),events[11]),cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(events[47], events[70]),events[38]),events[7]),events[72]),events[77]),events[94]),events[50]),events[86]),events[62]),events[49]),cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(events[81], events[7]),events[52]),events[87]),events[57]),events[50]),events[38]),events[46]),events[75]),events[72]),events[37]),cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(events[1], events[44]),events[43]),events[23]),events[89]),events[83]),events[52]),events[99]),events[39]),events[36]),events[30])};


static const std::vector< std::vector<float> > prob = {{0.63713, 0.760406, 0.594189, 0.987273, 0.573645, 0.941991, 0.785496, 0.543282, 0.623785, 0.453866, 0.849085, 0.0741343, 0.705805, 0.69009, 0.936595, 0.0229454, 0.87891, 0.581767, 0.203581, 0.675999, 0.790999, 0.738361, 0.260477, 0.736647, 0.663252, 0.632, 0.187173, 0.258729, 0.50427, 0.73721, 0.353512, 0.699469, 0.178152, 0.583138, 0.678957, 0.0125839, 0.364513, 0.16374, 0.038563, 0.590296, 0.442936, 0.282455, 0.348128, 0.728167, 0.951626, 0.312937, 0.651304, 0.41671, 0.372859, 0.0259706, 0.910865, 0.353433, 0.881383, 0.0929049, 0.301062, 0.0431905, 0.299655, 0.444621, 0.572285, 0.21256, 0.882351, 0.045677, 0.201883, 0.815921, 0.807543, 0.674559, 0.375017, 0.0848536, 0.219699, 0.979491, 0.972326, 0.253478, 0.880753, 0.275062, 0.825155, 0.0198346, 0.0591967, 0.935025, 0.72462, 0.879574, 0.333176, 0.377634, 0.505363, 0.716814, 0.988157, 0.463061, 0.400766, 0.0930114, 0.785525, 0.858671, 0.0488709, 0.787058, 0.363596, 0.844933, 0.289789, 0.763884, 0.0913106, 0.976768, 0.488691, 0.582169},
{0.804417, 0.363911, 0.663051, 0.805426, 0.730801, 0.90814, 0.662736, 0.535049, 0.114003, 0.207432, 0.447651, 0.69373, 0.428875, 0.0753289, 0.356559, 0.319534, 0.456218, 0.925174, 0.229602, 0.444532, 0.392442, 0.450783, 0.336011, 0.0378739, 0.48496, 0.37081, 0.375215, 0.946375, 0.12147, 0.145837, 0.20946, 0.132381, 0.867666, 0.564436, 0.0573355, 0.374586, 0.493031, 0.973215, 0.434116, 0.736314, 0.0777768, 0.108231, 0.731102, 0.407227, 0.527632, 0.76212, 0.855598, 0.576823, 0.267712, 0.990212, 0.236847, 0.823049, 0.449386, 0.563877, 0.694439, 0.264482, 0.0729935, 0.286327, 0.540968, 0.114635, 0.660834, 0.465379, 0.281213, 0.0564188, 0.136333, 0.914996, 0.457705, 0.257753, 0.390874, 0.4832, 0.398419, 0.590704, 0.868309, 0.64742, 0.993712, 0.645762, 0.426545, 0.181666, 0.437712, 0.892009, 0.752823, 0.123787, 0.36913, 0.367255, 0.113056, 0.359852, 0.390035, 0.191065, 0.855756, 0.199406, 0.491349, 0.0464886, 0.171657, 0.0567158, 0.332991, 0.088348, 0.678211, 0.531217, 0.267642, 0.425077},
{0.829125, 0.439866, 0.937533, 0.0626, 0.370415, 0.037652, 0.536546, 0.743385, 0.786187, 0.0825949, 0.45807, 0.977704, 0.487343, 0.758075, 0.809539, 0.259718, 0.520101, 0.849268, 0.129656, 0.354938, 0.137207, 0.986591, 0.21018, 0.632051, 0.0586609, 0.528282, 0.945084, 0.370568, 0.50941, 0.809207, 0.9746, 0.284076, 0.397927, 0.127994, 0.550939, 0.00195261, 0.520006, 0.977963, 0.843705, 0.437138, 0.913435, 0.561692, 0.802548, 0.0210281, 0.818357, 0.504642, 0.738491, 0.67597, 0.91169, 0.796128, 0.322495, 0.434369, 0.274083, 0.656255, 0.885754, 0.64693, 0.912696, 0.92449, 0.289819, 0.132351, 0.142298, 0.20251, 0.476966, 0.96205, 0.601165, 0.394689, 0.707748, 0.822812, 0.787811, 0.581473, 0.351093, 0.93104, 0.244388, 0.646644, 0.4663, 0.385847, 0.93579, 0.431735, 0.109863, 0.556471, 0.408856, 0.310288, 0.537342, 0.703309, 0.561521, 0.855397, 0.643667, 0.318074, 0.373905, 0.725506, 0.305881, 0.824863, 0.924219, 0.119617, 0.722373, 0.337244, 0.477798, 0.708523, 0.343105, 0.0851626},
{0.920446, 0.732926, 0.888307, 0.800132, 0.363551, 0.764877, 0.515217, 0.205141, 0.0206857, 0.678041, 0.502864, 0.925119, 0.061622, 0.183644, 0.991146, 0.569003, 0.312085, 0.166534, 0.676983, 0.110893, 0.688893, 0.979128, 0.733627, 0.715813, 0.509557, 0.234735, 0.828547, 0.19281, 0.149302, 0.167337, 0.378986, 0.0591393, 0.800189, 0.133681, 0.249913, 0.186426, 0.657852, 0.0452382, 0.0990136, 0.660696, 0.582137, 0.29832, 0.599526, 0.0873947, 0.395189, 0.752549, 0.999585, 0.381953, 0.197869, 0.436501, 0.973525, 0.500519, 0.0768408, 0.330003, 0.89111, 0.960901, 0.634159, 0.870479, 0.879532, 0.196394, 0.851305, 0.870814, 0.162955, 0.435281, 0.868461, 0.143909, 0.802563, 0.322863, 0.218864, 0.491502, 0.244958, 0.461352, 0.201064, 0.685259, 0.345067, 0.407327, 0.537059, 0.412122, 0.541192, 0.252728, 0.244977, 0.598674, 0.44832, 0.460375, 0.0113387, 0.418469, 0.864003, 0.647191, 0.337655, 0.514828, 0.685336, 0.349095, 0.325385, 0.27851, 0.85037, 0.358802, 0.125352, 0.0644894, 0.85794, 0.119779},
{0.402623, 0.585653, 0.93331, 0.529545, 0.216616, 0.415786, 0.233822, 0.581493, 0.638994, 0.979697, 0.406844, 0.34133, 0.734605, 0.321114, 0.324216, 0.198756, 0.695783, 0.409261, 0.0882911, 0.579169, 0.475284, 0.858995, 0.546599, 0.665565, 0.0399462, 0.343937, 0.992456, 0.441982, 0.662526, 0.0583511, 0.874553, 0.668218, 0.654854, 0.989679, 0.729518, 0.424685, 0.337436, 0.0607117, 0.521192, 0.441199, 0.692731, 0.282461, 0.537193, 0.116482, 0.720019, 0.91179, 0.560675, 0.258298, 0.456801, 0.117681, 0.55975, 0.661041, 0.671548, 0.303654, 0.202672, 0.424019, 0.812348, 0.303216, 0.318691, 0.741446, 0.604791, 0.902338, 0.594681, 0.740068, 0.726928, 0.0536461, 0.678359, 0.813361, 0.44601, 0.504773, 0.551224, 0.793807, 0.949859, 0.721973, 0.217319, 0.646542, 0.0925562, 0.775176, 0.159575, 0.172474, 0.947368, 0.76894, 0.471527, 0.899361, 0.377837, 0.0139383, 0.119588, 0.67877, 0.189556, 0.484175, 0.939767, 0.892192, 0.226699, 0.112324, 0.729821, 0.415497, 0.367669, 0.875652, 0.395648, 0.220085},
{0.259967, 0.334307, 0.360576, 0.0104477, 0.595592, 0.398962, 0.614048, 0.344494, 0.893554, 0.0921706, 0.31868, 0.346304, 0.246732, 0.445368, 0.129946, 0.315267, 0.590389, 0.0381837, 0.174388, 0.112821, 0.449198, 0.890665, 0.243289, 0.897753, 0.716428, 0.520027, 0.966839, 0.859843, 0.119506, 0.573, 0.664929, 0.656168, 0.00243335, 0.842679, 0.755745, 0.963795, 0.868329, 0.0489399, 0.284097, 0.334481, 0.426422, 0.495468, 0.415955, 0.184382, 0.855151, 0.217272, 0.312272, 0.712459, 0.254189, 0.595316, 0.517641, 0.130489, 0.978523, 0.790509, 0.433099, 0.935497, 0.0900141, 0.793869, 0.513299, 0.814246, 0.957251, 0.0157779, 0.221838, 0.386098, 0.234908, 0.991866, 0.737524, 0.186517, 0.917595, 0.577873, 0.939205, 0.206998, 0.196741, 0.718171, 0.52604, 0.0913495, 0.496324, 0.603919, 0.37005, 0.386069, 0.0666067, 0.60116, 0.286231, 0.809419, 0.188821, 0.201515, 0.740905, 0.414166, 0.031921, 0.00801595, 0.532428, 0.00589968, 0.483903, 0.222233, 0.552909, 0.321753, 0.0812219, 0.816808, 0.883884, 0.0838809},
{0.210214, 0.223918, 0.393692, 0.405402, 0.932129, 0.238743, 0.529348, 0.800367, 0.877475, 0.741732, 0.221599, 0.257007, 0.385204, 0.924245, 0.0909651, 0.0728746, 0.230345, 0.00195753, 0.387651, 0.931649, 0.0590063, 0.959754, 0.659806, 0.684536, 0.253121, 0.910375, 0.911618, 0.432649, 0.140891, 0.403573, 0.217202, 0.338173, 0.601176, 0.172722, 0.255223, 0.348096, 0.586464, 0.769557, 0.606307, 0.167816, 0.300834, 0.543725, 0.135688, 0.967224, 0.759506, 0.479592, 0.488886, 0.122407, 0.352299, 0.655301, 0.831805, 0.188038, 0.231894, 0.385385, 0.414756, 0.464324, 0.258476, 0.359777, 0.864252, 0.765275, 0.932235, 0.427736, 0.63008, 0.129299, 0.35501, 0.883532, 0.843446, 0.736712, 0.954863, 0.494987, 0.354536, 0.861622, 0.0911203, 0.0026797, 0.453525, 0.76032, 0.51978, 0.955949, 0.567918, 0.327635, 0.203894, 0.160103, 0.509461, 0.555842, 0.0207344, 0.223982, 0.0385949, 0.525064, 0.0570149, 0.510511, 0.488102, 0.65636, 0.576634, 0.621887, 0.330387, 0.0638541, 0.889008, 0.24343, 0.182613, 0.0980105},
{0.812931, 0.597281, 0.752875, 0.987891, 0.41637, 0.10443, 0.470161, 0.466647, 0.680473, 0.307749, 0.0317664, 0.624731, 0.374258, 0.999364, 0.65693, 0.0512122, 0.122381, 0.158331, 0.34244, 0.315349, 0.320415, 0.993748, 0.451879, 0.825369, 0.932949, 0.218889, 0.788078, 0.589634, 0.543391, 0.227817, 0.230798, 0.436784, 0.827559, 0.705975, 0.871707, 0.00449662, 0.94963, 0.637526, 0.52865, 0.784062, 0.186263, 0.157357, 0.246478, 0.777206, 0.678596, 0.531123, 0.669646, 0.0385698, 0.660574, 0.668756, 0.6358, 0.912376, 0.763642, 0.598809, 0.241343, 0.777536, 0.520436, 0.828825, 0.675869, 0.499928, 0.193109, 0.20135, 0.470508, 0.275665, 0.702952, 0.824698, 0.646408, 0.674357, 0.381408, 0.902845, 0.230354, 0.642068, 0.543408, 0.771835, 0.25689, 0.255442, 0.955989, 0.0483903, 0.647656, 0.848193, 0.932457, 0.66341, 0.00207667, 0.365351, 0.872157, 0.830683, 0.983126, 0.837757, 0.393827, 0.649935, 0.159376, 0.427668, 0.864734, 0.544339, 0.0137299, 0.101283, 0.609871, 0.230128, 0.539056, 0.889699},
{0.192585, 0.108952, 0.85459, 0.0435327, 0.950822, 0.162076, 0.149731, 0.232227, 0.467766, 0.623982, 0.64981, 0.882616, 0.657078, 0.982882, 0.439761, 0.0102784, 0.316501, 0.3207, 0.44497, 0.337971, 0.0367912, 0.583309, 0.675184, 0.488756, 0.701192, 0.872093, 0.83179, 0.418624, 0.648157, 0.72208, 0.453872, 0.838037, 0.866036, 0.370746, 0.346494, 0.210837, 0.106088, 0.833141, 0.928012, 0.974633, 0.179986, 0.386711, 0.476054, 0.971337, 0.0833862, 0.8316, 0.396987, 0.245061, 0.406407, 0.693551, 0.263401, 0.863709, 0.684709, 0.196762, 0.411629, 0.562548, 0.827189, 0.709251, 0.595347, 0.989879, 0.640967, 0.724174, 0.948578, 0.11791, 0.107716, 0.998414, 0.162421, 0.319219, 0.00167365, 0.975878, 0.779464, 0.0484334, 0.562912, 0.54019, 0.46287, 0.643213, 0.59208, 0.544762, 0.466295, 0.435591, 0.417584, 0.862323, 0.0845492, 0.73752, 0.323024, 0.54319, 0.608493, 0.0253784, 0.284172, 0.744828, 0.275696, 0.626442, 0.110727, 0.771551, 0.942869, 0.353774, 0.123546, 0.831255, 0.659712, 0.883308},
{0.538771, 0.378705, 0.285112, 0.046232, 0.250293, 0.618585, 0.607835, 0.966278, 0.555018, 0.276363, 0.0358782, 0.808558, 0.358142, 0.59362, 0.668755, 0.144454, 0.68131, 0.208447, 0.0430818, 0.327874, 0.0292507, 0.460339, 0.823987, 0.78201, 0.971242, 0.397711, 0.630864, 0.907431, 0.561616, 0.276205, 0.738616, 0.831221, 0.587366, 0.372048, 0.369535, 0.410455, 0.498386, 0.391315, 0.873277, 0.9452, 0.0086075, 0.056038, 0.0846091, 0.793976, 0.355344, 0.483051, 0.355883, 0.168845, 0.168727, 0.938562, 0.611913, 0.425784, 0.14965, 0.229672, 0.487971, 0.397114, 0.664753, 0.976202, 0.166023, 0.571291, 0.0382628, 0.561212, 0.449694, 0.79297, 0.462207, 0.28783, 0.848004, 0.182574, 0.386018, 0.0319643, 0.00501527, 0.976149, 0.0132962, 0.015281, 0.910078, 0.328688, 0.542385, 0.16031, 0.616345, 0.431442, 0.720741, 0.865012, 0.27432, 0.927346, 0.432986, 0.374396, 0.650303, 0.583175, 0.700601, 0.144223, 0.459247, 0.471472, 0.990082, 0.00546213, 0.621413, 0.297525, 0.82957, 0.353296, 0.977854, 0.0152361},
};

static const std::vector<float> costs = {81.1561, 235.208, 407.288, 876.489, 232.398, 62.3235, 1.09961, 932.311, 368.941, 941.329, 807.741, 612.262, 277.909, 586.059, 206.647, 677.265, 193.166, 150.53, 708.814, 798.714, 978.572, 412.619, 384.511, 875.854, 558.271, 488.246, 169.826, 119.533, 954.654, 583.544, 414.363, 895.438, 828.003, 731.429, 693.854, 684.448, 218.741, 790.21, 64.6166, 747.547, 405.018, 259.243, 169.483, 646.88, 87.7399, 292.305, 402.854, 508.983, 698.259, 879.213, 486.436, 407.076, 25.4576, 521.173, 182.31, 973.764, 784.449, 503.864, 910.951, 111.399, 26.2799, 626.335, 300.937, 459.991, 175.202, 441.559, 752.634, 426.528, 653.611, 339.142, 882.318, 499.084, 839.779, 395.998, 442.622, 211.821, 518.678, 404.286, 454.627, 184.537, 458.621, 629.205, 390.669, 320.239, 624.613, 497.436, 639.538, 507.73, 912.675, 915.512, 408.548, 214.284, 490.626, 580.26, 138.611, 871.707, 235.664, 454.883, 41.7492, 784.65};

static const std::vector<float> min_impressions = {0.0762019, 0.0839961, 0.132321, 0.785466, 0.99823, 0.86839, 0.213945, 0.996433, 0.232065, 0.954238};

//
#endif
