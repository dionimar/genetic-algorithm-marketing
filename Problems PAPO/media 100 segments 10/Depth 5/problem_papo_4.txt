#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(events[15], events[1]),events[51]),events[54]),events[41]),events[23]),cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(events[98], events[94]),events[99]),events[33]),events[63]),events[43]),cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(events[29], events[93]),events[42]),events[44]),events[34]),events[63]),cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(events[48], events[50]),events[7]),events[75]),events[28]),events[74]),cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(events[46], events[76]),events[11]),events[59]),events[27]),events[70]),cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(events[44], events[24]),events[43]),events[45]),events[62]),events[77]),cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(events[67], events[63]),events[49]),events[64]),events[61]),events[0]),cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(events[3], events[64]),events[71]),events[72]),events[86]),events[77]),cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(events[11], events[13]),events[10]),events[88]),events[59]),events[95]),cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(events[8], events[77]),events[76]),events[52]),events[69]),events[36])};


static const std::vector< std::vector<float> > prob = {{0.613752, 0.271485, 0.380202, 0.692443, 0.426799, 0.692186, 0.727051, 0.552893, 0.920069, 0.323313, 0.0573094, 0.37451, 0.57959, 0.674735, 0.353331, 0.509661, 0.656815, 0.0763393, 0.816737, 0.273905, 0.921725, 0.798422, 0.049479, 0.811204, 0.729102, 0.208283, 0.41359, 0.814225, 0.809477, 0.410854, 0.618285, 0.137603, 0.95551, 0.719562, 0.312733, 0.441399, 0.119747, 0.288388, 0.462306, 0.508902, 0.666706, 0.724356, 0.483214, 0.778934, 0.863847, 0.529602, 0.233181, 0.481047, 0.821293, 0.1454, 0.59448, 0.190993, 0.448038, 0.553239, 0.836969, 0.693842, 0.234991, 0.67854, 0.126443, 0.67397, 0.301115, 0.71015, 0.736473, 0.805214, 0.483371, 0.544528, 0.867326, 0.742665, 0.351866, 0.480056, 0.898102, 0.937635, 0.241804, 0.263268, 0.931142, 0.137996, 0.420616, 0.971979, 0.232127, 0.519909, 0.0159415, 0.536776, 0.151307, 0.7999, 0.676799, 0.606463, 0.432029, 0.678733, 0.823528, 0.215988, 0.945918, 0.213501, 0.864887, 0.721385, 0.329333, 0.730697, 0.214241, 0.293475, 0.096541, 0.0384397},
{0.813584, 0.8349, 0.894446, 0.359222, 0.14946, 0.00357448, 0.0922161, 0.11505, 0.742937, 0.965253, 0.256224, 0.322051, 0.54614, 0.799474, 0.429585, 0.66504, 0.963519, 0.256274, 0.653146, 0.548974, 0.438067, 0.35827, 0.126748, 0.150197, 0.36075, 0.531725, 0.351786, 0.107737, 0.245669, 0.0183169, 0.84926, 0.441514, 0.44752, 0.790409, 0.942927, 0.502499, 0.8362, 0.760227, 0.742315, 0.763404, 0.583343, 0.79658, 0.238876, 0.110349, 0.199443, 0.339212, 0.424437, 0.343169, 0.609062, 0.681321, 0.643594, 0.984138, 0.978819, 0.416468, 0.101737, 0.37797, 0.871213, 0.948029, 0.236508, 0.685307, 0.787065, 0.552584, 0.574383, 0.829336, 0.196916, 0.977065, 0.0196386, 0.619277, 0.526938, 0.456666, 0.980854, 0.932919, 0.867638, 0.401234, 0.719792, 0.610707, 0.546792, 0.197225, 0.807742, 0.141112, 0.581571, 0.697941, 0.739335, 0.455609, 0.419339, 0.407024, 0.51928, 0.78702, 0.0843597, 0.90267, 0.137189, 0.960583, 0.45355, 0.101454, 0.741842, 0.943445, 0.00258924, 0.252456, 0.361696, 0.0727476},
{0.247079, 0.571768, 0.66153, 0.179629, 0.772873, 0.00584822, 0.407766, 0.835448, 0.841166, 0.566508, 0.725327, 0.603777, 0.593352, 0.517017, 0.187613, 0.665043, 0.930089, 0.873342, 0.818886, 0.542142, 0.263641, 0.796428, 0.187367, 0.190797, 0.0821027, 0.751157, 0.315697, 0.253311, 0.596088, 0.74282, 0.652721, 0.330047, 0.592379, 0.446618, 0.159768, 0.408522, 0.464652, 0.946218, 0.126519, 0.536533, 0.521063, 0.603437, 0.508565, 0.110403, 0.360276, 0.965657, 0.835624, 0.84631, 0.372542, 0.565021, 0.827284, 0.548752, 0.358875, 0.979068, 0.35211, 0.659525, 0.164308, 0.495805, 0.0367921, 0.499593, 0.0370994, 0.147123, 0.318984, 0.386223, 0.0603469, 0.286316, 0.342582, 0.465325, 0.391113, 0.809728, 0.032504, 0.152747, 0.34366, 0.673735, 0.59855, 0.747927, 0.882622, 0.439805, 0.0683955, 0.174543, 0.48272, 0.713207, 0.150929, 0.185054, 0.96975, 0.27046, 0.762702, 0.757132, 0.714984, 0.885473, 0.112628, 0.507504, 0.300144, 0.109276, 0.851847, 0.872473, 0.262529, 0.460041, 0.298237, 0.127247},
{0.145168, 0.386232, 0.212012, 0.935138, 0.191741, 0.827912, 0.915193, 0.810375, 0.871577, 0.992551, 0.683708, 0.557185, 0.165393, 0.612126, 0.769585, 0.795815, 0.884089, 0.0171905, 0.209114, 0.923895, 0.337663, 0.98553, 0.788228, 0.988992, 0.939965, 0.264906, 0.531683, 0.899594, 0.903384, 0.0857508, 0.823521, 0.753972, 0.45867, 0.451032, 0.979899, 0.668652, 0.944556, 0.0756407, 0.887805, 0.512799, 0.0167576, 0.0991796, 0.47212, 0.0888288, 0.691888, 0.295491, 0.815844, 0.120804, 0.788964, 0.118355, 0.784131, 0.226832, 0.484331, 0.628354, 0.368331, 0.801031, 0.323758, 0.571233, 0.213305, 0.218729, 0.989735, 0.429609, 0.098555, 0.458244, 0.087742, 0.184726, 0.022978, 0.586644, 0.0484884, 0.598302, 0.274327, 0.280124, 0.242214, 0.537795, 0.737236, 0.731745, 0.699839, 0.858743, 0.797485, 0.783522, 0.368617, 0.0678284, 0.6355, 0.0594822, 0.114137, 0.805304, 0.955608, 0.405755, 0.844855, 0.773652, 0.964408, 0.136642, 0.545686, 0.874027, 0.522995, 0.870537, 0.849095, 0.00657111, 0.280121, 0.289181},
{0.987736, 0.535866, 0.578419, 0.641522, 0.356981, 0.413119, 0.374831, 0.882876, 0.482715, 0.105034, 0.663033, 0.37373, 0.720853, 0.925179, 0.537325, 0.779082, 0.88381, 0.614376, 0.892383, 0.522834, 0.633974, 0.0902962, 0.0809958, 0.603571, 0.658604, 0.413733, 0.833548, 0.672374, 0.795761, 0.556826, 0.636007, 0.188911, 0.822653, 0.95503, 0.869434, 0.702316, 0.0336552, 0.344688, 0.889872, 0.365015, 0.882988, 0.775653, 0.875655, 0.348482, 0.915036, 0.610607, 0.172385, 0.00536386, 0.441158, 0.800435, 0.419207, 0.996578, 0.0548259, 0.0475831, 0.653871, 0.41577, 0.276941, 0.558954, 0.444867, 0.375513, 0.681703, 0.17843, 0.196462, 0.199971, 0.912126, 0.177057, 0.967315, 0.659968, 0.996113, 0.557725, 0.902332, 0.347562, 0.542066, 0.0177243, 0.341694, 0.991911, 0.968302, 0.299916, 0.944802, 0.629888, 0.12755, 0.0309043, 0.268833, 0.800895, 0.767565, 0.0200854, 0.241316, 0.579283, 0.384977, 0.296613, 0.235676, 0.412705, 0.801323, 0.167953, 0.545791, 0.0112417, 0.281132, 0.881108, 0.30376, 0.450248},
{0.760289, 0.831742, 0.454599, 0.830797, 0.280963, 0.341657, 0.00331695, 0.342924, 0.305089, 0.385262, 0.797966, 0.30392, 0.703055, 0.995984, 0.926586, 0.114827, 0.486922, 0.617667, 0.990895, 0.0692152, 0.790746, 0.72685, 0.675034, 0.82455, 0.502882, 0.760388, 0.431736, 0.255446, 0.211205, 0.253688, 0.272779, 0.871892, 0.830919, 0.746864, 0.901953, 0.616492, 0.983333, 0.114776, 0.400825, 0.394766, 0.259292, 0.77257, 0.797058, 0.0616403, 0.49548, 0.756267, 0.593562, 0.343054, 0.997882, 0.811908, 0.554607, 0.0938862, 0.672318, 0.282533, 0.0209061, 0.850172, 0.571243, 0.655172, 0.518732, 0.141118, 0.251209, 0.0655066, 0.782866, 0.446083, 0.38355, 0.526406, 0.972702, 0.485979, 0.989265, 0.849477, 0.833425, 0.667254, 0.17995, 0.296268, 0.919061, 0.281342, 0.551795, 0.781009, 0.208354, 0.148392, 0.910641, 0.599443, 0.74329, 0.335354, 0.177807, 0.301816, 0.778288, 0.702045, 0.399476, 0.214833, 0.513743, 0.398739, 0.0462622, 0.126186, 0.804334, 0.645017, 0.815803, 0.697439, 0.987717, 0.456216},
{0.944154, 0.546018, 0.638388, 0.482002, 0.957027, 0.752041, 0.184255, 0.523101, 0.686907, 0.396765, 0.0341368, 0.0214743, 0.500112, 0.259446, 0.584756, 0.512382, 0.646586, 0.766072, 0.54865, 0.23023, 0.738955, 0.0138835, 0.4865, 0.985714, 0.0113249, 0.507955, 0.682421, 0.186056, 0.684507, 0.0260684, 0.415542, 0.168741, 0.893908, 0.261941, 0.826303, 0.663366, 0.0698549, 0.0598848, 0.65031, 0.742439, 0.222928, 0.321584, 0.790665, 0.136625, 0.811206, 0.208952, 0.0338865, 0.815831, 0.772977, 0.59459, 0.850708, 0.870421, 0.770244, 0.938637, 0.109341, 0.144926, 0.61501, 0.281177, 0.695521, 0.836868, 0.749631, 0.824011, 0.0462721, 0.0358594, 0.109107, 0.049426, 0.160441, 0.890838, 0.805828, 0.226318, 0.512176, 0.501505, 0.365924, 0.200955, 0.606813, 0.285699, 0.256281, 0.567114, 0.80129, 0.319344, 0.471493, 0.11287, 0.951898, 0.015678, 0.900372, 0.420583, 0.166351, 0.268134, 0.600111, 0.742557, 0.309525, 0.0461123, 0.231051, 0.838184, 0.937108, 0.43536, 0.638046, 0.656542, 0.992364, 0.742936},
{0.974355, 0.741954, 0.904738, 0.155769, 0.559778, 0.913533, 0.331661, 0.877916, 0.445004, 0.212476, 0.864653, 0.810557, 0.718697, 0.374405, 0.100689, 0.831175, 0.840973, 0.100075, 0.3874, 0.24596, 0.460499, 0.530427, 0.415008, 0.0129552, 0.800936, 0.298122, 0.24643, 0.738886, 0.920181, 0.208174, 0.362615, 0.830071, 0.0290319, 0.0887756, 0.180629, 0.679032, 0.572471, 0.913386, 0.996369, 0.959705, 0.151007, 0.249115, 0.781968, 0.631417, 0.750671, 0.190011, 0.494585, 0.71185, 0.412029, 0.455369, 0.820253, 0.41151, 0.0876266, 0.935676, 0.218733, 0.278502, 0.310607, 0.346176, 0.00106886, 0.489321, 0.563052, 0.797961, 0.854488, 0.663827, 0.864821, 0.951678, 0.650955, 0.333753, 0.0540763, 0.652508, 0.54449, 0.10679, 0.173779, 0.384876, 0.357808, 0.363807, 0.655595, 0.85681, 0.119893, 0.719703, 0.929759, 0.0330159, 0.595025, 0.38865, 0.880719, 0.510922, 0.85432, 0.597292, 0.794012, 0.926836, 0.996761, 0.669143, 0.918199, 0.571311, 0.581589, 0.817334, 0.589147, 0.375663, 0.384854, 0.121899},
{0.343674, 0.31578, 0.0914258, 0.188293, 0.575229, 0.167869, 0.729978, 0.338829, 0.0480511, 0.475268, 0.618789, 0.392432, 0.226957, 0.18246, 0.881017, 0.666718, 0.914785, 0.37415, 0.663839, 0.790784, 0.904449, 0.279693, 0.0416379, 0.116478, 0.0240171, 0.530245, 0.626303, 0.99367, 0.465324, 0.0395829, 0.440899, 0.0276022, 0.215497, 0.159127, 0.270234, 0.948343, 0.035686, 0.050334, 0.379503, 0.466285, 0.0512327, 0.440793, 0.0788189, 0.0201559, 0.985484, 0.889627, 0.19178, 0.940725, 0.96005, 0.362507, 0.334591, 0.93849, 0.691309, 0.950971, 0.364454, 0.802558, 0.382321, 0.115079, 0.264097, 0.529952, 0.978641, 0.019868, 0.182941, 0.0254034, 0.714563, 0.960337, 0.0501743, 0.49392, 0.785617, 0.0621133, 0.31676, 0.126876, 0.140999, 0.164718, 0.91081, 0.415293, 0.0238259, 0.55374, 0.359432, 0.749527, 0.883717, 0.0970947, 0.58655, 0.870426, 0.984842, 0.648579, 0.0419679, 0.510174, 0.971257, 0.899029, 0.727396, 0.98434, 0.972784, 0.180652, 0.58914, 0.906826, 0.394234, 0.436676, 0.13219, 0.349027},
{0.921161, 0.67608, 0.202369, 0.518268, 0.837366, 0.526384, 0.282371, 0.0445283, 0.451988, 0.911866, 0.729424, 0.273101, 0.181012, 0.0580959, 0.572837, 0.53968, 0.280951, 0.287475, 0.300355, 0.15935, 0.427212, 0.896417, 0.978575, 0.316021, 0.566809, 0.904478, 0.143988, 0.326315, 0.103291, 0.149083, 0.367056, 0.685121, 0.176777, 0.535188, 0.532364, 0.679747, 0.838599, 0.582548, 0.990445, 0.562548, 0.491665, 0.945408, 0.0272612, 0.994435, 0.819265, 0.501001, 0.330075, 0.272923, 0.0929123, 0.0875767, 0.402887, 0.05942, 0.90143, 0.132489, 0.864876, 0.0690982, 0.4723, 0.804753, 0.944033, 0.144465, 0.0877513, 0.608018, 0.0123837, 0.29326, 0.801118, 0.693352, 0.758968, 0.125821, 0.0223641, 0.361831, 0.724499, 0.246567, 0.280307, 0.954167, 0.346594, 0.892507, 0.691087, 0.074627, 0.124341, 0.715534, 0.0352788, 0.955205, 0.83686, 0.42913, 0.893826, 0.111128, 0.832113, 0.688694, 0.707118, 0.0516758, 0.26863, 0.255149, 0.818045, 0.644713, 0.778601, 0.107605, 0.790351, 0.313064, 0.956995, 0.313757},
};

static const std::vector<float> costs = {9.79359, 108.678, 636.175, 419.481, 955.257, 756.231, 360.52, 924.832, 827.09, 179.968, 307.382, 774.866, 394.312, 849.639, 888.607, 148.831, 131.077, 422.385, 618.498, 634.41, 150.052, 957.487, 400.435, 382.767, 746.994, 571.17, 863.759, 708.991, 909.786, 421.941, 521.459, 44.5346, 491.599, 355.756, 481.158, 754.947, 432.191, 934.555, 584.158, 836.462, 810.517, 273.228, 564.969, 373.131, 680.009, 240.142, 49.7791, 31.4504, 375.323, 313.496, 632.531, 767.135, 199.516, 963.349, 736.924, 25.4858, 400.761, 423.095, 155.421, 228.048, 613.228, 373.12, 538.693, 736.674, 948.922, 382.449, 814.018, 500.471, 903.768, 939.023, 732.143, 75.1874, 229.824, 355.484, 79.3372, 418.129, 901.84, 17.9278, 237.967, 742.539, 787.043, 234.184, 462.961, 493.147, 27.7116, 336.687, 25.8659, 470.471, 292.594, 824.927, 843.501, 743.788, 691.376, 200.486, 257.589, 912.415, 409.53, 461.123, 200.863, 131.071};

static const std::vector<float> min_impressions = {0.297942, 0.213462, 0.292187, 0.819282, 0.966077, 0.0807996, 0.409652, 0.975594, 0.606647, 0.824346};

//
#endif
