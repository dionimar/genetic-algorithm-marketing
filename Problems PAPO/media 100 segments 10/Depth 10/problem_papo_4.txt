#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(events[10], events[30]),events[76]),events[1]),events[95]),events[66]),events[98]),events[65]),events[82]),events[8]),events[49]),cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(events[41], events[77]),events[60]),events[68]),events[19]),events[50]),events[84]),events[53]),events[58]),events[5]),events[33]),cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(events[65], events[48]),events[13]),events[75]),events[52]),events[92]),events[49]),events[21]),events[11]),events[6]),events[90]),cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(events[49], events[74]),events[32]),events[51]),events[30]),events[23]),events[25]),events[24]),events[8]),events[5]),events[45]),cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(events[62], events[54]),events[26]),events[95]),events[9]),events[40]),events[79]),events[29]),events[28]),events[23]),events[16]),cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(events[45], events[93]),events[16]),events[83]),events[37]),events[38]),events[87]),events[58]),events[47]),events[11]),events[49]),cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(events[78], events[75]),events[62]),events[5]),events[79]),events[6]),events[19]),events[32]),events[95]),events[18]),events[66]),cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(events[47], events[71]),events[44]),events[81]),events[62]),events[10]),events[94]),events[28]),events[93]),events[59]),events[27]),cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(events[18], events[51]),events[2]),events[48]),events[40]),events[24]),events[20]),events[12]),events[84]),events[39]),events[60]),cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(events[23], events[44]),events[52]),events[66]),events[11]),events[89]),events[96]),events[68]),events[86]),events[57]),events[18])};


static const std::vector< std::vector<float> > prob = {{0.793163, 0.425226, 0.310826, 0.0339271, 0.0946173, 0.905344, 0.0231467, 0.999472, 0.994069, 0.508472, 0.268506, 0.343677, 0.823103, 0.671003, 0.677098, 0.509409, 0.887927, 0.865399, 0.662015, 0.0664419, 0.867715, 0.661903, 0.95263, 0.560907, 0.21778, 0.949374, 0.102477, 0.0287316, 0.744446, 0.234647, 0.252964, 0.373867, 0.104903, 0.444221, 0.19716, 0.999994, 0.634719, 0.43881, 0.853232, 0.706729, 0.217586, 0.502393, 0.303766, 0.674451, 0.0428617, 0.692943, 0.789278, 0.781067, 0.908391, 0.897758, 0.934492, 0.228987, 0.890735, 0.444239, 0.755562, 0.541703, 0.184928, 0.954845, 0.193857, 0.0327283, 0.819373, 0.233151, 0.707399, 0.110382, 0.519738, 0.968149, 0.501251, 0.0451072, 0.78102, 0.132285, 0.353244, 0.162005, 0.199422, 0.892299, 0.0338755, 0.99559, 0.264624, 0.756622, 0.328435, 0.815233, 0.149257, 0.636934, 0.646646, 0.941941, 0.936974, 0.696447, 0.0355947, 0.361932, 0.922443, 0.0141435, 0.132287, 0.725791, 0.842004, 0.192527, 0.771082, 0.584117, 0.286805, 0.339795, 0.0673403, 0.118557},
{0.303513, 0.891258, 0.730311, 0.688752, 0.685052, 0.243413, 0.249873, 0.155648, 0.586016, 0.123552, 0.219152, 0.200873, 0.713551, 0.133904, 0.638978, 0.575189, 0.151252, 0.251038, 0.791685, 0.539349, 0.784108, 0.57618, 0.120766, 0.244121, 0.0402308, 0.933802, 0.500338, 0.381347, 0.280307, 0.332409, 0.717854, 0.264878, 0.0449097, 0.0262602, 0.750142, 0.717581, 0.585582, 0.699293, 0.224258, 0.810277, 0.607002, 0.539104, 0.242612, 0.123855, 0.370685, 0.757585, 0.197342, 0.316242, 0.0636781, 0.141903, 0.130803, 0.989333, 0.580876, 0.220622, 0.0949392, 0.0878703, 0.609012, 0.596745, 0.0878236, 0.0522799, 0.420218, 0.945738, 0.975426, 0.016031, 0.315785, 0.951088, 0.413776, 0.607076, 0.349642, 0.0678943, 0.118248, 0.760347, 0.142417, 0.565827, 0.635854, 0.0665542, 0.545878, 0.579151, 0.662171, 0.979666, 0.755442, 0.685569, 0.517589, 0.994842, 0.850398, 0.527491, 0.233505, 0.640312, 0.765701, 0.885223, 0.254046, 0.800479, 0.998514, 0.0821479, 0.92079, 0.46383, 0.796884, 0.636761, 0.215517, 0.72945},
{0.740664, 0.234342, 0.107141, 0.916274, 0.648935, 0.895747, 0.879819, 0.384539, 0.197765, 0.507268, 0.345401, 0.997667, 0.931228, 0.527907, 0.685909, 0.979667, 0.482675, 0.622634, 0.943284, 0.826539, 0.955365, 0.879344, 0.0881271, 0.0754401, 0.0101152, 0.612756, 0.564012, 0.0516287, 0.120927, 0.578867, 0.134902, 0.697295, 0.0114036, 0.904315, 0.770246, 0.776643, 0.0704146, 0.0241003, 0.406871, 0.761756, 0.572249, 0.261253, 0.770039, 0.181093, 0.692092, 0.925015, 0.0302478, 0.195779, 0.0446725, 0.265152, 0.638992, 0.877667, 0.333356, 0.221348, 0.563396, 0.616853, 0.759698, 0.334291, 0.532943, 0.0204619, 0.783357, 0.679748, 0.913438, 0.329025, 0.417222, 0.177483, 0.94361, 0.194649, 0.3728, 0.0380826, 0.745784, 0.135481, 0.792212, 0.30736, 0.594476, 0.338481, 0.902889, 0.0569144, 0.276574, 0.403482, 0.479658, 0.80115, 0.325329, 0.315844, 0.657317, 0.687756, 0.314943, 0.746152, 0.392409, 0.166586, 0.890643, 0.397882, 0.346456, 0.407256, 0.177679, 0.770562, 0.598407, 0.270062, 0.473033, 0.1247},
{0.176965, 0.452103, 0.106489, 0.783418, 0.803553, 0.978587, 0.438057, 0.608688, 0.423279, 0.193316, 0.370354, 0.850969, 0.0296012, 0.433063, 0.533982, 0.140318, 0.113155, 0.966962, 0.354863, 0.192204, 0.237632, 0.765147, 0.799635, 0.715552, 0.385535, 0.132325, 0.712973, 0.31559, 0.95427, 0.272127, 0.492092, 0.428095, 0.955078, 0.742696, 0.0574034, 0.755701, 0.673243, 0.949741, 0.904094, 0.502952, 0.954158, 0.56215, 0.421397, 0.974053, 0.15661, 0.862083, 0.363127, 0.107207, 0.867616, 0.671793, 0.413755, 0.669052, 0.766119, 0.215075, 0.613003, 0.19308, 0.893104, 0.226129, 0.281565, 0.608463, 0.652427, 0.0529987, 0.0696253, 0.301557, 0.0458518, 0.0545306, 0.969889, 0.064421, 0.570328, 0.161906, 0.152087, 0.148698, 0.153085, 0.226766, 0.404, 0.385511, 0.938409, 0.129091, 0.602478, 0.18579, 0.239188, 0.847714, 0.527982, 0.534241, 0.501998, 0.479531, 0.117368, 0.826484, 0.75122, 0.545518, 0.961636, 0.633021, 0.0515072, 0.310631, 0.865999, 0.262808, 0.153768, 0.952928, 0.0907872, 0.303055},
{0.778992, 0.819683, 0.998653, 0.187521, 0.0464479, 0.953221, 0.968139, 0.130055, 0.616331, 0.0415831, 0.338877, 0.231092, 0.507611, 0.124592, 0.533644, 0.897419, 0.86579, 0.366308, 0.341093, 0.664261, 0.836893, 0.145088, 0.552276, 0.0997082, 0.177078, 0.558256, 0.376865, 0.430317, 0.305077, 0.137155, 0.417672, 0.261456, 0.707476, 0.440547, 0.114171, 0.0869475, 0.0658917, 0.890155, 0.0317564, 0.947959, 0.107507, 0.440177, 0.798805, 0.424432, 0.976416, 0.267076, 0.482317, 0.574673, 0.263959, 0.929105, 0.99115, 0.550448, 0.561268, 0.486434, 0.128175, 0.444721, 0.246147, 0.96655, 0.489722, 0.614183, 0.0706941, 0.165231, 0.739665, 0.00297737, 0.985018, 0.655077, 0.519997, 0.230138, 0.323012, 0.431541, 0.4268, 0.421227, 0.0874807, 0.466505, 0.654309, 0.82654, 0.67787, 0.727893, 0.421173, 0.473952, 0.604103, 0.70972, 0.910196, 0.823118, 0.588845, 0.875809, 0.210695, 0.626154, 0.917243, 0.579482, 0.242972, 0.0763038, 0.462067, 0.443054, 0.768258, 0.405606, 0.796062, 0.237206, 0.720807, 0.697357},
{0.289183, 0.00467611, 0.707162, 0.679927, 0.624983, 0.529173, 0.849766, 0.635016, 0.414048, 0.289423, 0.564584, 0.41825, 0.621159, 0.996971, 0.588792, 0.258541, 0.418211, 0.318587, 0.110926, 0.911031, 0.245044, 0.916223, 0.434334, 0.627625, 0.694921, 0.297007, 0.839195, 0.830355, 0.479342, 0.160358, 0.31422, 0.367243, 0.756401, 0.909597, 0.399542, 0.726837, 0.667389, 0.0508952, 0.862012, 0.844391, 0.478998, 0.101018, 0.572377, 0.799965, 0.58511, 0.1598, 0.519029, 0.84498, 0.0452721, 0.982288, 0.699236, 0.719187, 0.697455, 0.411468, 0.470255, 0.186125, 0.0664628, 0.213562, 0.557572, 0.47978, 0.720332, 0.249143, 0.842839, 0.174779, 0.451288, 0.788935, 0.36269, 0.659571, 0.435088, 0.922656, 0.908521, 0.489076, 0.135391, 0.749015, 0.43497, 0.234905, 0.436067, 0.0173261, 0.778795, 0.368235, 0.513442, 0.620748, 0.982441, 0.819224, 0.526714, 0.393041, 0.688201, 0.229739, 0.890822, 0.183985, 0.291017, 0.173663, 0.169931, 0.744394, 0.671601, 0.272543, 0.775016, 0.00365377, 0.948269, 0.0673732},
{0.181075, 0.535279, 0.397117, 0.733205, 0.17181, 0.488822, 0.20224, 0.898092, 0.891888, 0.258214, 0.823137, 0.662281, 0.674202, 0.270021, 0.765947, 0.731986, 0.0532447, 0.737329, 0.180158, 0.486131, 0.637366, 0.186096, 0.272238, 0.0165734, 0.647975, 0.635013, 0.186401, 0.39266, 0.417794, 0.500852, 0.208776, 0.597483, 0.743458, 0.372119, 0.666357, 0.0100452, 0.201741, 0.0383255, 0.715591, 0.354888, 0.466738, 0.888032, 0.498739, 0.827939, 0.95279, 0.825709, 0.654209, 0.462155, 0.887116, 0.180671, 0.886192, 0.307707, 0.0278655, 0.213227, 0.607526, 0.470169, 0.3937, 0.295697, 0.304244, 0.49597, 0.203119, 0.137254, 0.163619, 0.799141, 0.620091, 0.360959, 0.821599, 0.649365, 0.393803, 0.563071, 0.375376, 0.289727, 0.511829, 0.014907, 0.852412, 0.0201001, 0.930191, 0.93548, 0.366723, 0.64037, 0.0826457, 0.782663, 0.416256, 0.588346, 0.268983, 0.282444, 0.318566, 0.86987, 0.470633, 0.124938, 0.423309, 0.516087, 0.722465, 0.83387, 0.342858, 0.203322, 0.372136, 0.87416, 0.580503, 0.444544},
{0.179052, 0.306887, 0.421984, 0.880521, 0.91075, 0.788176, 0.611931, 0.122318, 0.481831, 0.073563, 0.978178, 0.171688, 0.335905, 0.479388, 0.0804343, 0.33501, 0.980903, 0.862114, 0.496981, 0.677565, 0.351988, 0.818967, 0.136683, 0.855987, 0.80181, 0.477482, 0.292687, 0.47543, 0.0825993, 0.247274, 0.0998876, 0.0404909, 0.16466, 0.46104, 0.55891, 0.942695, 0.519856, 0.0292801, 0.221128, 0.0830229, 0.440596, 0.864772, 0.0520155, 0.828101, 0.763294, 0.920535, 0.513599, 0.605399, 0.588501, 0.125134, 0.421009, 0.536618, 0.650764, 0.754916, 0.468152, 0.844136, 0.815229, 0.234457, 0.685457, 0.611758, 0.690842, 0.1773, 0.99072, 0.387313, 0.989458, 0.616038, 0.574678, 0.255867, 0.8539, 0.014455, 0.711289, 0.118461, 0.173599, 0.412943, 0.691684, 0.197345, 0.129249, 0.71195, 0.545667, 0.974097, 0.779511, 0.854086, 0.781467, 0.369384, 0.622753, 0.98547, 0.839886, 0.909199, 0.773578, 0.756318, 0.4385, 0.738636, 0.643757, 0.148682, 0.653488, 0.195358, 0.266336, 0.290099, 0.103282, 0.134316},
{0.516807, 0.172412, 0.386263, 0.652734, 0.387, 0.146806, 0.050168, 0.713818, 0.922949, 0.54871, 0.387898, 0.0997308, 0.86163, 0.771674, 0.0636019, 0.840783, 0.22736, 0.734178, 0.235018, 0.130348, 0.0195201, 0.676206, 0.190367, 0.0222859, 0.437169, 0.950373, 0.697339, 0.879317, 0.152562, 0.328908, 0.3562, 0.21879, 0.888475, 0.445424, 0.806675, 0.513275, 0.356525, 0.00391388, 0.729779, 0.39429, 0.0630717, 0.0920402, 0.114495, 0.648533, 0.91894, 0.080602, 0.103294, 0.0147771, 0.652659, 0.398722, 0.79011, 0.520134, 0.565702, 0.327458, 0.0948164, 0.541935, 0.46784, 0.732522, 0.790923, 0.898559, 0.858582, 0.628278, 0.643328, 0.213454, 0.243381, 0.597266, 0.90429, 0.540888, 0.686408, 0.320651, 0.516209, 0.241524, 0.177119, 0.284018, 0.184799, 0.366822, 0.434963, 0.906487, 0.941254, 0.49899, 0.634761, 0.0208285, 0.204236, 0.0933807, 0.773365, 0.98816, 0.778055, 0.445828, 0.402685, 0.835122, 0.112885, 0.932891, 0.114429, 0.513408, 0.304161, 0.997595, 0.172635, 0.927257, 0.705812, 0.0582606},
{0.0247011, 0.769082, 0.388515, 0.231838, 0.0270612, 0.983067, 0.0771889, 0.683717, 0.668678, 0.831031, 0.687991, 0.288496, 0.325202, 0.0159421, 0.965822, 0.145106, 0.715301, 0.871822, 0.689365, 0.234334, 0.664126, 0.106135, 0.659638, 0.185019, 0.709182, 0.941695, 0.0220436, 0.121414, 0.0656816, 0.409093, 0.160977, 0.121843, 0.778876, 0.729649, 0.770028, 0.97791, 0.0264444, 0.456467, 0.89773, 0.362884, 0.529132, 0.570781, 0.138656, 0.138135, 0.863176, 0.935465, 0.673373, 0.955884, 0.591771, 0.627591, 0.36427, 0.514755, 0.516691, 0.74791, 0.262492, 0.622569, 0.219628, 0.300271, 0.520139, 0.170704, 0.806661, 0.51458, 0.862025, 0.245855, 0.405111, 0.686592, 0.954414, 0.969874, 0.517436, 0.767764, 0.584832, 0.673212, 0.421699, 0.304958, 0.291731, 0.57717, 0.910299, 0.375319, 0.730701, 0.918341, 0.591302, 0.595731, 0.348059, 0.784972, 0.112888, 0.119443, 0.212568, 0.0759871, 0.95051, 0.199563, 0.0326392, 0.568229, 0.445587, 0.580231, 0.677771, 0.965642, 0.198838, 0.651572, 0.636089, 0.391455},
};

static const std::vector<float> costs = {639.514, 153.242, 587.984, 559.012, 282.081, 452.007, 852.898, 168.52, 553.223, 766.692, 255.724, 541.736, 54.3483, 357.541, 644.792, 431.739, 12.1662, 993.624, 864.81, 520.481, 532.683, 758.216, 157.658, 901.67, 835.539, 98.6584, 693.08, 985.046, 396.262, 373.238, 892.56, 508.578, 484.309, 86.0832, 369.876, 204.534, 735.518, 326.014, 388.708, 977.065, 223.461, 756.873, 520.173, 792.182, 147.982, 423.825, 104.904, 519.065, 427.854, 948.382, 442.235, 138.245, 909.957, 605.12, 457.122, 554.032, 302.587, 206.028, 819.866, 905.204, 399.32, 51.9115, 700.449, 84.1305, 875.958, 172.002, 346.931, 955.393, 500.139, 595.295, 105.334, 959.117, 963.449, 731.818, 2.25093, 104.219, 918.762, 125.785, 429.481, 489.76, 340.879, 166.134, 724.38, 230.842, 810.307, 474.331, 134.064, 640.2, 699.377, 792.657, 545.413, 357.717, 796.734, 220.513, 681.74, 899.471, 240.072, 942.087, 734.039, 213.564};

static const std::vector<float> min_impressions = {0.87036, 0.125349, 0.533745, 0.612018, 0.0816385, 0.900948, 0.0521645, 0.776096, 0.997656, 0.575464};

//
#endif
