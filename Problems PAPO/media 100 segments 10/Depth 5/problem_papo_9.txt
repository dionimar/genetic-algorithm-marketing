#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(events[38], events[77]),events[18]),events[80]),events[20]),events[50]),cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(events[10], events[28]),events[56]),events[13]),events[22]),events[5]),cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(events[57], events[95]),events[88]),events[78]),events[7]),events[22]),cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(events[11], events[93]),events[87]),events[26]),events[71]),events[89]),cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(events[89], events[29]),events[98]),events[81]),events[16]),events[74]),cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(events[8], events[48]),events[27]),events[20]),events[33]),events[97]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(events[90], events[54]),events[3]),events[85]),events[0]),events[17]),cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(events[36], events[22]),events[24]),events[60]),events[49]),events[95]),cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[79], events[26]),events[93]),events[86]),events[6]),events[85]),cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(events[42], events[25]),events[51]),events[90]),events[31]),events[1])};


static const std::vector< std::vector<float> > prob = {{0.636522, 0.4133, 0.512576, 0.430222, 0.265587, 0.25923, 0.673743, 0.690621, 0.227803, 0.439865, 0.887603, 0.974416, 0.862746, 0.0975623, 0.914323, 0.152371, 0.612837, 0.758793, 0.291652, 0.172307, 0.876877, 0.527892, 0.795013, 0.410755, 0.845364, 0.966125, 0.320681, 0.561587, 0.223078, 0.612123, 0.651295, 0.293365, 0.749822, 0.436942, 0.282192, 0.347988, 0.116767, 0.842356, 0.26442, 0.631015, 0.542922, 0.347263, 0.57075, 0.922231, 0.770014, 0.467251, 0.838706, 0.992413, 0.649111, 0.520471, 0.98779, 0.405197, 0.761881, 0.836699, 0.877194, 0.324166, 0.209271, 0.173425, 0.344917, 0.0606594, 0.166267, 0.628427, 0.271435, 0.343668, 0.0691707, 0.867373, 0.217894, 0.481236, 0.471987, 0.066127, 0.0966972, 0.923957, 0.965795, 0.232607, 0.885565, 0.455175, 0.79819, 0.784023, 0.79261, 0.141772, 0.890343, 0.914146, 0.337107, 0.552934, 0.126868, 0.980416, 0.911942, 0.143235, 0.052626, 0.945608, 0.305088, 0.505816, 0.735549, 0.496325, 0.629523, 0.294376, 0.947094, 0.958238, 0.442399, 0.0127895},
{0.456292, 0.612704, 0.30155, 0.888823, 0.105515, 0.63442, 0.22863, 0.654281, 0.502017, 0.426168, 0.470843, 0.00411929, 0.0725639, 0.8146, 0.957535, 0.614997, 0.721131, 0.145595, 0.322799, 0.701079, 0.114005, 0.961006, 0.0766662, 0.900849, 0.640315, 0.158152, 0.257235, 0.0499059, 0.0828625, 0.238977, 0.365426, 0.649013, 0.934173, 0.706527, 0.718245, 0.705189, 0.0286282, 0.250849, 0.00542053, 0.126842, 0.432482, 0.800787, 0.905522, 0.88563, 0.936479, 0.916393, 0.348672, 0.5532, 0.700714, 0.303297, 0.512425, 0.697441, 0.356907, 0.810381, 0.837219, 0.223006, 0.804413, 0.976231, 0.931775, 0.629035, 0.953415, 0.389757, 0.57999, 0.41247, 0.638795, 0.88809, 0.0118816, 0.049084, 0.536922, 0.0501388, 0.451775, 0.317236, 0.138953, 0.825156, 0.749866, 0.113296, 0.930899, 0.905993, 0.356397, 0.0909049, 0.505585, 0.0780584, 0.725403, 0.674567, 0.603793, 0.64778, 0.667611, 0.517251, 0.600085, 0.746265, 0.0159721, 0.861217, 0.586279, 0.9495, 0.304407, 0.667184, 0.996912, 0.26461, 0.895065, 0.154177},
{0.319727, 0.598801, 0.442465, 0.93619, 0.683854, 0.956531, 0.526268, 0.715629, 0.53311, 0.934164, 0.934393, 0.39002, 0.56623, 0.130185, 0.0704973, 0.76286, 0.7573, 0.946571, 0.212509, 0.176214, 0.0734771, 0.514188, 0.830396, 0.829971, 0.0985315, 0.641563, 0.694537, 0.426311, 0.907941, 0.628764, 0.503148, 0.0422102, 0.727034, 0.201691, 0.320993, 0.59013, 0.339034, 0.088902, 0.636494, 0.0186543, 0.367319, 0.628764, 0.116663, 0.483149, 0.321799, 0.992146, 0.455995, 0.364402, 0.219461, 0.0828788, 0.219451, 0.810645, 0.185476, 0.741648, 0.335257, 0.500586, 0.516976, 0.43722, 0.897084, 0.100184, 0.576858, 0.773344, 0.6908, 0.473155, 0.364654, 0.243791, 0.742971, 0.155875, 0.318852, 0.0508422, 0.310094, 0.369769, 0.0874738, 0.126183, 0.282507, 0.7977, 0.853625, 0.174152, 0.313952, 0.284111, 0.385384, 0.750389, 0.58204, 0.871381, 0.94652, 0.845915, 0.468188, 0.873551, 0.618856, 0.551354, 0.948316, 0.459791, 0.147154, 0.427064, 0.459543, 0.773188, 0.625412, 0.437081, 0.326736, 0.366951},
{0.954859, 0.955233, 0.88251, 0.655667, 0.720847, 0.496713, 0.593864, 0.976136, 0.296239, 0.770343, 0.315164, 0.367679, 0.802113, 0.972171, 0.844338, 0.33931, 0.575498, 0.417124, 0.283136, 0.179484, 0.973001, 0.267259, 0.207851, 0.852638, 0.966044, 0.973057, 0.460962, 0.0762355, 0.455326, 0.518931, 0.831703, 0.45304, 0.0152133, 0.790512, 0.371396, 0.232718, 0.411414, 0.370911, 0.963407, 0.969182, 0.796386, 0.885521, 0.530417, 0.0122068, 0.83519, 0.371365, 0.0380067, 0.727924, 0.534364, 0.0336492, 0.619386, 0.390528, 0.861866, 0.748575, 0.425275, 0.0236586, 0.855702, 0.290776, 0.465216, 0.884798, 0.820465, 0.833359, 0.258892, 0.525354, 0.213873, 0.633245, 0.266704, 0.182507, 0.218944, 0.346602, 0.982959, 0.0626851, 0.0222587, 0.262799, 0.518595, 0.381104, 0.824001, 0.262546, 0.917822, 0.335808, 0.566826, 0.79146, 0.761571, 0.345218, 0.247264, 0.626639, 0.4448, 0.0120394, 0.5167, 0.984492, 0.145197, 0.0218896, 0.111515, 0.153603, 0.791455, 0.0244861, 0.112036, 0.133687, 0.122992, 0.064214},
{0.700845, 0.351045, 0.72898, 0.744159, 0.789675, 0.849938, 0.324652, 0.236689, 0.673216, 0.168777, 0.203282, 0.289914, 0.968814, 0.0489549, 0.0789184, 0.317527, 0.984674, 0.356215, 0.271663, 0.776799, 0.105642, 0.0661469, 0.115101, 0.0523173, 0.163555, 0.555458, 0.326046, 0.933672, 0.0601835, 0.978872, 0.16171, 0.197339, 0.0667373, 0.565592, 0.992871, 0.517276, 0.608455, 0.603141, 0.397349, 0.767936, 0.0993728, 0.321102, 0.529842, 0.630988, 0.815745, 0.0350464, 0.163993, 0.735127, 0.304555, 0.0884616, 0.981859, 0.694658, 0.736678, 0.736017, 0.582598, 0.358281, 0.0676527, 0.36168, 0.451307, 0.732212, 0.464053, 0.708026, 0.515135, 0.143594, 0.324294, 0.0394801, 0.264852, 0.515318, 0.201933, 0.912818, 0.298851, 0.749366, 0.084686, 0.123785, 0.0385564, 0.818124, 0.539189, 0.850962, 0.492522, 0.709616, 0.848028, 0.193883, 0.201225, 0.486942, 0.6593, 0.855996, 0.69803, 0.19703, 0.697932, 0.211705, 0.441574, 0.459236, 0.545531, 0.656421, 0.735727, 0.808228, 0.981433, 0.786029, 0.657373, 0.662311},
{0.133181, 0.187048, 0.911136, 0.750859, 0.483665, 0.727381, 0.660828, 0.654134, 0.590833, 0.958447, 0.534629, 0.323617, 0.967378, 0.371742, 0.852033, 0.490422, 0.376183, 0.351767, 0.422397, 0.945478, 0.806995, 0.262405, 0.0584773, 0.33437, 0.752974, 0.298885, 0.313368, 0.492235, 0.104153, 0.477333, 0.724846, 0.906522, 0.638407, 0.440755, 0.100478, 0.0178898, 0.206991, 0.873784, 0.205203, 0.666311, 0.15004, 0.048298, 0.946144, 0.570408, 0.723046, 0.609422, 0.0240716, 0.300974, 0.845236, 0.114392, 0.761882, 0.493788, 0.212497, 0.371549, 0.621249, 0.91809, 0.900102, 0.0347952, 0.637603, 0.867195, 0.687527, 0.964157, 0.0651572, 0.805089, 0.172996, 0.912788, 0.98142, 0.0945983, 0.669906, 0.364871, 0.793844, 0.14768, 0.98994, 0.901586, 0.150541, 0.738205, 0.242655, 0.85394, 0.83575, 0.837436, 0.733259, 0.856206, 0.476316, 0.5156, 0.347155, 0.0473844, 0.844045, 0.640219, 0.856823, 0.113996, 0.0793985, 0.75652, 0.663235, 0.12705, 0.275418, 0.493474, 0.897217, 0.138619, 0.186188, 0.705657},
{0.177407, 0.812092, 0.981148, 0.646538, 0.755733, 0.429008, 0.759242, 0.71321, 0.33263, 0.110015, 0.516326, 0.827277, 0.216673, 0.320851, 0.996993, 0.869639, 0.263047, 0.789477, 0.248399, 0.798039, 0.431287, 0.891545, 0.0980912, 0.631588, 0.142602, 0.293224, 0.628493, 0.171156, 0.919343, 0.618846, 0.109294, 0.319982, 0.596877, 0.977919, 0.940747, 0.209199, 0.846621, 0.579952, 0.201439, 0.638121, 0.774306, 0.238003, 0.272228, 0.211742, 0.459635, 0.334978, 0.279434, 0.201599, 0.119818, 0.714451, 0.0721812, 0.869772, 0.0385396, 0.800698, 0.867886, 0.698465, 0.928858, 0.614958, 0.430423, 0.145457, 0.45042, 0.777334, 0.0741465, 0.318648, 0.919956, 0.333398, 0.157972, 0.196969, 0.40004, 0.701239, 0.0318293, 0.835613, 0.877004, 0.866736, 0.0761429, 0.158031, 0.131047, 0.441835, 0.751403, 0.41087, 0.862258, 0.352885, 0.314496, 0.332556, 0.937959, 0.544271, 0.528535, 0.206156, 0.416304, 0.00398706, 0.214841, 0.430205, 0.139178, 0.268122, 0.0949394, 0.276508, 0.777042, 0.675608, 0.454858, 0.60301},
{0.524114, 0.413079, 0.234627, 0.21251, 0.811112, 0.0458466, 0.692913, 0.990368, 0.880292, 0.356479, 0.0810684, 0.835408, 0.0424299, 0.372187, 0.572532, 0.14873, 0.347062, 0.486502, 0.500348, 0.686902, 0.324814, 0.352624, 0.833898, 0.616719, 0.297246, 0.818735, 0.79186, 0.000772781, 0.689054, 0.57284, 0.633311, 0.803029, 0.703474, 0.0521466, 0.162748, 0.4749, 0.59921, 0.00872536, 0.904567, 0.10178, 0.436398, 0.931114, 0.173171, 0.11958, 0.31604, 0.868741, 0.975636, 0.705906, 0.69626, 0.714484, 0.0323075, 0.852477, 0.41335, 0.949561, 0.490487, 0.602998, 0.0692285, 0.847578, 0.99952, 0.207183, 0.544514, 0.000190633, 0.743911, 0.337429, 0.25783, 0.105152, 0.953422, 0.0479641, 0.45685, 0.903781, 0.491974, 0.981939, 0.182152, 0.788039, 0.480377, 0.613985, 0.105702, 0.0476497, 0.587608, 0.827152, 0.444321, 0.755029, 0.746028, 0.903278, 0.307913, 0.0697801, 0.474498, 0.0818901, 0.280305, 0.541937, 0.598063, 0.139942, 0.801457, 0.889618, 0.0654491, 0.0972142, 0.0301848, 0.808167, 0.451283, 0.138284},
{0.681176, 0.931592, 0.450735, 0.622015, 0.805511, 0.0893944, 0.0907377, 0.546757, 0.297528, 0.244922, 0.99858, 0.0933258, 0.126598, 0.695514, 0.996987, 0.139878, 0.768698, 0.416555, 0.579841, 0.367939, 0.195824, 0.177825, 0.845878, 0.88763, 0.195562, 0.537971, 0.365734, 0.647543, 0.684933, 0.263058, 0.454535, 0.867841, 0.994359, 0.105923, 0.669819, 0.781613, 0.72692, 0.944541, 0.107684, 0.470895, 0.486364, 0.0568363, 0.64279, 0.2473, 0.387354, 0.442125, 0.141915, 0.586363, 0.0749264, 0.361974, 0.577076, 0.593125, 0.310205, 0.426579, 0.477035, 0.651366, 0.506552, 0.909991, 0.809885, 0.0883023, 0.0280615, 0.0748322, 0.578829, 0.793427, 0.995088, 0.277597, 0.737724, 0.859107, 0.996012, 0.185908, 0.369272, 0.980965, 0.0841967, 0.757709, 0.572118, 0.844979, 0.740933, 0.670026, 0.0431745, 0.0929197, 0.999165, 0.894635, 0.830764, 0.826647, 0.811556, 0.836801, 0.9739, 0.038876, 0.500543, 0.41298, 0.0404874, 0.776813, 0.47269, 0.942469, 0.883525, 0.578736, 0.0435051, 0.888937, 0.407525, 0.223021},
{0.965401, 0.00960584, 0.891286, 0.392967, 0.698653, 0.969418, 0.278313, 0.52185, 0.0491075, 0.552263, 0.565625, 0.441849, 0.804641, 0.571135, 0.742397, 0.189365, 0.582423, 0.706143, 0.414663, 0.0911302, 0.630772, 0.60424, 0.0723912, 0.946724, 0.735079, 0.27221, 0.744158, 0.306884, 0.661733, 0.69539, 0.227773, 0.436622, 0.642733, 0.00448849, 0.648384, 0.426509, 0.110244, 0.836645, 0.81376, 0.718413, 0.27931, 0.254835, 0.703788, 0.868302, 0.389991, 0.0384071, 0.703191, 0.843126, 0.872992, 0.955576, 0.314886, 0.463364, 0.10066, 0.39268, 0.205764, 0.332057, 0.0239955, 0.483836, 0.383552, 0.0635652, 0.640832, 0.0487552, 0.374563, 0.647937, 0.071895, 0.393937, 0.867724, 0.138755, 0.616945, 0.641291, 0.6105, 0.798656, 0.895382, 0.751283, 0.597453, 0.541196, 0.0863186, 0.802235, 0.978308, 0.630054, 0.598731, 0.601183, 0.0377981, 0.0116968, 0.123869, 0.620357, 0.743599, 0.76285, 0.58474, 0.831574, 0.896257, 0.505737, 0.27683, 0.296311, 0.788256, 0.163656, 0.769861, 0.513221, 0.658065, 0.998173},
};

static const std::vector<float> costs = {333.175, 24.2486, 248.349, 882.567, 724.293, 138.738, 914.107, 199.037, 566.569, 469.532, 209.02, 992.068, 567.916, 597.41, 638.05, 538.724, 587.845, 759.07, 983.281, 976.703, 296.963, 888.375, 761.867, 645.365, 179.991, 511.579, 856.837, 98.0127, 480.602, 868.653, 126.548, 215.756, 106.503, 940.212, 237.595, 327.249, 417.635, 870.193, 908.214, 724.866, 9.09885, 135.429, 883.361, 883.038, 320.549, 346.323, 102.747, 24.3592, 42.5993, 98.3299, 973.356, 593.89, 165.594, 58.2378, 623.074, 204.492, 752.506, 975.085, 673.63, 890.348, 640.868, 340.356, 431.57, 192.693, 205.287, 141.162, 525.23, 475.33, 713.365, 319.109, 516.7, 548.082, 254.525, 600.657, 265.684, 965.856, 769.392, 376.882, 717.878, 135.829, 450.691, 867.859, 136.511, 117.827, 168.011, 301.045, 843.369, 167.047, 468.039, 778.466, 262.32, 235.84, 425.884, 32.9601, 521.057, 713.082, 251.131, 145.15, 141.1, 465.133};

static const std::vector<float> min_impressions = {0.588369, 0.658837, 0.160956, 0.953647, 0.495976, 0.112636, 0.282107, 0.0260067, 0.399446, 0.207622};

//
#endif
