#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 20;

static const std::vector< std::vector<float> > restr_rep {{4.60349,1.66632,9.74992,6.83091,8.22002,2.18236,9.09071,7.65223,2.71156,9.50692,8.46067,1.06863,4.91843,1.2438,8.57079,7.97205,2.56223,3.25076,7.9698,1.43136},
{7.46248,8.49599,2.08759,5.81747,9.79985,7.41853,7.05477,2.18539,4.93835,5.9135,9.98683,2.39428,4.65068,4.70878,1.4508,9.00091,1.85122,7.83752,2.0454,3.69374},
{6.72299,2.2837,4.57199,1.32732,1.82306,5.93321,6.5586,7.4063,3.7284,1.9217,4.0864,1.88687,2.29749,6.06107,6.49681,1.71751,6.99503,4.24337,9.54978,2.50678},
{7.40134,8.65678,5.39205,7.65609,9.56697,2.89625,6.48996,6.95991,2.82752,9.76193,7.36551,2.76939,6.77993,8.62407,2.35099,5.88416,1.56456,6.52886,2.34676,2.77673},
{2.3913,9.11153,1.63816,3.89194,1.43664,9.09361,2.57257,3.80903,4.4809,5.28058,3.55454,7.12911,6.48819,3.95013,6.30812,7.65096,6.70323,1.26244,9.61034,3.45413},
{7.89727,5.87289,1.26335,5.64403,8.27784,4.05487,6.04274,2.86484,2.57086,6.83191,4.34991,8.72342,1.7114,5.94682,1.77577,8.5304,9.31131,4.9674,8.91589,1.87899},
{2.91769,5.94357,2.40043,3.31698,7.74864,3.23081,7.50144,8.63308,9.49617,2.49193,7.39014,5.44059,8.36102,4.34635,3.39075,8.41898,8.69859,8.19696,1.11051,8.30749},
{4.69468,7.81663,8.89817,5.61864,7.41175,7.86899,4.2887,9.34511,8.94308,2.98968,1.30589,3.21382,1.68605,5.39674,9.89736,6.2141,9.95663,4.29975,5.53171,4.57244},
{4.1227,9.05819,1.75187,5.97692,4.58916,2.48959,8.59382,1.95636,4.8274,9.38521,2.05389,5.69636,2.63725,7.50492,1.38116,3.82789,3.75949,4.99213,9.29786,5.81771},
{6.00343,1.65814,3.30676,8.82211,1.51146,8.26418,6.59927,5.6634,8.50386,6.27461,4.58065,7.47638,2.00244,8.78576,2.2248,2.14192,5.50627,6.57723,1.63174,3.56982},
{2.90922,5.59411,6.14602,5.82778,9.52717,1.34749,3.24778,1.04666,1.94665,4.42787,5.31775,6.15459,5.98273,5.38614,4.43937,6.31498,2.88713,8.64742,7.74801,2.04111},
{2.67144,1.62423,1.14995,8.01069,6.41292,1.73713,6.2326,5.79201,8.74742,4.35849,2.40466,2.35612,2.72525,6.79324,6.1364,9.55403,3.41515,4.52452,5.45522,9.36755},
{8.66925,1.96793,4.91229,2.7047,2.29079,1.54172,8.21605,2.09533,1.28489,6.30085,9.52606,4.36922,7.13887,7.71075,8.11815,4.33292,4.72942,7.47681,6.94531,6.64567},
{6.11207,2.02775,7.13346,2.92946,9.66548,9.03467,2.90265,6.26043,5.31423,6.75591,3.14241,2.42524,1.72148,5.45225,2.15171,9.88103,4.86358,7.75469,9.69652,6.6387},
{4.24007,5.23859,3.62663,3.89083,7.22176,3.73527,9.25567,2.99989,8.70965,2.24322,2.93855,8.81683,8.29175,1.42192,5.29467,3.02486,1.46881,8.51371,5.32449,7.94563},
{8.12655,8.4187,8.48378,4.98699,8.72302,3.52682,6.12198,6.85438,6.96065,5.75917,8.68329,8.65683,2.46634,3.24268,7.89313,4.31748,2.91887,4.49037,9.9604,5.17475},
{3.47619,9.07147,5.52645,3.54774,1.61432,6.36398,2.46882,3.08136,2.35385,1.80081,3.11342,1.17402,3.28851,2.68309,9.0547,7.02851,7.7539,9.1877,2.31645,6.7066},
{1.49709,9.12765,2.38184,5.95991,4.55874,9.20777,4.95466,1.57417,8.38906,6.9393,8.48852,1.35565,3.85218,6.42835,7.28973,1.68386,1.94072,4.89157,6.80471,4.53794},
{5.46676,8.36799,7.15383,9.07332,8.65549,9.18016,4.55722,4.48606,5.24337,6.07118,4.81543,3.24072,4.41935,9.58026,9.82429,4.33176,4.4353,3.14817,3.97115,4.63665},
{9.98203,5.63209,7.96518,5.31673,8.98048,4.03748,9.75825,3.41575,4.58264,9.97782,2.50851,8.44462,8.26001,6.41486,8.93896,4.67504,4.06645,3.34911,4.00066,6.26151},
{2.30787,1.70747,6.36499,7.50275,3.26943,4.03258,7.78599,1.21261,5.9659,7.7583,3.58338,6.1477,8.10959,4.57981,6.63962,3.97633,6.26086,6.03568,2.53606,1.90405},
{1.63488,8.37796,4.0174,9.41544,3.28861,2.90109,9.67049,9.49122,1.29754,1.98906,7.14173,2.1614,3.31191,9.52797,5.72201,2.3519,9.79152,9.28349,9.51316,8.78301},
{1.11277,8.74393,1.75529,4.07392,8.52045,9.26951,9.29211,6.03259,6.61432,5.49115,2.63709,9.09884,2.50736,8.85303,7.61022,9.04359,5.10553,1.24079,6.03032,5.27818},
{6.75772,3.78298,6.55397,1.3495,4.25092,2.27389,3.86003,1.1035,8.04649,1.977,1.266,4.19972,8.72632,9.10264,9.20023,6.07332,1.65453,4.42989,8.00914,9.77218},
{1.42484,2.08365,4.99264,5.81077,1.08292,3.78128,4.51377,2.13244,9.41561,3.10853,4.12762,7.87478,9.96499,3.46074,6.63212,7.15693,2.02458,5.30005,4.7306,2.63331},
{4.70931,7.19795,6.74041,5.81246,6.3386,9.73174,7.60886,9.51401,3.29158,2.68665,3.28873,1.8512,5.07783,2.7204,2.18729,9.63753,1.28488,9.50429,5.04462,5.88101},
{4.53554,9.58211,8.32137,6.51012,1.85048,2.26988,5.76064,5.53248,6.71364,3.69383,8.79047,3.71568,1.15016,9.51662,9.20633,4.93038,1.69832,5.34681,8.71501,2.45618},
{2.99301,8.05922,5.56749,2.67036,4.89067,3.45129,3.64087,2.15466,3.78562,4.92526,7.58971,3.36087,3.46125,1.02643,2.10477,9.75141,2.17145,7.0536,6.38473,7.82898},
{3.1178,7.54889,8.44608,8.25513,3.9683,5.483,2.31729,4.09858,5.55397,3.81627,9.15625,9.11869,9.68093,9.49041,1.12992,9.19205,9.60122,3.90131,3.94174,2.1734},
{1.00484,4.89982,6.18429,1.89987,5.16805,3.70422,1.44986,5.20183,2.39265,5.57769,9.33518,5.46796,6.67622,3.87236,9.737,7.38982,3.97215,3.28478,5.49711,7.06673},
{3.63167,4.83584,2.58491,8.04985,2.11254,3.98064,3.5697,4.81548,1.50779,4.22211,3.05542,7.45904,5.60606,3.36698,6.44194,9.65607,2.55761,6.55386,8.24951,4.68407},
{2.82876,1.49189,8.35647,7.35559,6.27175,1.43763,8.40857,3.90422,7.50208,7.85489,4.51411,7.47856,7.58763,5.55849,9.06508,6.75874,7.1176,3.80635,3.9625,2.67056},
{6.83926,4.77859,9.05106,2.87988,9.2421,2.51064,2.45811,9.11142,4.49071,1.05846,4.24495,1.89136,9.77698,8.83562,4.28806,8.16061,1.80499,4.53418,2.60922,9.2947},
{8.73611,1.08203,4.26609,4.60664,5.91946,6.77266,2.62269,2.25092,1.05539,3.04831,3.66432,2.90769,9.2789,1.22107,2.79542,7.40644,1.33755,5.74701,6.93276,9.95835},
{3.57295,5.54125,7.64647,8.10355,4.8295,9.59093,2.75762,2.36501,2.07086,1.54837,4.94034,8.35617,6.5055,6.2045,3.74627,3.06056,9.17922,6.51898,2.55733,4.26248},
{5.23808,9.8374,7.53204,8.11459,1.29957,2.54879,1.98139,1.83231,7.99107,1.32937,7.47196,2.2499,1.87094,8.1684,8.05311,9.72342,1.58588,6.17348,6.51211,7.83816},
{7.93404,5.88994,5.82643,4.8854,5.61722,3.72342,1.55179,4.62971,3.118,8.17897,1.21286,9.75335,3.92584,8.56785,9.68531,5.80164,1.97884,2.75637,2.14014,6.71436},
{9.21404,4.26725,2.01559,2.10501,8.74274,3.69992,7.72646,5.61559,7.22042,4.04407,2.7848,4.86298,5.65435,2.93726,2.39543,9.06602,7.75504,8.58634,2.09721,4.39888},
{4.12681,7.31787,6.36255,4.81815,1.65889,6.49462,7.89887,6.01513,3.23274,4.01993,4.76161,8.61417,3.6489,8.45873,7.4939,2.15768,7.16552,2.70883,2.97173,1.98122},
{3.30842,4.45815,4.75971,1.24576,4.52327,2.15799,2.5381,2.76184,3.08555,7.21143,3.38839,2.7518,3.09907,2.75282,9.71264,9.01883,1.45929,9.84702,8.17582,8.00228},
{2.27243,7.52907,4.9679,8.1574,4.45042,7.20709,4.78205,4.38945,4.03652,1.89688,6.76233,8.90214,6.79186,2.68847,6.00664,7.80238,3.74773,9.25875,4.99418,1.79966},
{8.94457,6.04118,8.64522,3.36213,5.43985,2.29421,1.93151,8.18516,9.23472,1.42363,8.22942,8.60858,6.54777,6.55642,1.39308,1.09755,5.49013,6.19657,9.61119,1.08326},
{6.1675,4.82124,9.2804,1.31097,8.47603,6.22138,1.96738,6.09106,5.6634,3.2502,7.8256,4.64986,2.51454,9.2824,4.62139,3.89907,9.31325,4.34021,1.09231,1.98949},
{3.83748,5.45766,7.43784,6.41067,2.89953,7.1234,5.64235,7.01981,3.15624,2.59001,5.82599,7.29015,2.58565,8.63488,6.40713,1.94536,6.41056,7.10976,3.19253,2.78541},
{2.75958,8.028,9.48159,5.75584,9.33504,4.79624,3.70833,6.51909,2.58936,5.12815,7.55328,3.40434,4.45174,2.42725,1.30139,1.35372,4.41913,5.14017,7.58318,6.21872},
{6.13425,3.26468,2.21829,6.92809,8.05328,1.4936,3.10887,1.93973,7.32554,8.65404,5.01707,1.01578,4.55566,1.72132,3.60255,5.84995,4.15313,6.85042,7.94032,9.00892},
{3.77646,4.46672,8.19815,9.1034,9.73944,5.16941,7.75519,8.96082,3.63616,1.51979,5.20116,6.39628,3.83,5.64743,4.49477,2.16039,9.70406,6.89895,9.00893,6.38178},
{2.92481,7.41025,1.30737,3.72847,7.38387,1.54643,1.4477,1.22743,3.60102,7.40019,2.63297,3.73311,5.72425,1.10033,2.10787,9.90722,8.27786,5.67842,9.45427,7.7536},
{4.54069,6.34915,1.28105,4.60816,1.38617,2.4648,7.84393,5.98226,7.656,3.0119,9.96545,9.77886,7.95675,1.69057,2.27166,1.00549,7.93005,8.11566,6.88354,4.08699},
{6.22242,6.33101,1.2861,4.79303,1.28433,3.34634,4.16896,7.16053,8.92805,9.72156,7.00041,1.31461,5.5701,8.17432,7.76042,2.73799,3.52614,6.72901,8.81224,3.5079}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {661.209,744.989,348.411,827.274,676.262,295.938,725.475,950.006,459.112,663.029,497.431,775.261,913.613,836.157,706.98,818.791,723.756,800.649,374.08,74.6105,862.794,917.015,529.179,678.697,751.514,908.974,154.33,290.752,744.731,492.921,83.6234,956.97,166.925,883.292,704.478,765.113,991.507,318.36,893.832,787.784,351.02,271.439,334.385,921.861,404.231,522.396,118.168,739.203,397.42,969.181};


static const std::vector<float> min_impressions = {46.6534,25.3144,48.8408,47.1548,27.6558,24.3679,32.2725,38.3616,46.7762,29.4708,25.392,22.2433,35.0356,47.8691,46.6143,37.3757,39.0478,45.393,26.2262,26.0215};


#endif
