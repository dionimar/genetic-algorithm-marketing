#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(events[56], events[13]),events[97]),events[52]),events[69]),events[46]),cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(events[27], events[66]),events[92]),events[21]),events[87]),events[4]),cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(events[80], events[59]),events[95]),events[9]),events[99]),events[15]),cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[38], events[11]),events[98]),events[31]),events[45]),events[2]),cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(events[22], events[63]),events[55]),events[44]),events[98]),events[41])};


static const std::vector< std::vector<float> > prob = {{0.865918, 0.903842, 0.283827, 0.629037, 0.603394, 0.865825, 0.0113851, 0.0545239, 0.847095, 0.772156, 0.639264, 0.0635553, 0.30455, 0.511343, 0.794653, 0.814919, 0.268824, 0.121571, 0.736865, 0.433431, 0.798536, 0.567669, 0.966019, 0.648089, 0.244085, 0.891437, 0.133275, 0.329964, 0.600867, 0.419828, 0.0369044, 0.612502, 0.573127, 0.529015, 0.778871, 0.454097, 0.254968, 0.274276, 0.627089, 0.176186, 0.0893131, 0.461249, 0.605068, 0.586857, 0.378297, 0.439025, 0.711267, 0.550786, 0.42107, 0.416561, 0.874347, 0.212781, 0.771069, 0.762277, 0.800484, 0.50589, 0.412056, 0.47898, 0.356447, 0.711408, 0.885166, 0.927846, 0.569703, 0.597138, 0.233072, 0.00959076, 0.335685, 0.497231, 0.584207, 0.966167, 0.557566, 0.740073, 0.220944, 0.321184, 0.02336, 0.0264832, 0.817255, 0.256084, 0.0653982, 0.755041, 0.691859, 0.455101, 0.27438, 0.104726, 0.764697, 0.830989, 0.851706, 0.143497, 0.392739, 0.970609, 0.643816, 0.942549, 0.580895, 0.00700428, 0.957416, 0.0983591, 0.598944, 0.915107, 0.190146, 0.518189},
{0.318197, 0.0473472, 0.305487, 0.873322, 0.726896, 0.637576, 0.368312, 0.465843, 0.41997, 0.408468, 0.00606685, 0.227032, 0.127926, 0.529134, 0.748382, 0.0957157, 0.583376, 0.413088, 0.0539846, 0.0892236, 0.498804, 0.390944, 0.74783, 0.162807, 0.691792, 0.228979, 0.981144, 0.851676, 0.0679643, 0.845001, 0.0594131, 0.41686, 0.731158, 0.111446, 0.918159, 0.527953, 0.273405, 0.679452, 0.70279, 0.679011, 0.174862, 0.160734, 0.0789228, 0.631286, 0.222808, 0.74381, 0.915234, 0.307393, 0.241275, 0.39128, 0.809356, 0.961223, 0.852517, 0.201243, 0.778813, 0.720419, 0.615565, 0.547748, 0.723802, 0.0891953, 0.410343, 0.50999, 0.670386, 0.262931, 0.732002, 0.0964253, 0.0916998, 0.746698, 0.588337, 0.853141, 0.625829, 0.778084, 0.981787, 0.636608, 0.41835, 0.962147, 0.786694, 0.846828, 0.289762, 0.483717, 0.39076, 0.856411, 0.90246, 0.459534, 0.944527, 0.378715, 0.392696, 0.953126, 0.715645, 0.121901, 0.216087, 0.247897, 0.744537, 0.386308, 0.832449, 0.769898, 0.327665, 0.754494, 0.97497, 0.352583},
{0.586225, 0.956799, 0.621641, 0.619722, 0.553761, 0.413541, 0.979539, 0.888932, 0.659302, 0.707843, 0.275808, 0.378418, 0.483098, 0.134715, 0.770013, 0.927726, 0.0294452, 0.577707, 0.8067, 0.490758, 0.483377, 0.643324, 0.720518, 0.351488, 0.540679, 0.230833, 0.911747, 0.4552, 0.707559, 0.341281, 0.442559, 0.402661, 0.731849, 0.303152, 0.531184, 0.432448, 0.0231488, 0.0623409, 0.539907, 0.0792828, 0.161351, 0.109794, 0.899402, 0.663804, 0.971093, 0.029875, 0.64276, 0.568997, 0.628318, 0.676192, 0.971488, 0.166557, 0.30561, 0.162151, 0.156207, 0.636451, 0.0501584, 0.0789231, 0.409639, 0.911898, 0.804516, 0.911235, 0.357665, 0.66436, 0.990351, 0.861552, 0.385823, 0.552298, 0.418791, 0.842887, 0.960285, 0.756785, 0.512749, 0.652239, 0.237642, 0.727258, 0.963249, 0.776084, 0.604006, 0.384876, 0.994923, 0.552833, 0.825485, 0.427008, 0.677791, 0.315341, 0.138335, 0.612256, 0.66965, 0.734492, 0.405178, 0.849834, 0.34366, 0.0540218, 0.885662, 0.0203659, 0.386773, 0.898136, 0.619097, 0.253233},
{0.0827201, 0.75568, 0.740564, 0.20059, 0.23422, 0.627204, 0.822507, 0.681175, 0.668992, 0.33881, 0.6966, 0.942475, 0.920966, 0.897351, 0.380567, 0.332938, 0.778906, 0.697323, 0.577598, 0.011378, 0.178597, 0.660484, 0.813243, 0.00427887, 0.337308, 0.0899019, 0.0992416, 0.796748, 0.175768, 0.488385, 0.45765, 0.829637, 0.726028, 0.227193, 0.877985, 0.608022, 0.89053, 0.621179, 0.744608, 0.00752426, 0.279219, 0.851253, 0.331509, 0.478732, 0.976652, 0.773556, 0.813649, 0.673044, 0.372679, 0.445517, 0.858813, 0.901949, 0.642944, 0.98409, 0.0775186, 0.691965, 0.786222, 0.120265, 0.0361723, 0.150245, 0.73879, 0.651733, 0.577115, 0.695429, 0.438382, 0.524262, 0.285076, 0.21468, 0.709423, 0.295298, 0.43753, 0.113542, 0.836278, 0.746583, 0.943102, 0.0452011, 0.793072, 0.622334, 0.537209, 0.378843, 0.112484, 0.612245, 0.898254, 0.780307, 0.138788, 0.562939, 0.156176, 0.771344, 0.718815, 0.83427, 0.0201166, 0.84852, 0.401914, 0.580087, 0.0241265, 0.281022, 0.69554, 0.487923, 0.136105, 0.782346},
{0.831996, 0.697584, 0.971366, 0.622697, 0.514281, 0.566448, 0.663032, 0.681332, 0.0395056, 0.547373, 0.0758616, 0.479526, 0.559013, 0.451355, 0.146225, 0.791248, 0.7698, 0.94157, 0.587794, 0.0182782, 0.717174, 0.954189, 0.735398, 0.540662, 0.188926, 0.414287, 0.32845, 0.910655, 0.69392, 0.944925, 0.886958, 0.514873, 0.981987, 0.526123, 0.280305, 0.61888, 0.11576, 0.903114, 0.944407, 0.840285, 0.980802, 0.639826, 0.795273, 0.693579, 0.414323, 0.238571, 0.961222, 0.73997, 0.8097, 0.95892, 0.478791, 0.519756, 0.986282, 0.237759, 0.705551, 0.166632, 0.204451, 0.492011, 0.0616944, 0.116717, 0.194916, 0.864717, 0.16147, 0.544219, 0.0511741, 0.342399, 0.120131, 0.474046, 0.757383, 0.130409, 0.459722, 0.674004, 0.858337, 0.903731, 0.642012, 0.082145, 0.45516, 0.814543, 0.519662, 0.392708, 0.199297, 0.978026, 0.235312, 0.368035, 0.174601, 0.212835, 0.45873, 0.586684, 0.236113, 0.291449, 0.278233, 0.820307, 0.517238, 0.0321801, 0.4512, 0.914139, 0.63523, 0.137893, 0.0134744, 0.229279},
};

static const std::vector<float> costs = {588.006, 394.394, 288.406, 522.284, 711.945, 853.936, 646.83, 519.394, 39.8632, 217.879, 215.493, 588.137, 250.863, 275.309, 209.216, 554.911, 441.861, 46.8332, 579.887, 208.228, 348.391, 677.899, 194.159, 719.178, 168.977, 871.099, 444.21, 949.816, 181.748, 653.895, 806.62, 90.6007, 273.071, 599.372, 231.429, 908.669, 176.15, 155.049, 681.1, 805.043, 758.37, 517.731, 822.283, 747.199, 486.297, 983.31, 3.21518, 535.519, 269.862, 16.3606, 773.764, 836.641, 228.158, 275.166, 961.005, 324.208, 270.143, 317.042, 1.27794, 450.562, 421.726, 390.117, 829.007, 90.325, 453.695, 149.931, 18.1013, 247.659, 531.186, 434.601, 640.113, 801.245, 654.229, 553.225, 513.578, 866.614, 437.652, 877.531, 392.266, 684.346, 650.163, 424.437, 938.144, 766.872, 450.828, 6.98365, 873.322, 542.237, 13.4713, 471.185, 769.985, 839.606, 264.741, 104.546, 572.302, 159.284, 459.711, 634.517, 110.837, 956.125};

static const std::vector<float> min_impressions = {0.262975, 0.745406, 0.0454084, 0.117151, 0.516727};

//
#endif
