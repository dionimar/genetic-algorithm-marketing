#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_indep(cons_indep(cons_excl(cons_indep(events[3], events[38]),events[8]),events[31]),events[20]),events[0]),cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[9], events[2]),events[39]),events[46]),events[23]),events[40]),cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(events[0], events[9]),events[33]),events[18]),events[13]),events[3]),cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(events[28], events[32]),events[23]),events[40]),events[22]),events[45]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[35], events[24]),events[9]),events[7]),events[6]),events[17]),cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(events[13], events[0]),events[12]),events[31]),events[4]),events[43]),cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(events[4], events[16]),events[6]),events[36]),events[25]),events[43]),cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(events[39], events[36]),events[9]),events[12]),events[22]),events[27]),cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(events[3], events[0]),events[32]),events[27]),events[22]),events[24]),cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[24], events[9]),events[27]),events[6]),events[29]),events[30]),cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(events[42], events[17]),events[43]),events[39]),events[14]),events[27]),cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(events[11], events[2]),events[22]),events[47]),events[43]),events[49]),cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(events[30], events[22]),events[39]),events[16]),events[47]),events[31]),cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(events[29], events[23]),events[14]),events[6]),events[18]),events[5]),cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(events[49], events[14]),events[35]),events[21]),events[6]),events[32]),cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(events[1], events[17]),events[31]),events[13]),events[19]),events[10]),cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(events[29], events[28]),events[21]),events[11]),events[40]),events[15]),cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(events[18], events[34]),events[4]),events[14]),events[43]),events[33]),cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(events[6], events[9]),events[31]),events[8]),events[23]),events[14]),cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(events[28], events[20]),events[30]),events[34]),events[43]),events[26])};


static const std::vector< std::vector<float> > prob = {{0.320144, 0.842883, 0.597209, 0.0139227, 0.376701, 0.371641, 0.114247, 0.692152, 0.00728428, 0.920495, 0.736112, 0.150927, 0.330906, 0.326682, 0.558628, 0.915592, 0.63209, 0.256079, 0.762777, 0.769702, 0.648689, 0.324623, 0.781694, 0.14967, 0.198815, 0.337213, 0.15213, 0.751027, 0.772351, 0.271696, 0.405035, 0.392466, 0.703431, 0.266049, 0.492668, 0.147494, 0.037136, 0.0753261, 0.340347, 0.464959, 0.614862, 0.900314, 0.0846639, 0.214269, 0.539958, 0.672244, 0.196958, 0.193309, 0.235536, 0.62856},
{0.126719, 0.894042, 0.14988, 0.134738, 0.445382, 0.119446, 0.290593, 0.236205, 0.818274, 0.128837, 0.0743425, 0.517066, 0.976942, 0.403598, 0.424019, 0.147209, 0.573671, 0.833043, 0.192604, 0.787557, 0.649561, 0.980586, 0.756283, 0.867752, 0.309676, 0.732915, 0.846458, 0.415045, 0.00974234, 0.295775, 0.649378, 0.00203151, 0.169787, 0.627193, 0.455202, 0.729218, 0.305467, 0.50374, 0.413625, 0.127395, 0.821387, 0.797747, 0.132282, 0.165093, 0.0366588, 0.465381, 0.248728, 0.750227, 0.326589, 0.784769},
{0.829755, 0.51782, 0.956006, 0.0304635, 0.143596, 0.096725, 0.38563, 0.523778, 0.696837, 0.626926, 0.777835, 0.575587, 0.0754581, 0.65807, 0.875985, 0.973479, 0.257427, 0.621537, 0.521653, 0.100553, 0.451298, 0.589969, 0.2417, 0.949898, 0.679985, 0.649515, 0.751482, 0.448632, 0.453249, 0.469168, 0.0976197, 0.883035, 0.976886, 0.986063, 0.215184, 0.0996563, 0.261541, 0.337451, 0.997521, 0.788676, 0.85644, 0.748871, 0.53706, 0.68196, 0.937399, 0.250847, 0.0621269, 0.534311, 0.926333, 0.656965},
{0.854514, 0.621639, 0.54503, 0.090613, 0.0915647, 0.911122, 0.330624, 0.243161, 0.535092, 0.182053, 0.213896, 0.0176835, 0.165257, 0.468496, 0.804562, 0.306818, 0.170834, 0.466721, 0.16994, 0.690345, 0.908262, 0.526911, 0.447497, 0.386753, 0.196628, 0.625973, 0.274198, 0.727802, 0.805025, 0.145402, 0.421178, 0.436555, 0.353702, 0.959607, 0.29416, 0.0675261, 0.00483715, 0.614912, 0.990537, 0.243962, 0.603901, 0.900664, 0.276748, 0.630888, 0.259783, 0.302745, 0.752751, 0.109677, 0.872409, 0.799277},
{0.324049, 0.237224, 0.732188, 0.374509, 0.684579, 0.918984, 0.469548, 0.0345924, 0.246, 0.177882, 0.294353, 0.898343, 0.622165, 0.484633, 0.33847, 0.500265, 0.761031, 0.419039, 0.350493, 0.423322, 0.571958, 0.471688, 0.0033494, 0.996414, 0.361817, 0.570268, 0.372638, 0.0725828, 0.738047, 0.530652, 0.677221, 0.64845, 0.549526, 0.889185, 0.931832, 0.763488, 0.114721, 0.398203, 0.258868, 0.994472, 0.183813, 0.109127, 0.731176, 0.616574, 0.207634, 0.340164, 0.0261447, 0.342252, 0.0245925, 0.660201},
{0.710473, 0.00411072, 0.90826, 0.742778, 0.193982, 0.173711, 0.538276, 0.183147, 0.424234, 0.274283, 0.059683, 0.0548026, 0.966319, 0.810085, 0.539911, 0.66731, 0.379976, 0.0661554, 0.70567, 0.583615, 0.56564, 0.139782, 0.661797, 0.277938, 0.0716126, 0.548296, 0.38384, 0.893622, 0.503653, 0.650966, 0.15705, 0.58733, 0.506865, 0.0326073, 0.158818, 0.975644, 0.210937, 0.465209, 0.0436151, 0.325345, 0.43539, 0.859299, 0.196391, 0.625268, 0.727002, 0.539455, 0.760097, 0.467628, 0.810294, 0.583835},
{0.354676, 0.37886, 0.0802854, 0.798757, 0.508229, 0.129905, 0.593752, 0.254429, 0.878258, 0.86428, 0.559563, 0.0156416, 0.349097, 0.459042, 0.0986206, 0.551778, 0.326219, 0.308449, 0.463334, 0.0400201, 0.53043, 0.715239, 0.737787, 0.870682, 0.133208, 0.682416, 0.297278, 0.904823, 0.27171, 0.957942, 0.455696, 0.893781, 0.440186, 0.310546, 0.375872, 0.929447, 0.884619, 0.32956, 0.815855, 0.0583975, 0.700816, 0.998736, 0.811841, 0.588095, 0.133852, 0.0923981, 0.98123, 0.864943, 0.680126, 0.146303},
{0.0707365, 0.714047, 0.728941, 0.0701657, 0.127835, 0.867113, 0.988864, 0.371103, 0.606269, 0.534049, 0.61364, 0.871663, 0.999987, 0.47397, 0.379683, 0.776781, 0.290194, 0.454059, 0.847323, 0.858112, 0.439593, 0.832419, 0.126104, 0.526232, 0.720512, 0.346168, 0.99638, 0.806213, 0.998084, 0.304866, 0.936171, 0.46194, 0.536859, 0.459846, 0.890795, 0.954988, 0.612615, 0.480227, 0.511524, 0.19839, 0.978961, 0.0421534, 0.0434413, 0.468666, 0.277422, 0.231158, 0.751958, 0.642972, 0.836945, 0.0245461},
{0.616313, 0.197954, 0.975772, 0.0424364, 0.642369, 0.750127, 0.425962, 0.360168, 0.447247, 0.583214, 0.275302, 0.031467, 0.319164, 0.839071, 0.606351, 0.507518, 0.0955898, 0.559275, 0.785691, 0.085725, 0.846027, 0.290287, 0.208446, 0.011026, 0.969635, 0.226187, 0.337888, 0.428962, 0.911619, 0.419837, 0.891877, 0.0870729, 0.147539, 0.477336, 0.35204, 0.735566, 0.887099, 0.434754, 0.881851, 0.296928, 0.179601, 0.121271, 0.629467, 0.378458, 0.450993, 0.195047, 0.34585, 0.981345, 0.50467, 0.146229},
{0.88104, 0.172692, 0.52178, 0.31785, 0.598894, 0.633792, 0.776855, 0.158696, 0.221927, 0.359497, 0.282759, 0.0199836, 0.554974, 0.411915, 0.582555, 0.0611675, 0.077679, 0.153304, 0.179973, 0.230044, 0.377511, 0.319302, 0.899381, 0.511697, 0.993464, 0.709552, 0.81389, 0.123341, 0.248835, 0.0231347, 0.632748, 0.157504, 0.553254, 0.222379, 0.471114, 0.0140999, 0.66268, 0.54658, 0.756304, 0.267983, 0.771408, 0.246332, 0.621017, 0.103192, 0.0805559, 0.231033, 0.569751, 0.561536, 0.890975, 0.514283},
{0.0624518, 0.0270906, 0.911641, 0.103017, 0.616366, 0.933354, 0.203113, 0.228732, 0.445946, 0.994566, 0.398713, 0.415974, 0.872309, 0.249094, 0.290344, 0.283425, 0.511189, 0.984362, 0.197962, 0.622259, 0.508865, 0.791185, 0.392906, 0.610847, 0.796261, 0.223646, 0.598341, 0.872077, 0.0685524, 0.679343, 0.0848428, 0.574117, 0.0274812, 0.121534, 0.878786, 0.774518, 0.450613, 0.120931, 0.616379, 0.4697, 0.165866, 0.650513, 0.362485, 0.801344, 0.646399, 0.0431919, 0.16326, 0.765675, 0.902335, 0.0369133},
{0.418209, 0.320749, 0.443895, 0.362084, 0.953002, 0.304701, 0.171951, 0.651653, 0.117484, 0.644101, 0.0907654, 0.233536, 0.769363, 0.310647, 0.803416, 0.396293, 0.309836, 0.51435, 0.339455, 0.796178, 0.542506, 0.423062, 0.275552, 0.235943, 0.375312, 0.560283, 0.371105, 0.132078, 0.54875, 0.446441, 0.8249, 0.739762, 0.0483048, 0.200161, 0.230503, 0.176791, 0.484428, 0.268499, 0.364143, 0.942229, 0.594747, 0.240432, 0.0612919, 0.647085, 0.0897096, 0.203263, 0.928829, 0.25, 0.224963, 0.868507},
{0.605927, 0.550016, 0.510138, 0.210246, 0.914447, 0.43007, 0.512697, 0.800935, 0.302218, 0.23962, 0.203645, 0.632788, 0.103995, 0.500895, 0.110256, 0.793153, 0.405563, 0.942656, 0.397784, 0.723026, 0.892242, 0.262605, 0.780647, 0.890781, 0.736405, 0.908115, 0.738073, 0.341527, 0.0878927, 0.398846, 0.054897, 0.984495, 0.42016, 0.380099, 0.847849, 0.891086, 0.333524, 0.868851, 0.448761, 0.372047, 0.479434, 0.24554, 0.786594, 0.813874, 0.539778, 0.0798443, 0.3534, 0.218756, 0.944045, 0.743137},
{0.884764, 0.365221, 0.904571, 0.364117, 0.35515, 0.63759, 0.270078, 0.583152, 0.957406, 0.0626765, 0.597506, 0.636793, 0.30708, 0.532864, 0.13624, 0.14223, 0.549127, 0.992555, 0.0462222, 0.458864, 0.246672, 0.0280308, 0.2901, 0.369414, 0.468906, 0.442616, 0.752432, 0.571234, 0.390831, 0.57208, 0.827304, 0.352356, 0.000837268, 0.827144, 0.322095, 0.180841, 0.803003, 0.214048, 0.813081, 0.367023, 0.848396, 0.593701, 0.677895, 0.95405, 0.881579, 0.0375713, 0.117393, 0.567948, 0.621016, 0.057276},
{0.193362, 0.302998, 0.291784, 0.066594, 0.229343, 0.812844, 0.955973, 0.379928, 0.222274, 0.262614, 0.616351, 0.65617, 0.211013, 0.875938, 0.147229, 0.943988, 0.310957, 0.899849, 0.37647, 0.155154, 0.152338, 0.0756282, 0.74219, 0.6592, 0.885504, 0.193977, 0.0246494, 0.608574, 0.398958, 0.0408687, 0.368001, 0.83944, 0.0160962, 0.189845, 0.52864, 0.251153, 0.737531, 0.411067, 0.531016, 0.121748, 0.383194, 0.588913, 0.870316, 0.341518, 0.899052, 0.391406, 0.978887, 0.254296, 0.543734, 0.90314},
{0.717446, 0.160304, 0.612218, 0.25855, 0.629137, 0.711258, 0.490004, 0.231857, 0.39247, 0.58454, 0.872871, 0.954203, 0.283066, 0.359017, 0.944316, 0.419174, 0.968233, 0.451094, 0.0941031, 0.902615, 0.333275, 0.0698704, 0.491562, 0.247715, 0.702167, 0.709247, 0.0650434, 0.901802, 0.414481, 0.0334637, 0.638501, 0.47861, 0.261374, 0.147675, 0.374644, 0.102542, 0.274355, 0.361467, 0.503829, 0.641739, 0.349607, 0.0138754, 0.54342, 0.494249, 0.874008, 0.458928, 0.190246, 0.146612, 0.519726, 0.0375959},
{0.344501, 0.279121, 0.703212, 0.64896, 0.170545, 0.790831, 0.63413, 0.683082, 0.748178, 0.672826, 0.882212, 0.611625, 0.897996, 0.354202, 0.166358, 0.90002, 0.778489, 0.0173562, 0.831531, 0.0418413, 0.932412, 0.116249, 0.875552, 0.320622, 0.777621, 0.865901, 0.377141, 0.450635, 0.358797, 0.663917, 0.461802, 0.67746, 0.0997467, 0.194887, 0.719153, 0.999387, 0.520763, 0.0719832, 0.289699, 0.0360925, 0.148046, 0.880519, 0.487707, 0.0883526, 0.0827318, 0.462709, 0.782808, 0.448269, 0.975588, 0.94084},
{0.0512379, 0.922229, 0.218429, 0.44675, 0.601709, 0.161492, 0.846066, 0.6244, 0.403714, 0.357991, 0.657413, 0.336764, 0.337576, 0.664274, 0.459341, 0.48849, 0.580084, 0.0131731, 0.0807893, 0.0678826, 0.138997, 0.866251, 0.800278, 0.595406, 0.51198, 0.570122, 0.263125, 0.0394427, 0.630754, 0.181848, 0.901705, 0.82787, 0.397777, 0.679024, 0.225085, 0.432478, 0.0467214, 0.964863, 0.0097238, 0.186597, 0.195675, 0.665751, 0.499452, 0.667353, 0.784773, 0.582404, 0.335385, 0.837336, 0.111256, 0.550136},
{0.173507, 0.815262, 0.191696, 0.476466, 0.00284356, 0.802198, 0.0485729, 0.35278, 0.359512, 0.99022, 0.581063, 0.964812, 0.158222, 0.918963, 0.643257, 0.0657929, 0.0750092, 0.420653, 0.822128, 0.0720841, 0.636453, 0.886295, 0.00802235, 0.0944288, 0.537265, 0.852514, 0.391379, 0.203826, 0.980204, 0.780294, 0.0699325, 0.408342, 0.651144, 0.0234207, 0.530842, 0.288669, 0.0679949, 0.252843, 0.390426, 0.211112, 0.481965, 0.413567, 0.912431, 0.452789, 0.352388, 0.68264, 0.814823, 0.855727, 0.695478, 0.0504037},
{0.36608, 0.237406, 0.510692, 0.816171, 0.120573, 0.926861, 0.35622, 0.80723, 0.743871, 0.995396, 0.910314, 0.774315, 0.314627, 0.590937, 0.918595, 0.450507, 0.227186, 0.784585, 0.819027, 0.189148, 0.0865184, 0.928283, 0.978848, 0.670822, 0.999474, 0.00856399, 0.621173, 0.0774346, 0.270286, 0.608449, 0.165069, 0.601858, 0.321047, 0.533581, 0.0521665, 0.458243, 0.150716, 0.599267, 0.677513, 0.289441, 0.851328, 0.848754, 0.585301, 0.606709, 0.78473, 0.78666, 0.407782, 0.662539, 0.586017, 0.925423},
};

static const std::vector<float> costs = {567.159, 437.778, 752.706, 817.792, 702.811, 627.946, 998.008, 193.629, 550.434, 925.94, 305.575, 696.507, 18.4799, 747.232, 211.46, 383.155, 638.941, 992.113, 186.71, 535.772, 288.619, 586.97, 705.431, 702.559, 608.566, 757.737, 784.448, 365.167, 985.89, 408.792, 709.891, 336.508, 651.663, 313.782, 887.01, 686.379, 523.196, 609.589, 164.159, 56.0416, 623.218, 104.031, 407.103, 986.615, 929.487, 265.052, 403.049, 7.97187, 239.728, 142.296};

static const std::vector<float> min_impressions = {0.180469, 0.61867, 0.666565, 0.274702, 0.175197, 0.218115, 0.0330797, 0.658877, 0.569968, 0.261978, 0.246263, 0.84652, 0.417945, 0.343001, 0.251967, 0.225661, 0.699252, 0.0927937, 0.813062, 0.285437};

//
#endif
