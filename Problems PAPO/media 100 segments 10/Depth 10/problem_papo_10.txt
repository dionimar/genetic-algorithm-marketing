#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(events[92], events[88]),events[83]),events[73]),events[45]),events[48]),events[29]),events[27]),events[20]),events[60]),events[5]),cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(events[31], events[50]),events[93]),events[79]),events[95]),events[72]),events[46]),events[17]),events[12]),events[0]),events[8]),cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(events[22], events[2]),events[21]),events[33]),events[16]),events[56]),events[48]),events[71]),events[61]),events[73]),events[98]),cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(events[90], events[11]),events[77]),events[16]),events[23]),events[67]),events[37]),events[40]),events[78]),events[41]),events[64]),cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(events[5], events[37]),events[90]),events[6]),events[40]),events[64]),events[71]),events[76]),events[42]),events[46]),events[50]),cons_indep(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(events[18], events[46]),events[87]),events[56]),events[92]),events[85]),events[62]),events[1]),events[58]),events[30]),events[24]),cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(events[18], events[80]),events[3]),events[54]),events[17]),events[34]),events[45]),events[37]),events[95]),events[82]),events[12]),cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_incl(cons_excl(events[82], events[83]),events[33]),events[9]),events[31]),events[11]),events[26]),events[20]),events[90]),events[51]),events[62]),cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(events[12], events[88]),events[75]),events[15]),events[10]),events[87]),events[94]),events[67]),events[24]),events[3]),events[5]),cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(events[80], events[41]),events[49]),events[68]),events[1]),events[66]),events[98]),events[58]),events[83]),events[10]),events[54])};


static const std::vector< std::vector<float> > prob = {{0.461849, 0.981439, 0.935216, 0.675513, 0.161659, 0.578561, 0.222352, 0.142855, 0.979788, 0.896904, 0.993844, 0.0216489, 0.715317, 0.32735, 0.260734, 0.310902, 0.666223, 0.00151712, 0.421621, 0.961099, 0.405509, 0.964819, 0.0369887, 0.837256, 0.329528, 0.844475, 0.162367, 0.654409, 0.436473, 0.668544, 0.159974, 0.116123, 0.913006, 0.827369, 0.0589652, 0.96418, 0.768729, 0.648958, 0.826371, 0.246601, 0.990363, 0.0694126, 0.381442, 0.762291, 0.772332, 0.453542, 0.669094, 0.991212, 0.771289, 0.177118, 0.962589, 0.574327, 0.762543, 0.479434, 0.11293, 0.777877, 0.900676, 0.189996, 0.336216, 0.288996, 0.729061, 0.973831, 0.288104, 0.033009, 0.580925, 0.942848, 0.318323, 0.231251, 0.309927, 0.804776, 0.76164, 0.326262, 0.595597, 0.850226, 0.453896, 0.576021, 0.737152, 0.988223, 0.43894, 0.445986, 0.46277, 0.542756, 0.401994, 0.606751, 0.507006, 0.521373, 0.582118, 0.186402, 0.529873, 0.31432, 0.0755582, 0.849233, 0.310599, 0.212507, 0.814037, 0.55557, 0.0915119, 0.215505, 0.876189, 0.0137468},
{0.462134, 0.371474, 0.717259, 0.0632418, 0.381262, 0.20506, 0.210999, 0.0947978, 0.196397, 0.759634, 0.0883553, 0.477033, 0.492942, 0.962823, 0.954013, 0.992287, 0.818711, 0.52096, 0.618156, 0.979925, 0.215439, 0.560808, 0.903877, 0.512275, 0.400911, 0.35937, 0.545976, 0.726657, 0.038967, 0.015248, 0.701377, 0.657738, 0.0341389, 0.33897, 0.564695, 0.0980912, 0.834219, 0.50129, 0.572275, 0.728533, 0.0891216, 0.801935, 0.328201, 0.179235, 0.469917, 0.0112686, 0.887442, 0.833689, 0.305593, 0.855346, 0.628702, 0.581357, 0.428229, 0.0583148, 0.83009, 0.992029, 0.694926, 0.137598, 0.203699, 0.749905, 0.274159, 0.0239999, 0.679625, 0.103474, 0.36486, 0.0304628, 0.390303, 0.912424, 0.895131, 0.147466, 0.810067, 0.352522, 0.58938, 0.590165, 0.633187, 0.84941, 0.918134, 0.647161, 0.341284, 0.718255, 0.30745, 0.432968, 0.307721, 0.528048, 0.152812, 0.0710658, 0.875165, 0.24055, 0.85632, 0.868406, 0.50188, 0.924483, 0.173377, 0.609374, 0.987311, 0.789341, 0.420459, 0.119046, 0.654613, 0.382035},
{0.176217, 0.239309, 0.899939, 0.0898857, 0.211093, 0.417671, 0.325329, 0.363169, 0.799405, 0.884384, 0.0627271, 0.0994103, 0.185589, 0.574248, 0.654677, 0.00193119, 0.125085, 0.544137, 0.376588, 0.201322, 0.153036, 0.0498424, 0.973302, 0.412826, 0.259532, 0.00520639, 0.75567, 0.233134, 0.0461429, 0.808573, 0.531798, 0.059219, 0.617545, 0.989054, 0.281807, 0.491934, 0.747917, 0.585501, 0.441959, 0.304752, 0.618907, 0.729529, 0.218879, 0.176143, 0.661083, 0.762731, 0.350042, 0.484829, 0.653322, 0.465598, 0.274129, 0.19718, 0.511981, 0.187936, 0.743999, 0.0586829, 0.754967, 0.704602, 0.486379, 0.0126609, 0.963109, 0.40964, 0.683572, 0.948407, 0.60734, 0.24898, 0.155256, 0.896869, 0.28067, 0.403047, 0.887971, 0.368722, 0.591951, 0.804129, 0.543701, 0.762764, 0.656658, 0.926837, 0.846283, 0.371602, 0.166962, 0.457163, 0.00787772, 0.195822, 0.538318, 0.856713, 0.394997, 0.216205, 0.387863, 0.135567, 0.781666, 0.714278, 0.499487, 0.287793, 0.341703, 0.200306, 0.375885, 0.198356, 0.595022, 0.842213},
{0.0228836, 0.781508, 0.101595, 0.722964, 0.31931, 0.843101, 0.90226, 0.261217, 0.261342, 0.816327, 0.589563, 0.0497266, 0.868567, 0.885871, 0.694719, 0.0270465, 0.135057, 0.299196, 0.630453, 0.519755, 0.781838, 0.786244, 0.769665, 0.588235, 0.418191, 0.265627, 0.421073, 0.543154, 0.490406, 0.46077, 0.370651, 0.712979, 0.569982, 0.840686, 0.768166, 0.854694, 0.960322, 0.0849483, 0.0159832, 0.329309, 0.891851, 0.678612, 0.140542, 0.153197, 0.474499, 0.908655, 0.0943552, 0.597977, 0.245937, 0.410726, 0.417754, 0.256677, 0.920113, 0.276952, 0.51803, 0.960704, 0.114844, 0.395166, 0.114726, 0.0966701, 0.215836, 0.441688, 0.380632, 0.922843, 0.60344, 0.520879, 0.465898, 0.882236, 0.00741938, 0.181636, 0.384638, 0.947625, 0.142807, 0.658801, 0.397742, 0.341136, 0.464439, 0.695243, 0.543901, 0.267241, 0.325933, 0.340266, 0.899151, 0.594629, 0.8516, 0.829564, 0.181804, 0.0227114, 0.0767084, 0.0324953, 0.417755, 0.788096, 0.552624, 0.0708081, 0.951792, 0.199944, 0.443516, 0.335201, 0.733862, 0.119863},
{0.901463, 0.519082, 0.488472, 0.619885, 0.126745, 0.176817, 0.894208, 0.832894, 0.854583, 0.755399, 0.481922, 0.459874, 0.118955, 0.41603, 0.706902, 0.100112, 0.0973631, 0.870918, 0.450333, 0.211426, 0.178996, 0.195216, 0.365401, 0.923969, 0.323932, 0.778756, 0.757345, 0.523366, 0.911873, 0.206816, 0.171737, 0.839112, 0.739099, 0.0749261, 0.20232, 0.864672, 0.54576, 0.674727, 0.735613, 0.7517, 0.234611, 0.367177, 0.544801, 0.017996, 0.129037, 0.523013, 0.383298, 0.84416, 0.652576, 0.087914, 0.337037, 0.888088, 0.392504, 0.615044, 0.034623, 0.114552, 0.394243, 0.391781, 0.165809, 0.617231, 0.453951, 0.811946, 0.719686, 0.686294, 0.296874, 0.1859, 0.0447872, 0.368024, 0.437248, 0.483571, 0.662856, 0.298846, 0.0611151, 0.168939, 0.272776, 0.7876, 0.837917, 0.391675, 0.386327, 0.621003, 0.154834, 0.774833, 0.610947, 0.448681, 0.743875, 0.952333, 0.424795, 0.543661, 0.880227, 0.776826, 0.0705022, 0.060105, 0.45787, 0.87979, 0.0554471, 0.0429797, 0.275119, 0.84474, 0.513363, 0.190174},
{0.528352, 0.313202, 0.147449, 0.213549, 0.227653, 0.144292, 0.774258, 0.343127, 0.922062, 0.325687, 0.483548, 0.136897, 0.57639, 0.160341, 0.866934, 0.983829, 0.127102, 0.147646, 0.447741, 0.682413, 0.521445, 0.807724, 0.720558, 0.275104, 0.582474, 0.097751, 0.652202, 0.567634, 0.798065, 0.758958, 0.00987382, 0.988336, 0.873516, 0.695584, 0.987528, 0.919316, 0.0469089, 0.953652, 0.220448, 0.355095, 0.163743, 0.114731, 0.326706, 0.276961, 0.937157, 0.195157, 0.361447, 0.952129, 0.531889, 0.055816, 0.465174, 0.0984429, 0.705307, 0.0885932, 0.693332, 0.426926, 0.822368, 0.635274, 0.416506, 0.00507904, 0.608466, 0.299937, 0.243378, 0.436406, 0.452201, 0.52295, 0.116545, 0.62645, 0.416591, 0.980391, 0.379774, 0.176081, 0.552907, 0.497324, 0.974975, 0.203054, 0.779987, 0.320683, 0.647511, 0.827497, 0.771688, 0.462521, 0.0853585, 0.423076, 0.767185, 0.985768, 0.358898, 0.557031, 0.714985, 0.472461, 0.512097, 0.602535, 0.531964, 0.423954, 0.858368, 0.871728, 0.134233, 0.769369, 0.670222, 0.236738},
{0.790394, 0.483475, 0.256527, 0.4736, 0.689138, 0.123869, 0.402847, 0.184562, 0.414886, 0.945641, 0.147798, 0.573999, 0.978502, 0.207689, 0.198885, 0.633305, 0.264822, 0.663027, 0.336324, 0.129385, 0.0694801, 0.564098, 0.146439, 0.177779, 0.788287, 0.958356, 0.936923, 0.977698, 0.830322, 0.275096, 0.108988, 0.552086, 0.242946, 0.516032, 0.193169, 0.573894, 0.669899, 0.978856, 0.588214, 0.211253, 0.214252, 0.776585, 0.124292, 0.65047, 0.697548, 0.434961, 0.47425, 0.786869, 0.425324, 0.0742738, 0.321404, 0.404638, 0.841987, 0.834349, 0.591584, 0.852062, 0.651699, 0.721605, 0.543875, 0.534608, 0.0489938, 0.773994, 0.212716, 0.945246, 0.927074, 0.769855, 0.948841, 0.665564, 0.737502, 0.0551843, 0.448825, 0.406644, 0.256244, 0.67079, 0.886342, 0.183528, 0.339295, 0.836491, 0.914575, 0.667304, 0.154748, 0.153492, 0.929684, 0.961895, 0.109608, 0.66974, 0.491331, 0.702633, 0.939925, 0.0584007, 0.911838, 0.928087, 0.828253, 0.511862, 0.0898472, 0.0116037, 0.865241, 0.20592, 0.711877, 0.881873},
{0.267056, 0.817571, 0.570037, 0.163748, 0.301045, 0.589149, 0.503057, 0.317439, 0.62465, 0.0962075, 0.764215, 0.712379, 0.513288, 0.996362, 0.925022, 0.768467, 0.90451, 0.381418, 0.138083, 0.218192, 0.0614909, 0.940247, 0.0771196, 0.192804, 0.0849295, 0.735856, 0.223899, 0.629749, 0.807206, 0.113123, 0.956782, 0.871945, 0.338815, 0.249645, 0.166284, 0.0914484, 0.0124666, 0.363157, 0.393369, 0.927037, 0.452411, 0.963659, 0.644782, 0.468582, 0.0114613, 0.58497, 0.668751, 0.0517207, 0.678744, 0.139854, 0.133152, 0.460402, 0.351675, 0.664882, 0.36159, 0.966712, 0.737159, 0.455612, 0.504707, 0.123507, 0.989752, 0.843859, 0.605111, 0.643065, 0.56797, 0.225791, 0.508866, 0.405351, 0.379398, 0.423991, 0.1713, 0.881678, 0.367233, 0.822473, 0.383583, 0.450833, 0.0867282, 0.915656, 0.763974, 0.92055, 0.0479455, 0.397604, 0.509777, 0.698414, 0.568922, 0.144221, 0.794685, 0.223379, 0.0527897, 0.231299, 0.947552, 0.533426, 0.408327, 0.594088, 0.7325, 0.876372, 0.885257, 0.570839, 0.271039, 0.449914},
{0.0921307, 0.58079, 0.305129, 0.347519, 0.0325165, 0.158452, 0.617291, 0.210416, 0.221654, 0.966459, 0.387891, 0.26969, 0.611687, 0.800789, 0.720446, 0.921588, 0.528373, 0.0822711, 0.944441, 0.146227, 0.572227, 0.241232, 0.194525, 0.299788, 0.254118, 0.952582, 0.66919, 0.193732, 0.044885, 0.457554, 0.973509, 0.330799, 0.677802, 0.777369, 0.641814, 0.810591, 0.509749, 0.0841657, 0.420437, 0.279581, 0.318408, 0.519812, 0.0711752, 0.946746, 0.277069, 0.833092, 0.166958, 0.585692, 0.423216, 0.774308, 0.771529, 0.464723, 0.130154, 0.628057, 0.255264, 0.423681, 0.783912, 0.207871, 0.430841, 0.578518, 0.289285, 0.97784, 0.438592, 0.516802, 0.656469, 0.789378, 0.78166, 0.276956, 0.580789, 0.819559, 0.599846, 0.0442968, 0.570578, 0.919094, 0.625292, 0.878726, 0.17099, 0.485903, 0.821136, 0.0244203, 0.367953, 0.174281, 0.971289, 0.570969, 0.579011, 0.89637, 0.781249, 0.0881914, 0.499253, 0.657518, 0.903831, 0.446523, 0.00493413, 0.627886, 0.751328, 0.0775987, 0.316861, 0.212631, 0.997426, 0.142301},
{0.970905, 0.888877, 0.0798249, 0.248894, 0.785645, 0.491221, 0.959831, 0.178933, 0.140196, 0.400846, 0.68196, 0.997965, 0.997741, 0.24676, 0.631411, 0.401464, 0.458647, 0.52662, 0.48405, 0.279203, 0.545081, 0.836064, 0.46141, 0.579893, 0.84397, 0.167144, 0.36738, 0.493333, 0.48472, 0.10416, 0.777749, 0.862278, 0.0615385, 0.114239, 0.960128, 0.75667, 0.594534, 0.438438, 0.660741, 0.542165, 0.816037, 0.885776, 0.123632, 0.80074, 0.117544, 0.202496, 0.965111, 0.900678, 0.213709, 0.0768134, 0.258067, 0.338553, 0.440497, 0.329323, 0.933849, 0.0198428, 0.265357, 0.411983, 0.0452335, 0.941052, 0.205885, 0.00703574, 0.283952, 0.229425, 0.707288, 0.16539, 0.946189, 0.392591, 0.270169, 0.0607177, 0.118691, 0.0493811, 0.736424, 0.0129828, 0.273929, 0.749993, 0.0442382, 0.100735, 0.515251, 0.28237, 0.372588, 0.25977, 0.201993, 0.044156, 0.32323, 0.614619, 0.738945, 0.549496, 0.184135, 0.80259, 0.890163, 0.50302, 0.80154, 0.763137, 0.471369, 0.588742, 0.292423, 0.542193, 0.510547, 0.625647},
};

static const std::vector<float> costs = {863.76, 339.943, 759.926, 20.1431, 65.3098, 493.66, 447.62, 992.802, 391.769, 550.816, 40.3046, 948.525, 18.9994, 909.421, 752.391, 204.63, 488.516, 723.801, 357.379, 45.8502, 129.57, 382.799, 322.05, 949.895, 508.872, 342.808, 10.6433, 581.829, 552.814, 548.464, 911.862, 713.082, 217.56, 42.8495, 698.443, 185.78, 615.879, 297.514, 586.32, 871.949, 283.183, 299.664, 855.299, 136.971, 442.123, 37.5174, 436.762, 403.512, 282.865, 991.61, 313.717, 753.438, 716.02, 17.7635, 143.5, 768.982, 864.289, 758.016, 820.678, 552.713, 745.92, 970.206, 810.243, 260.058, 129.484, 46.8101, 225.26, 867.173, 209.042, 581.981, 870.932, 886.808, 840.075, 860.575, 429.653, 604.068, 73.047, 900.028, 837.549, 273.042, 122.519, 215.305, 459.34, 12.1231, 774.373, 164.48, 8.39776, 994.259, 204.59, 458.902, 436.851, 753.768, 281.628, 69.6408, 269.891, 4.1478, 798.309, 418.588, 809.945, 883.604};

static const std::vector<float> min_impressions = {0.429317, 0.897756, 0.434726, 0.627006, 0.487122, 0.0471651, 0.916121, 0.662442, 0.450654, 0.783942};

//
#endif
