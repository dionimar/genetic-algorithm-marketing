#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(events[48], events[18]),events[21]),events[7]),events[20]),events[46]),events[44]),events[19]),events[25]),events[23]),events[47]),cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(events[14], events[27]),events[12]),events[33]),events[4]),events[18]),events[49]),events[23]),events[1]),events[45]),events[37]),cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(events[13], events[38]),events[41]),events[32]),events[34]),events[7]),events[46]),events[27]),events[20]),events[22]),events[19]),cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(events[38], events[43]),events[18]),events[47]),events[10]),events[1]),events[6]),events[44]),events[41]),events[8]),events[49]),cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(cons_incl(cons_incl(cons_incl(events[2], events[39]),events[34]),events[27]),events[43]),events[45]),events[16]),events[44]),events[31]),events[5]),events[9]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(events[36], events[10]),events[16]),events[39]),events[28]),events[0]),events[2]),events[48]),events[19]),events[38]),events[42]),cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(events[2], events[9]),events[43]),events[12]),events[39]),events[0]),events[20]),events[41]),events[36]),events[44]),events[15]),cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(events[15], events[10]),events[47]),events[16]),events[36]),events[41]),events[11]),events[19]),events[26]),events[8]),events[44]),cons_incl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(events[16], events[25]),events[0]),events[17]),events[49]),events[29]),events[14]),events[32]),events[45]),events[38]),events[15]),cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(events[36], events[45]),events[29]),events[10]),events[3]),events[31]),events[17]),events[25]),events[34]),events[9]),events[43]),cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(events[0], events[25]),events[20]),events[36]),events[2]),events[45]),events[16]),events[12]),events[17]),events[43]),events[10]),cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(events[9], events[25]),events[16]),events[39]),events[47]),events[31]),events[13]),events[5]),events[34]),events[19]),events[42]),cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_indep(events[44], events[26]),events[27]),events[7]),events[11]),events[4]),events[10]),events[22]),events[1]),events[33]),events[13]),cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(events[12], events[36]),events[27]),events[24]),events[41]),events[23]),events[1]),events[33]),events[37]),events[0]),events[30]),cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(events[19], events[43]),events[2]),events[36]),events[27]),events[9]),events[39]),events[37]),events[5]),events[44]),events[26]),cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[32], events[27]),events[23]),events[22]),events[17]),events[34]),events[49]),events[36]),events[9]),events[2]),events[44]),cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(events[0], events[41]),events[9]),events[37]),events[29]),events[38]),events[43]),events[46]),events[3]),events[4]),events[44]),cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(events[41], events[12]),events[28]),events[49]),events[10]),events[17]),events[13]),events[1]),events[44]),events[14]),events[24]),cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(events[41], events[35]),events[24]),events[12]),events[17]),events[34]),events[8]),events[20]),events[19]),events[46]),events[37]),cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(events[23], events[7]),events[12]),events[38]),events[22]),events[1]),events[17]),events[31]),events[20]),events[18]),events[26])};


static const std::vector< std::vector<float> > prob = {{0.658829, 0.969725, 0.0211285, 0.841873, 0.0637142, 0.349281, 0.522374, 0.676731, 0.24825, 0.39598, 0.707208, 0.355907, 0.170704, 0.906277, 0.640519, 0.604838, 0.366118, 0.540174, 0.509201, 0.696246, 0.0163641, 0.0602366, 0.714949, 0.755748, 0.797423, 0.210468, 0.197283, 0.30848, 0.30702, 0.509292, 0.118693, 0.116, 0.0670223, 0.253305, 0.397353, 0.312682, 0.955259, 0.118259, 0.945079, 0.0647927, 0.453902, 0.608965, 0.239491, 0.96369, 0.721548, 0.852813, 0.192356, 0.921624, 0.323962, 0.299519},
{0.622931, 0.171684, 0.288675, 0.771902, 0.478664, 0.941615, 0.834934, 0.684515, 0.86915, 0.19, 0.391857, 0.0454687, 0.733296, 0.573677, 0.738749, 0.41017, 0.593714, 0.237985, 0.0392662, 0.727605, 0.31215, 0.862427, 0.852456, 0.996885, 0.683024, 0.466282, 0.593241, 0.978514, 0.342091, 0.491091, 0.26917, 0.028472, 0.395408, 0.613762, 0.876375, 0.553832, 0.707637, 0.368313, 0.193397, 0.89009, 0.351365, 0.199736, 0.455969, 0.78859, 0.600283, 0.542278, 0.358386, 0.875134, 0.306028, 0.731118},
{0.466154, 0.249242, 0.417439, 0.121999, 0.236432, 0.0559825, 0.914616, 0.52816, 0.149183, 0.78969, 0.475202, 0.582336, 0.439108, 0.620579, 0.223784, 0.791692, 0.967454, 0.343553, 0.11053, 0.098056, 0.211834, 0.0136062, 0.112754, 0.601497, 0.0418289, 0.727251, 0.50284, 0.128742, 0.0264806, 0.0387357, 0.436371, 0.951354, 0.971049, 0.336668, 0.774406, 0.728767, 0.0841805, 0.487984, 0.296599, 0.0873904, 0.88053, 0.596228, 0.852513, 0.515316, 0.687114, 0.943878, 0.395087, 0.181415, 0.670894, 0.138264},
{0.952214, 0.136555, 0.143868, 0.182701, 0.740232, 0.937979, 0.862741, 0.782649, 0.0328619, 0.658173, 0.181206, 0.753743, 0.813037, 0.0263141, 0.633605, 0.300836, 0.409897, 0.693206, 0.98135, 0.00901057, 0.350073, 0.451049, 0.857993, 0.692118, 0.488241, 0.138828, 0.196078, 0.687623, 0.535981, 0.814408, 0.0344479, 0.640156, 0.495012, 0.190795, 0.137916, 0.543408, 0.0672511, 0.698426, 0.103931, 0.908822, 0.705517, 0.387319, 0.0915508, 0.207299, 0.414952, 0.629933, 0.893908, 0.37394, 0.198868, 0.332074},
{0.0672415, 0.108634, 0.612604, 0.470799, 0.742772, 0.931733, 0.450782, 0.34604, 0.338918, 0.172956, 0.0589279, 0.113495, 0.315104, 0.88122, 0.308137, 0.988543, 0.439435, 0.399299, 0.601592, 0.862921, 0.586234, 0.868909, 0.355319, 0.53797, 0.386202, 0.964379, 0.222935, 0.0701227, 0.0311599, 0.651259, 0.542972, 0.956805, 0.723458, 0.839, 0.655793, 0.163126, 0.489875, 0.350723, 0.0591825, 0.570953, 0.85853, 0.255723, 0.666849, 0.419371, 0.662526, 0.0468577, 0.0798273, 0.60796, 0.232905, 0.293112},
{0.88657, 0.496917, 0.260362, 0.671315, 0.375879, 0.449259, 0.0802098, 0.0933406, 0.589623, 0.354438, 0.993923, 0.662899, 0.327683, 0.17622, 0.959034, 0.633394, 0.321293, 0.161673, 0.866108, 0.387411, 0.442223, 0.40351, 0.603083, 0.391649, 0.599348, 0.635355, 0.644499, 0.448783, 0.439462, 0.650551, 0.197431, 0.68911, 0.863842, 0.42181, 0.128253, 0.228629, 0.207009, 0.608455, 0.54474, 0.0908994, 0.818409, 0.037651, 0.815012, 0.762604, 0.937633, 0.708427, 0.0414791, 0.162868, 0.321611, 0.988253},
{0.241821, 0.772063, 0.0792682, 0.0845939, 0.197264, 0.368579, 0.690297, 0.789967, 0.693897, 0.509017, 0.993537, 0.773833, 0.353108, 0.367131, 0.57994, 0.347222, 0.508706, 0.227754, 0.464674, 0.572875, 0.612812, 0.00447852, 0.510207, 0.938657, 0.940587, 0.0293257, 0.9663, 0.477109, 0.732947, 0.695852, 0.468308, 0.41511, 0.115613, 0.192208, 0.870766, 0.820069, 0.481838, 0.989651, 0.650729, 0.51374, 0.59533, 0.614116, 0.350112, 0.781107, 0.614601, 0.436556, 0.215006, 0.293738, 0.94194, 0.154734},
{0.0574028, 0.936238, 0.70709, 0.0948993, 0.585755, 0.312521, 0.020769, 0.15907, 0.973343, 0.043003, 0.103298, 0.79072, 0.242208, 0.596026, 0.738967, 0.705011, 0.911464, 0.593349, 0.396355, 0.0989401, 0.0229725, 0.339607, 0.524158, 0.390576, 0.155729, 0.775999, 0.291414, 0.690116, 0.975887, 0.777303, 0.192159, 0.554928, 0.354553, 0.282148, 0.295749, 0.658646, 0.982574, 0.520012, 0.341977, 0.623847, 0.450009, 0.401378, 0.847442, 0.857846, 0.746634, 0.441598, 0.500414, 0.48247, 0.0027742, 0.772145},
{0.533098, 0.856757, 0.130902, 0.437494, 0.424032, 0.00535586, 0.607488, 0.943445, 0.337366, 0.822828, 0.92034, 0.61323, 0.557196, 0.409315, 0.416683, 0.58307, 0.511172, 0.448357, 0.0652704, 0.23473, 0.342717, 0.0658166, 0.770937, 0.476779, 0.784101, 0.141125, 0.926858, 0.494989, 0.779924, 0.689608, 0.258879, 0.82184, 0.820914, 0.932176, 0.163768, 0.789509, 0.173233, 0.451437, 0.162853, 0.57652, 0.427518, 0.179944, 0.74964, 0.542564, 0.504138, 0.325169, 0.233552, 0.756861, 0.744448, 0.249905},
{0.788912, 0.878233, 0.423892, 0.692999, 0.956839, 0.448718, 0.381708, 0.0529925, 0.901294, 0.335674, 0.817413, 0.380612, 0.462508, 0.29246, 0.594121, 0.593997, 0.487762, 0.988017, 0.366825, 0.775307, 0.928947, 0.992916, 0.994085, 0.0823949, 0.582248, 0.556218, 0.606792, 0.970971, 0.0550375, 0.960679, 0.0114402, 0.278622, 0.218576, 0.569083, 0.214399, 0.942814, 0.128453, 0.938218, 0.961212, 0.565925, 0.705755, 0.413345, 0.397773, 0.417205, 0.858959, 0.97697, 0.578026, 0.110582, 0.607015, 0.140578},
{0.894735, 0.635479, 0.552384, 0.104457, 0.773584, 0.387811, 0.721658, 0.0535593, 0.750345, 0.557425, 0.0389185, 0.153798, 0.0560455, 0.292917, 0.637497, 0.852567, 0.092286, 0.885877, 0.70554, 0.161512, 0.0822033, 0.656523, 0.229203, 0.813506, 0.315664, 0.130814, 0.816202, 0.622706, 0.586596, 0.693859, 0.449957, 0.435153, 0.860394, 0.5604, 0.663146, 0.112771, 0.225624, 0.235524, 0.672766, 0.511218, 0.782928, 0.818084, 0.910799, 0.903559, 0.986623, 0.377204, 0.330444, 0.00280089, 0.738378, 0.559215},
{0.167768, 0.390316, 0.98441, 0.735978, 0.490897, 0.0692635, 0.343947, 0.522553, 0.350153, 0.459641, 0.75591, 0.410793, 0.366743, 0.0214613, 0.600046, 0.543254, 0.177693, 0.681123, 0.824238, 0.814988, 0.653394, 0.128541, 0.73484, 0.74408, 0.0617529, 0.839742, 0.0732831, 0.593932, 0.988026, 0.265692, 0.0119381, 0.855385, 0.0523223, 0.831249, 0.19021, 0.623875, 0.345641, 0.906108, 0.78228, 0.77609, 0.318484, 0.288455, 0.934354, 0.289627, 0.988187, 0.343824, 0.232011, 0.495084, 0.543233, 0.24421},
{0.00780399, 0.12641, 0.884744, 0.464568, 0.970093, 0.251676, 0.729667, 0.120154, 0.0015442, 0.657403, 0.290365, 0.803603, 0.569069, 0.57258, 0.106075, 0.523236, 0.244783, 0.826937, 0.898342, 0.315772, 0.80096, 0.201133, 0.630869, 0.441983, 0.527915, 0.266532, 0.832056, 0.645693, 0.577151, 0.419767, 0.046407, 0.82149, 0.643089, 0.0737924, 0.471937, 0.373331, 0.544185, 0.733516, 0.235191, 0.679207, 0.329945, 0.124582, 0.549062, 0.352578, 0.942479, 0.600483, 0.972607, 0.0730856, 0.835979, 0.013345},
{0.770861, 0.984786, 0.52588, 0.0296634, 0.143076, 0.827699, 0.526974, 0.39061, 0.911525, 0.153231, 0.457787, 0.650401, 0.0400232, 0.442718, 0.708267, 0.518983, 0.0128923, 0.173364, 0.919725, 0.850517, 0.0364832, 0.231423, 0.879752, 0.53672, 0.120691, 0.63883, 0.311437, 0.0983197, 0.655912, 0.442703, 0.433306, 0.00675073, 0.809817, 0.994502, 0.76274, 0.100872, 0.488754, 0.965718, 0.120761, 0.507511, 0.912783, 0.364256, 0.268368, 0.677651, 0.573593, 0.740325, 0.659015, 0.912422, 0.380044, 0.251095},
{0.655483, 0.207708, 0.509934, 0.544917, 0.0956962, 0.25632, 0.224889, 0.785329, 0.397333, 0.675195, 0.855465, 0.0586349, 0.964366, 0.663863, 0.984527, 0.650577, 0.0402963, 0.280508, 0.601989, 0.811123, 0.855762, 0.467196, 0.0194358, 0.550632, 0.411469, 0.71118, 0.519914, 0.715119, 0.647644, 0.128078, 0.960599, 0.00863763, 0.564051, 0.823681, 0.90398, 0.316643, 0.734324, 0.400833, 0.0700724, 0.315301, 0.613099, 0.847276, 0.146797, 0.0887407, 0.179495, 0.132106, 0.881482, 0.658186, 0.604539, 0.418511},
{0.711401, 0.183859, 0.727067, 0.916275, 0.0812788, 0.784673, 0.529015, 0.577082, 0.280024, 0.501773, 0.0922595, 0.278796, 0.532195, 0.4842, 0.121789, 0.551596, 0.364444, 0.532646, 0.488398, 0.871072, 0.0101019, 0.350141, 0.458148, 0.942097, 0.299684, 0.584192, 0.348445, 0.957967, 0.99959, 0.992858, 0.806648, 0.561178, 0.134311, 0.900042, 0.25799, 0.543169, 0.570927, 0.527625, 0.790172, 0.364583, 0.0631233, 0.0534109, 0.99505, 0.284588, 0.769359, 0.923815, 0.752776, 0.0591619, 0.315899, 0.570117},
{0.409359, 0.103548, 0.377395, 0.39956, 0.662478, 0.111689, 0.708868, 0.358909, 0.655414, 0.135681, 0.450084, 0.0834097, 0.00817518, 0.788107, 0.133386, 0.347289, 0.427735, 0.285646, 0.106151, 0.422484, 0.831306, 0.407756, 0.843922, 0.859972, 0.414456, 0.746905, 0.959212, 0.196827, 0.859226, 0.816564, 0.146125, 0.443431, 0.391495, 0.17395, 0.121332, 0.815135, 0.717852, 0.489037, 0.24584, 0.926962, 0.559404, 0.418016, 0.397876, 0.674865, 0.553461, 0.432787, 0.0678093, 0.483678, 0.441528, 0.944774},
{0.645046, 0.494966, 0.961524, 0.702301, 0.313451, 0.000349711, 0.869015, 0.133893, 0.146372, 0.471885, 0.0119627, 0.434894, 0.621362, 0.206886, 0.973803, 0.562916, 0.49254, 0.804106, 0.604569, 0.263613, 0.215715, 0.0509186, 0.167469, 0.0111654, 0.602919, 0.484727, 0.146794, 0.174124, 0.467234, 0.374276, 0.797061, 0.0384966, 0.946916, 0.668521, 0.862564, 0.364038, 0.590452, 0.82876, 0.606448, 0.917868, 0.0704174, 0.399711, 0.503126, 0.879359, 0.438555, 0.732402, 0.32496, 0.669238, 0.154287, 0.810392},
{0.696379, 0.428977, 0.263967, 0.0605539, 0.998804, 0.888673, 0.5946, 0.299622, 9.13508e05, 0.920953, 0.963009, 0.401029, 0.850851, 0.576245, 0.847185, 0.102232, 0.891137, 0.574415, 0.708409, 0.134199, 0.27244, 0.949039, 0.0619441, 0.868714, 0.347576, 0.201274, 0.178555, 0.325978, 0.289971, 0.401152, 0.0811924, 0.544459, 0.111832, 0.434708, 0.760689, 0.211287, 0.564568, 0.0676042, 0.714839, 0.561986, 0.429768, 0.409095, 0.755056, 0.211098, 0.402451, 0.255042, 0.867935, 0.519791, 0.94718, 0.177184},
{0.011141, 0.557799, 0.356094, 0.971063, 0.717036, 0.587594, 0.16721, 0.566628, 0.736388, 0.609921, 0.969487, 0.130618, 0.909617, 0.483317, 0.813926, 0.454085, 0.445117, 0.700201, 0.224017, 0.510318, 0.768925, 0.0537565, 0.647102, 0.301552, 0.402207, 0.935977, 0.710787, 0.124642, 0.285084, 0.848248, 0.392078, 0.640569, 0.0891259, 0.256555, 0.48019, 0.281184, 0.192304, 0.680486, 0.497526, 0.151275, 0.03089, 0.129063, 0.11063, 0.148312, 0.202251, 0.834954, 0.439427, 0.600937, 0.63376, 0.973462},
};

static const std::vector<float> costs = {387.305, 616.144, 607.739, 599.795, 210.012, 577.388, 278.869, 616.418, 523.842, 263.441, 267.938, 785.354, 159.799, 766.401, 365.724, 394.575, 879.261, 117.383, 984.469, 719.768, 770.61, 656.647, 728.716, 549.653, 613.246, 855.654, 527.628, 169.521, 329.413, 105.651, 275.954, 537.65, 596.06, 1.94327, 39.8724, 183.259, 178.573, 633.487, 613.638, 243.296, 674.893, 340.025, 656.266, 810.251, 481.79, 797.19, 675.096, 30.102, 889.753, 426.869};

static const std::vector<float> min_impressions = {0.434589, 0.39466, 0.250332, 0.0472667, 0.159308, 0.881188, 0.904237, 0.0037287, 0.0156139, 0.115467, 0.290327, 0.701998, 0.0983273, 0.403462, 0.690444, 0.167343, 0.167435, 0.435136, 0.545494, 0.518667};

//
#endif
