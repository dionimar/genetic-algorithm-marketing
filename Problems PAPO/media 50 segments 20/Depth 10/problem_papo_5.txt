#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_excl(events[35], events[15]),events[27]),events[5]),events[36]),events[33]),events[25]),events[8]),events[0]),events[6]),events[24]),cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(events[24], events[16]),events[0]),events[2]),events[3]),events[28]),events[13]),events[38]),events[31]),events[43]),events[48]),cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(events[19], events[42]),events[36]),events[49]),events[35]),events[29]),events[44]),events[22]),events[3]),events[34]),events[23]),cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(events[17], events[10]),events[39]),events[19]),events[49]),events[42]),events[9]),events[18]),events[4]),events[12]),events[3]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(events[28], events[46]),events[36]),events[31]),events[23]),events[5]),events[30]),events[9]),events[8]),events[45]),events[26]),cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(cons_indep(cons_incl(events[23], events[46]),events[42]),events[10]),events[45]),events[11]),events[9]),events[19]),events[13]),events[37]),events[44]),cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(events[32], events[24]),events[18]),events[20]),events[33]),events[43]),events[31]),events[9]),events[0]),events[25]),events[28]),cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(events[31], events[17]),events[9]),events[32]),events[47]),events[43]),events[38]),events[14]),events[15]),events[11]),events[3]),cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_indep(events[5], events[18]),events[39]),events[14]),events[6]),events[49]),events[31]),events[28]),events[9]),events[0]),events[12]),cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(events[38], events[26]),events[47]),events[39]),events[9]),events[44]),events[11]),events[49]),events[5]),events[33]),events[3]),cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(cons_incl(events[23], events[8]),events[15]),events[16]),events[7]),events[46]),events[49]),events[37]),events[42]),events[4]),events[27]),cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(events[6], events[15]),events[18]),events[33]),events[14]),events[3]),events[12]),events[9]),events[48]),events[38]),events[37]),cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(events[2], events[40]),events[6]),events[3]),events[23]),events[29]),events[35]),events[4]),events[16]),events[13]),events[45]),cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(events[26], events[48]),events[11]),events[8]),events[35]),events[42]),events[14]),events[29]),events[47]),events[3]),events[10]),cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(events[10], events[39]),events[37]),events[35]),events[19]),events[29]),events[3]),events[41]),events[28]),events[5]),events[46]),cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(events[38], events[8]),events[40]),events[18]),events[31]),events[23]),events[21]),events[35]),events[5]),events[37]),events[22]),cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(events[35], events[4]),events[21]),events[5]),events[41]),events[38]),events[15]),events[31]),events[24]),events[22]),events[37]),cons_indep(cons_excl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(events[45], events[15]),events[21]),events[10]),events[14]),events[23]),events[49]),events[32]),events[42]),events[16]),events[19]),cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(events[30], events[6]),events[29]),events[1]),events[11]),events[34]),events[14]),events[17]),events[37]),events[33]),events[45]),cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_excl(events[45], events[31]),events[25]),events[4]),events[26]),events[27]),events[1]),events[16]),events[37]),events[49]),events[3])};


static const std::vector< std::vector<float> > prob = {{0.640981, 0.14259, 0.593029, 0.993158, 0.53738, 0.0673295, 0.784934, 0.298236, 0.411895, 0.123686, 0.252594, 0.131456, 0.945142, 0.726901, 0.623608, 0.649348, 0.22601, 0.123286, 0.338449, 0.173526, 0.201353, 0.979269, 0.216496, 0.0950167, 0.30986, 0.0287636, 0.495051, 0.577492, 0.396105, 0.949542, 0.579187, 0.385322, 0.987164, 0.794495, 0.525626, 0.587996, 0.883304, 0.142623, 0.856091, 0.685843, 0.0706978, 0.30151, 0.248157, 0.822852, 0.893966, 0.0853975, 0.201353, 0.0907734, 0.689683, 0.833675},
{0.302142, 0.746028, 0.291152, 0.00899497, 0.263583, 0.0926237, 0.271012, 0.690941, 0.487175, 0.0434351, 0.460657, 0.786955, 0.251126, 0.178335, 0.00684533, 0.699661, 0.682695, 0.144011, 0.59577, 0.751513, 0.195903, 0.309754, 0.0444812, 0.458362, 0.757506, 0.655646, 0.182757, 0.257535, 0.923113, 0.367797, 0.886922, 0.536221, 0.916456, 0.620206, 0.721652, 0.0867511, 0.387368, 0.581713, 0.0122989, 0.567332, 0.148209, 0.00200248, 0.387988, 0.843344, 0.37773, 0.234918, 0.91151, 0.240075, 0.787692, 0.154657},
{0.0263269, 0.130628, 0.848836, 0.2334, 0.476173, 0.059937, 0.880201, 0.307654, 0.833609, 0.41909, 0.533823, 0.502417, 0.866483, 0.458763, 0.320575, 0.484522, 0.482406, 0.622809, 0.390237, 0.39433, 0.316385, 0.885036, 0.512706, 0.915396, 0.0226638, 0.158497, 0.522015, 0.251323, 0.926725, 0.0183653, 0.163532, 0.249215, 0.922819, 0.579138, 0.953907, 0.575183, 0.937464, 0.595041, 0.717441, 0.336354, 0.563858, 0.0786938, 0.633773, 0.311839, 0.684167, 0.36869, 0.802054, 0.760827, 0.0982117, 0.452793},
{0.717279, 0.0230309, 0.875168, 0.736098, 0.130906, 0.278134, 0.443649, 0.302599, 0.457248, 0.00447441, 0.93515, 0.77939, 0.518131, 0.571314, 0.919426, 0.0677264, 0.53547, 0.639437, 0.261456, 0.0256264, 0.435098, 0.849006, 0.0370614, 0.411572, 0.613272, 0.433629, 0.387651, 0.240916, 0.365804, 0.451161, 0.166476, 0.950843, 0.440054, 0.042664, 0.781149, 0.763401, 0.57761, 0.778824, 0.923631, 0.463502, 0.819427, 0.12091, 0.245951, 0.668662, 0.38531, 0.0975133, 0.747296, 0.605073, 0.662525, 0.972085},
{0.832463, 0.233889, 0.113046, 0.311626, 0.981417, 0.873, 0.0579624, 0.382548, 0.647223, 0.806736, 0.224404, 0.618944, 0.511225, 0.776386, 0.380899, 0.74767, 0.199985, 0.446056, 0.699899, 0.435971, 0.75925, 0.511271, 0.689966, 0.104729, 0.658406, 0.369108, 0.698645, 0.71049, 0.184553, 0.513884, 0.917113, 0.286779, 0.581215, 0.0333024, 0.955003, 0.132236, 0.478073, 0.17286, 0.75788, 0.335141, 0.280363, 0.407378, 0.0453671, 0.993372, 0.768344, 0.781285, 0.793196, 0.972819, 0.137666, 0.60197},
{0.228247, 0.813977, 0.367875, 0.605016, 0.598111, 0.788525, 0.39172, 0.317633, 0.119017, 0.428357, 0.968425, 0.997509, 0.980021, 0.950498, 0.648775, 0.37086, 0.436714, 0.545078, 0.201405, 0.892854, 0.899553, 0.821718, 0.782014, 0.395852, 0.837556, 0.217147, 0.912973, 0.520039, 0.522247, 0.0435458, 0.069765, 0.237738, 0.777156, 0.548397, 0.277645, 0.823997, 0.817502, 0.528936, 0.636306, 0.0714062, 0.286348, 0.20255, 0.463156, 0.617136, 0.539059, 0.584316, 0.877404, 0.187253, 0.565044, 0.923394},
{0.864976, 0.639313, 0.044802, 0.394974, 0.327693, 0.0216059, 0.959218, 0.163832, 0.109826, 0.854687, 0.969006, 0.568919, 0.863113, 0.00518676, 0.948458, 0.388364, 0.79458, 0.815319, 0.396301, 0.235116, 0.00966402, 0.503937, 0.130908, 0.0996751, 0.677899, 0.502886, 0.0268054, 0.636989, 0.440753, 0.576675, 0.282738, 0.590899, 0.281989, 0.346812, 0.244651, 0.949254, 0.027944, 0.799869, 0.559453, 0.308496, 0.830689, 0.877492, 0.754168, 0.881532, 0.629383, 0.558051, 0.99104, 0.826491, 0.702251, 0.671448},
{0.877013, 0.0488363, 0.0691669, 0.642752, 0.0925971, 0.952861, 0.853738, 0.849238, 0.36172, 0.939889, 0.241447, 0.0819796, 0.653057, 0.886497, 0.62443, 0.557111, 0.867653, 0.490362, 0.5579, 0.0140197, 0.235402, 0.220982, 0.143358, 0.229714, 0.0178286, 0.954345, 0.666716, 0.845886, 0.957604, 0.334143, 0.543285, 0.461374, 0.111937, 0.773936, 0.936772, 0.30428, 0.964113, 0.623688, 0.26329, 0.355025, 0.385644, 0.545531, 0.737165, 0.372859, 0.0818866, 0.313648, 0.854782, 0.643842, 0.0862063, 0.928666},
{0.124803, 0.301288, 0.734031, 0.980816, 0.102667, 0.38495, 0.0329186, 0.714691, 0.702733, 0.658842, 0.625276, 0.247083, 0.892026, 0.948448, 0.201837, 0.698253, 0.239084, 0.0540474, 0.941021, 0.856445, 0.812259, 0.886408, 0.350725, 0.621051, 0.507836, 0.438195, 0.457573, 0.813265, 0.67709, 0.505114, 0.0874561, 0.220848, 0.420456, 0.21331, 0.27413, 0.457502, 0.790493, 0.701638, 0.487187, 0.765243, 0.600228, 0.173154, 0.764253, 0.184927, 0.833828, 0.702537, 0.730641, 0.590062, 0.405352, 0.08528},
{0.563276, 0.0483919, 0.234511, 0.521564, 0.754604, 0.573493, 0.799144, 0.396653, 0.127096, 0.876498, 0.531813, 0.41381, 0.112037, 0.949088, 0.627378, 0.485367, 0.463979, 0.932497, 0.747274, 0.0529271, 0.723705, 0.36428, 0.548342, 0.764135, 0.938802, 0.884015, 0.728273, 0.331978, 0.871139, 0.63602, 0.947307, 0.528777, 0.0981007, 0.209108, 0.458105, 0.758842, 0.47116, 0.214316, 0.798529, 0.511703, 0.62518, 0.651818, 0.333137, 0.821546, 0.285739, 0.747218, 0.104768, 0.565386, 0.750185, 0.649677},
{0.476893, 0.936604, 0.135197, 0.737959, 0.87355, 0.940808, 0.00925644, 0.275759, 0.814522, 0.696903, 0.646659, 0.00894541, 0.989902, 0.269169, 0.932891, 0.338151, 0.692796, 0.165264, 0.568873, 0.641155, 0.755929, 0.448388, 0.211297, 0.284881, 0.552646, 0.28579, 0.332364, 0.0733015, 0.00426663, 0.513503, 0.384756, 0.0311618, 0.269755, 0.132803, 0.16428, 0.24536, 0.175252, 0.116045, 0.0103784, 0.903011, 0.0647824, 0.383799, 0.130663, 0.0406358, 0.898507, 0.309975, 0.0427352, 0.774282, 0.171763, 0.553481},
{0.94767, 0.143873, 0.922311, 0.0778574, 0.166231, 0.0471169, 0.625895, 0.347094, 0.497096, 0.900869, 0.620694, 0.60354, 0.68773, 0.896913, 0.965789, 0.60387, 0.658298, 0.0342115, 0.0353486, 0.386822, 0.988743, 0.102811, 0.872646, 0.561538, 0.475526, 0.306382, 0.173519, 0.33641, 0.542076, 0.477672, 0.965636, 0.787689, 0.953451, 0.0172363, 0.15063, 0.041356, 0.105914, 0.615747, 0.11969, 0.313751, 0.646496, 0.182219, 0.328737, 0.120047, 0.00111506, 0.276005, 0.0289554, 0.278125, 0.224685, 0.574854},
{0.285943, 0.834994, 0.704353, 0.395898, 0.219738, 0.54444, 0.310062, 0.1877, 0.135851, 0.344037, 0.00772521, 0.0394889, 0.846214, 0.600899, 0.414805, 0.307342, 0.278124, 0.513906, 0.232327, 0.697019, 0.454681, 0.425755, 0.495404, 0.23488, 0.413491, 0.984379, 0.545455, 0.690449, 0.804794, 0.0439618, 0.488756, 0.895739, 0.317417, 0.494834, 0.576324, 0.50043, 0.501559, 0.503219, 0.620961, 0.462151, 0.165341, 0.348502, 0.142006, 0.515571, 0.835243, 0.53521, 0.814208, 0.466552, 0.998011, 0.455712},
{0.352459, 0.417094, 0.148805, 0.908101, 0.63499, 0.876736, 0.132328, 0.684935, 0.923529, 0.596972, 0.79286, 0.702675, 0.159924, 0.236109, 0.227723, 0.515921, 0.939682, 0.471963, 0.0360944, 0.872165, 0.033029, 0.547195, 0.464628, 0.50095, 0.983927, 0.479973, 0.237049, 0.0484236, 0.564367, 0.984955, 0.0925407, 0.764635, 0.725232, 0.382812, 0.160446, 0.721667, 0.843805, 0.989433, 0.663066, 0.624798, 0.425158, 0.0977209, 0.458466, 0.323104, 0.555423, 0.404228, 0.0850293, 0.221373, 0.275977, 0.126647},
{0.504294, 0.607901, 0.74168, 0.233638, 0.283755, 0.954205, 0.530123, 0.614853, 0.477227, 0.574199, 0.36023, 0.093371, 0.0836328, 0.433795, 0.758264, 0.221925, 0.3979, 0.113419, 0.776466, 0.257688, 0.262731, 0.186576, 0.812345, 0.403455, 0.220212, 0.881851, 0.882898, 0.0120083, 0.263178, 0.0856546, 0.408703, 0.772369, 0.516644, 0.884142, 0.904627, 0.733301, 0.27245, 0.612089, 0.466779, 0.874001, 0.0133253, 0.208324, 0.884003, 0.13905, 0.338993, 0.095531, 0.725219, 0.919907, 0.73749, 0.564244},
{0.337294, 0.612454, 0.705872, 0.0359967, 0.360917, 0.223051, 0.759684, 0.825882, 0.247612, 0.0262578, 0.358023, 0.873881, 0.750935, 0.936772, 0.912047, 0.199684, 0.528364, 0.613057, 0.823305, 0.647881, 0.611021, 0.497397, 0.613773, 0.345323, 0.791547, 0.732468, 0.80872, 0.881867, 0.689402, 0.61782, 0.778821, 0.113759, 0.804423, 0.138244, 0.351407, 0.883149, 0.201923, 0.0341345, 0.923922, 0.413926, 0.5924, 0.114959, 0.663443, 0.169833, 0.275381, 0.329479, 0.513993, 0.310385, 0.917145, 0.164949},
{0.331718, 0.606925, 0.407094, 0.313203, 0.282641, 0.809508, 0.75181, 0.827457, 0.13511, 0.472705, 0.92274, 0.288817, 0.325031, 0.996977, 0.638163, 0.314066, 0.789467, 0.718658, 0.462785, 0.997195, 0.569503, 0.0716897, 0.840795, 0.845962, 0.34991, 0.501806, 0.227458, 0.290089, 0.198799, 0.214265, 0.172267, 0.0457898, 0.269013, 0.023545, 0.352368, 0.192435, 0.163037, 0.662984, 0.182235, 0.622425, 0.61198, 0.10811, 0.879638, 0.386482, 0.290338, 0.405078, 0.877945, 0.555859, 0.379146, 0.108045},
{0.97936, 0.0662414, 0.266941, 0.487305, 0.376563, 0.474828, 0.141556, 0.60228, 0.339611, 0.531298, 0.83074, 0.294801, 0.270457, 0.633446, 0.18957, 0.391143, 0.900845, 0.513202, 0.841905, 0.564435, 0.493975, 0.615104, 0.199048, 0.394474, 0.866657, 0.191988, 0.105936, 0.2515, 0.840693, 0.634365, 0.956258, 0.287047, 0.711449, 0.185557, 0.166045, 0.691626, 0.0434941, 0.981482, 0.729961, 0.560561, 0.162559, 0.871063, 0.570899, 0.184579, 0.412397, 0.884789, 0.0722916, 0.331555, 0.871199, 0.223931},
{0.330931, 0.33932, 0.285506, 0.452082, 0.442569, 0.291086, 0.636134, 0.348226, 0.801364, 0.306307, 0.8274, 0.842185, 0.618639, 0.988369, 0.54244, 0.502277, 0.278951, 0.885344, 0.569171, 0.950837, 0.67506, 0.587441, 0.340353, 0.0757131, 0.240697, 0.86226, 0.00826612, 0.487997, 0.296663, 0.416233, 0.353955, 0.691795, 0.672815, 0.117493, 0.0648611, 0.292148, 0.401729, 0.977066, 0.671961, 0.957125, 0.269434, 0.957231, 0.842073, 0.928881, 0.944285, 0.534873, 0.382138, 0.361366, 0.0163675, 0.275492},
{0.276206, 0.0031754, 0.905914, 0.881541, 0.060165, 0.758225, 0.563133, 0.896218, 0.111741, 0.307887, 0.229172, 0.00664763, 0.690114, 0.986868, 0.0937436, 0.131112, 0.10802, 0.234105, 0.129763, 0.139932, 0.168666, 0.362963, 0.688855, 0.507936, 0.664831, 0.892018, 0.0512526, 0.118878, 0.628918, 0.995678, 0.0980705, 0.49388, 0.549987, 0.271012, 0.394134, 0.336487, 0.734222, 0.929331, 0.326247, 0.615298, 0.66168, 0.888864, 0.303721, 0.357616, 0.229643, 0.253821, 0.682391, 0.800465, 0.413815, 0.142653},
};

static const std::vector<float> costs = {112.462, 410.546, 813.96, 59.3651, 52.1108, 709.85, 62.2327, 555.362, 166.299, 475.985, 851.452, 833.56, 44.6432, 149.653, 821.993, 188.935, 834.442, 771.894, 158.982, 570.033, 318.714, 793.314, 731.848, 449.919, 43.8739, 268.241, 295.935, 281.701, 887.585, 238.434, 543.638, 516.205, 116.265, 848.227, 399.472, 383.635, 345.441, 778.278, 250.034, 724.905, 627.374, 850.576, 548.014, 740.759, 155.598, 948.161, 413.075, 643.626, 949.317, 673.206};

static const std::vector<float> min_impressions = {0.116315, 0.0309436, 0.249904, 0.604768, 0.41422, 0.443852, 0.480236, 0.552165, 0.848833, 0.384748, 0.316218, 0.478252, 0.291207, 0.999329, 0.205209, 0.188722, 0.597093, 0.251921, 0.0576262, 0.524191};

//
#endif
