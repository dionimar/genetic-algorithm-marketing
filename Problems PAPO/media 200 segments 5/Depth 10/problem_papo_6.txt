#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(cons_excl(events[186], events[80]),events[136]),events[12]),events[103]),events[123]),events[180]),events[60]),events[104]),events[25]),events[151]),cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[112], events[77]),events[105]),events[24]),events[118]),events[72]),events[98]),events[192]),events[136]),events[145]),events[100]),cons_incl(cons_excl(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_indep(events[60], events[6]),events[78]),events[101]),events[109]),events[83]),events[43]),events[198]),events[94]),events[37]),events[187]),cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(events[8], events[53]),events[50]),events[73]),events[83]),events[22]),events[81]),events[198]),events[32]),events[187]),events[109]),cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(events[155], events[56]),events[77]),events[96]),events[144]),events[114]),events[176]),events[124]),events[81]),events[109]),events[105])};


static const std::vector< std::vector<float> > prob = {{0.757782, 0.71158, 0.84938, 0.834742, 0.172348, 0.200632, 0.178007, 0.485088, 0.915458, 0.134987, 0.478647, 0.18767, 0.610349, 0.933852, 0.787086, 0.550734, 0.812071, 0.812674, 0.678013, 0.424093, 0.700634, 0.153071, 0.772117, 0.151194, 0.0999979, 0.681627, 0.569613, 0.132498, 0.726837, 0.408939, 0.0331285, 0.430175, 0.426929, 0.138928, 0.024118, 0.395154, 0.945888, 0.742252, 0.0583787, 0.606858, 0.639655, 0.642634, 0.627912, 0.905551, 0.944092, 0.93681, 0.49007, 0.284441, 0.96722, 0.374691, 0.19626, 0.564558, 0.786777, 0.831647, 0.34581, 0.488697, 0.656347, 0.0747107, 0.105007, 0.619581, 0.231376, 0.948596, 0.815762, 0.573644, 0.438364, 0.479419, 0.667818, 0.0204713, 0.727782, 0.0892889, 0.77477, 0.448656, 0.906679, 0.190918, 0.201778, 0.0573777, 0.725368, 0.972953, 0.305769, 0.613942, 0.0234206, 0.937075, 0.473202, 0.784723, 0.0535085, 0.80587, 0.640487, 0.279492, 0.767983, 0.83564, 0.797707, 0.241761, 0.298063, 0.54715, 0.0110047, 0.155516, 0.189075, 0.809452, 0.637804, 0.953513, 0.76422, 0.0307668, 0.693603, 0.455163, 0.275328, 0.122128, 0.88797, 0.218443, 0.878226, 0.52308, 0.135261, 0.211613, 0.359589, 0.580481, 0.580202, 0.802471, 0.150068, 0.204027, 0.212861, 0.787861, 0.366203, 0.858604, 0.18494, 0.921117, 0.653813, 0.238387, 0.463797, 0.245506, 0.416655, 0.143474, 0.0928699, 0.199117, 0.686, 0.345362, 0.452643, 0.881012, 0.493293, 0.804114, 0.680351, 0.967912, 0.492029, 0.0105367, 0.404213, 0.679483, 0.767733, 0.0968369, 0.450707, 0.206816, 0.344062, 0.510726, 0.115347, 0.495641, 0.442444, 0.815016, 0.518093, 0.28231, 0.966831, 0.687158, 0.942606, 0.358545, 0.523763, 0.873828, 0.890858, 0.404926, 0.929164, 0.878631, 0.281049, 0.662955, 0.848313, 0.575508, 0.87979, 0.356349, 0.893145, 0.631537, 0.614138, 0.256788, 0.882401, 0.52552, 0.606933, 0.307647, 0.174381, 0.596485, 0.572141, 0.796418, 0.307603, 0.324037, 0.895831, 0.189351, 0.755565, 0.366086, 0.544892, 0.143261, 0.714168, 0.0754805, 0.0618265, 0.383672, 0.266758, 0.37977, 0.637539, 0.93501},
{0.795577, 0.0979299, 0.181077, 0.198462, 0.808221, 0.927697, 0.998512, 0.0550615, 0.858989, 0.950494, 0.51509, 0.677828, 0.416008, 0.22121, 0.304067, 0.770696, 0.933179, 0.0368576, 0.623884, 0.561767, 0.634903, 0.365651, 0.694164, 0.68968, 0.542322, 0.96856, 0.375027, 0.0562328, 0.1908, 0.676206, 0.509231, 0.70838, 0.88332, 0.306465, 0.327335, 0.797239, 0.324155, 0.848746, 0.0928707, 0.047439, 0.075806, 0.35678, 0.797107, 0.162028, 0.992374, 0.433814, 0.00160519, 0.0359266, 0.501125, 0.517045, 0.515356, 0.139539, 0.145873, 0.867691, 0.053546, 0.0626338, 0.24323, 0.606922, 0.194348, 0.471998, 0.0761025, 0.866498, 0.497275, 0.466562, 0.257032, 0.485407, 0.445783, 0.123817, 0.811386, 0.394973, 0.166069, 0.373838, 0.320191, 0.646903, 0.606833, 0.837134, 0.921487, 0.438561, 0.542216, 0.825941, 0.426426, 0.260253, 0.0354349, 0.261509, 0.306107, 0.10922, 0.39495, 0.607904, 0.406609, 0.679306, 0.190648, 0.924601, 0.0990114, 0.811651, 0.986471, 0.829477, 0.99778, 0.435992, 0.205945, 0.191495, 0.406203, 0.55675, 0.221954, 0.693102, 0.49344, 0.368813, 0.296097, 0.349458, 0.493877, 0.254449, 0.192849, 0.347416, 0.443813, 0.22934, 0.833548, 0.25184, 0.0197346, 0.642863, 0.703819, 0.580564, 0.83178, 0.992405, 0.717335, 0.0731153, 0.160491, 0.15564, 0.31192, 0.128138, 0.280812, 0.171984, 0.298261, 0.782359, 0.90498, 0.692755, 0.566993, 0.723471, 0.927106, 0.971257, 0.16489, 0.33639, 0.379655, 0.939184, 0.914099, 0.0436278, 0.864394, 0.165439, 0.893317, 0.198064, 0.945934, 0.156907, 0.495507, 0.555873, 0.0721115, 0.609617, 0.845902, 0.7812, 0.645465, 0.837515, 0.0615045, 0.866566, 0.991715, 0.680155, 0.445291, 0.759371, 0.193041, 0.212969, 0.650626, 0.0674809, 0.632475, 0.774781, 0.0861499, 0.317442, 0.614052, 0.0808126, 0.708286, 0.589905, 0.627993, 0.286737, 0.288052, 0.463101, 0.420223, 0.105024, 0.493585, 0.083264, 0.140818, 0.622492, 0.272063, 0.649581, 0.00012306, 0.628089, 0.773104, 0.523974, 0.681866, 0.426446, 0.808735, 0.896539, 0.682992, 0.83439, 0.86476, 0.0630909},
{0.21163, 0.806022, 0.589805, 0.270091, 0.21642, 0.0940909, 0.126636, 0.91048, 0.661367, 0.0353349, 0.334493, 0.0222729, 0.230077, 0.0231873, 0.855745, 0.059684, 0.29467, 0.736948, 0.583632, 0.613474, 0.39972, 0.105487, 0.457679, 0.441246, 0.786988, 0.650344, 0.437347, 0.957052, 0.518094, 0.277876, 0.40148, 0.691181, 0.818127, 0.190276, 0.530554, 0.659621, 0.740299, 0.371677, 0.805895, 0.283888, 0.452471, 0.636638, 0.486938, 0.80864, 0.669573, 0.263019, 0.426052, 0.152498, 0.765935, 0.852214, 0.433894, 0.277446, 0.414063, 0.592315, 0.940079, 0.394884, 0.815248, 0.965279, 0.599453, 0.599152, 0.0672083, 0.163218, 0.57757, 0.0984728, 0.0109542, 0.323582, 0.271755, 0.855033, 0.576617, 0.858474, 0.951462, 0.269221, 0.477774, 0.908715, 0.779056, 0.502055, 0.580933, 0.0966058, 0.873209, 0.300846, 0.268243, 0.47178, 0.955523, 0.506105, 0.421707, 0.895893, 0.59172, 0.0816197, 0.371926, 0.476259, 0.217349, 0.921526, 0.135224, 0.535388, 0.99528, 0.752698, 0.863891, 0.334568, 0.608809, 0.0626288, 0.063368, 0.751314, 0.401695, 0.421053, 0.1915, 0.906446, 0.742077, 0.448317, 0.484745, 0.620429, 0.320483, 0.0779274, 0.559094, 0.836194, 0.213956, 0.503242, 0.704589, 0.129258, 0.157102, 0.929114, 0.511675, 0.840883, 0.832637, 0.232956, 0.729716, 0.916285, 0.27737, 0.487401, 0.446336, 0.666327, 0.288923, 0.330907, 0.837166, 0.660286, 0.70455, 0.256266, 0.497161, 0.59361, 0.038965, 0.636084, 0.369916, 0.0548056, 0.746792, 0.174866, 0.237719, 0.0495643, 0.926311, 0.00528952, 0.399462, 0.0588572, 0.0186523, 0.304009, 0.931495, 0.220399, 0.559378, 0.984212, 0.546484, 0.842114, 0.414432, 0.680341, 0.0581691, 0.14769, 0.548846, 0.609411, 0.651072, 0.436689, 0.839289, 0.92366, 0.519938, 0.869837, 0.399354, 0.677772, 0.952362, 0.945803, 0.343789, 0.295588, 0.642946, 0.110951, 0.420059, 0.371084, 0.881454, 0.598268, 0.557974, 0.292503, 0.182352, 0.73168, 0.63131, 0.925135, 0.910556, 0.0967925, 0.673501, 0.136147, 0.160006, 0.95054, 0.317662, 0.784976, 0.656021, 0.297116, 0.3264, 0.314379},
{0.000515503, 0.751424, 0.84732, 0.42418, 0.765632, 0.603679, 0.571768, 0.579465, 0.479994, 0.486463, 0.648603, 0.532808, 0.619462, 0.599635, 0.537446, 0.940644, 0.102825, 0.478029, 0.866759, 0.939036, 0.598624, 0.597486, 0.849396, 0.665013, 0.592995, 0.283915, 0.946303, 0.172391, 0.435725, 0.190013, 0.0750089, 0.683216, 0.382671, 0.131826, 0.624641, 0.843577, 0.897476, 0.846542, 0.148775, 0.860502, 0.672127, 0.672093, 0.614048, 0.0743584, 0.914925, 0.0384677, 0.183081, 0.58541, 0.259768, 0.749802, 0.361722, 0.188457, 0.305528, 0.406621, 0.104618, 0.756296, 0.956339, 0.626124, 0.845138, 0.0879646, 0.0201789, 0.520466, 0.480329, 0.347569, 0.249281, 0.366129, 0.404788, 0.496537, 0.0614301, 0.607361, 0.900278, 0.357798, 0.199594, 0.829525, 0.161595, 0.362896, 0.0842501, 0.0398118, 0.85899, 0.957079, 0.924189, 0.205136, 0.105971, 0.0341297, 0.947801, 0.853869, 0.113834, 0.364604, 0.646687, 0.888381, 0.986283, 0.299505, 0.461249, 0.588281, 0.999465, 0.767168, 0.428668, 0.400491, 0.892099, 0.16501, 0.564188, 0.174423, 0.802615, 0.303739, 0.752416, 0.944883, 0.769417, 0.83645, 0.803248, 0.644761, 0.362997, 0.399644, 0.484901, 0.519895, 0.116384, 0.0613464, 0.207517, 0.00446175, 0.170701, 0.774051, 0.447125, 0.183923, 0.537859, 0.304331, 0.800187, 0.274818, 0.920578, 0.628692, 0.327631, 0.912461, 0.288438, 0.828442, 0.0532731, 0.0905873, 0.595373, 0.449891, 0.451344, 0.714028, 0.782392, 0.216957, 0.497543, 0.665133, 0.669116, 0.175851, 0.178949, 0.45892, 0.580993, 0.820437, 0.965772, 0.235394, 0.672738, 0.444972, 0.191707, 0.725076, 0.022595, 0.0808699, 0.0399113, 0.476656, 0.319414, 0.397548, 0.293059, 0.688687, 0.910059, 0.734351, 0.903105, 0.300027, 0.80454, 0.457707, 0.520909, 0.371059, 0.376173, 0.224909, 0.542353, 0.219776, 0.509995, 0.463623, 0.538514, 0.806999, 0.0398614, 0.627776, 0.0802407, 0.960218, 0.761896, 0.39288, 0.00819994, 0.675373, 0.905892, 0.241128, 0.625909, 0.0794204, 0.558374, 0.187413, 0.966684, 0.866037, 0.386362, 0.81465, 0.227945, 0.914793, 0.706308, 0.00270122},
{0.0350509, 0.439838, 0.784203, 0.427661, 0.467103, 0.615901, 0.696524, 0.494058, 0.068198, 0.847795, 0.121438, 0.571168, 0.960328, 0.3216, 0.90024, 0.39334, 0.469925, 0.789771, 0.722456, 0.668305, 0.121996, 0.845173, 0.264941, 0.947663, 0.883223, 0.246139, 0.543232, 0.363125, 0.784617, 0.164539, 0.00256602, 0.583154, 0.768563, 0.284346, 0.396567, 0.408611, 0.840438, 0.679495, 0.0297498, 0.467201, 0.110871, 0.402001, 0.152909, 0.320572, 0.653576, 0.344058, 0.658692, 0.759385, 0.892963, 0.324196, 0.391299, 0.126356, 0.536955, 0.0419918, 0.417397, 0.222563, 0.0830287, 0.560768, 0.119857, 0.503394, 0.865729, 0.897804, 0.70144, 0.244528, 0.71064, 0.875968, 0.355885, 0.559737, 0.577382, 0.491015, 0.642313, 0.529857, 0.433968, 0.924118, 0.99395, 0.920428, 0.462594, 0.915972, 0.951587, 0.559169, 0.0994575, 0.312006, 0.407965, 0.769867, 0.520544, 0.207479, 0.45064, 0.861812, 0.619525, 0.0663864, 0.121377, 0.262307, 0.745125, 0.880794, 0.780026, 0.838963, 0.116226, 0.343849, 0.861623, 0.221134, 0.452702, 0.977048, 0.465722, 0.312537, 0.90671, 0.548859, 0.346505, 0.453245, 0.388793, 0.397007, 0.171697, 0.723864, 0.00974689, 0.00852572, 0.258221, 0.858253, 0.379899, 0.944245, 0.747785, 0.643199, 0.358279, 0.1062, 0.242778, 0.712864, 0.0934878, 0.79654, 0.11639, 0.506609, 0.685096, 0.276961, 0.195284, 0.722553, 0.0920112, 0.348445, 0.783525, 0.642156, 0.397433, 0.509208, 0.523656, 0.960301, 0.972903, 0.96588, 0.225992, 0.609006, 0.377319, 0.711238, 0.251158, 0.387928, 0.225627, 0.376165, 0.1737, 0.201259, 0.881449, 0.825098, 0.797929, 0.416778, 0.86248, 0.938518, 0.349054, 0.128517, 0.17668, 0.362116, 0.151107, 0.188275, 0.0367644, 0.00853721, 0.103429, 0.610163, 0.799263, 0.0612961, 0.773939, 0.457125, 0.732386, 0.190168, 0.855721, 0.247204, 0.877424, 0.939625, 0.866168, 0.784025, 0.21907, 0.227901, 0.116251, 0.655251, 0.320912, 0.00865802, 0.257975, 0.774564, 0.196555, 0.0852306, 0.215909, 0.222618, 0.803447, 0.577662, 0.200912, 0.231966, 0.167835, 0.952501, 0.338097, 0.485891},
};

static const std::vector<float> costs = {274.913, 927.623, 109.574, 361.125, 57.3893, 908.856, 945.124, 49.4031, 730.49, 655.176, 390.288, 707.294, 300.366, 443.473, 109.592, 385.482, 263.048, 347.584, 153.039, 46.2911, 122.237, 272.316, 844.178, 840.341, 412.789, 898.482, 788.837, 247.512, 233.357, 9.94539, 178.206, 328.031, 702.866, 776.662, 715.633, 552.459, 5.71799, 165.802, 163.496, 94.7416, 674.592, 414.832, 641.426, 663.2, 24.2627, 876.961, 638.457, 933.545, 245.995, 551.684, 811.066, 53.328, 476.314, 708.294, 251.206, 898.12, 827.764, 623.769, 508.791, 601.226, 506.659, 875.274, 873.935, 176.682, 786.967, 4.11437, 453.921, 216.335, 143.993, 408.954, 475.379, 481.215, 869.731, 529.478, 474.968, 246.322, 975.664, 923.982, 789.087, 873.036, 795.69, 937.456, 790.57, 63.4783, 636.698, 597.262, 587.276, 676.766, 14.9142, 788.983, 38.3942, 705.05, 87.2936, 19.7961, 944.373, 197.377, 849.876, 66.4653, 249.129, 38.5581, 360.972, 690.787, 618.183, 187.176, 737.214, 354.102, 435.628, 206.761, 896.981, 95.0964, 302.501, 412.16, 672.011, 400.182, 719.016, 79.9813, 342.819, 410.261, 136.262, 265.716, 402.283, 248.563, 271.415, 534.325, 521.949, 74.4418, 675.676, 63.7547, 612.924, 762.599, 861.187, 62.9878, 311.754, 533.52, 362.89, 458.791, 940.598, 958.02, 499.605, 96.9651, 568.208, 352.953, 776.494, 975.956, 701.467, 673.693, 976.605, 736.267, 873.978, 896.396, 853.971, 769.75, 441.003, 46.5243, 186.978, 422.526, 925.069, 75.6721, 290.084, 944.64, 350.082, 325.958, 549.032, 413.266, 779.842, 472.911, 769.404, 841.759, 196.822, 348.833, 334.442, 66.0844, 289.362, 566.376, 910.595, 913.132, 438.311, 549.671, 595.64, 620.811, 119.259, 957.209, 280.781, 940.917, 520.911, 362.891, 979.342, 875.536, 168.448, 49.5662, 865.713, 480.158, 547.182, 467.189, 102.583, 285.112, 42.661, 235.09, 362.912, 274.528};

static const std::vector<float> min_impressions = {0.641263, 0.0718963, 0.0930863, 0.813619, 0.0540007};

//
#endif
