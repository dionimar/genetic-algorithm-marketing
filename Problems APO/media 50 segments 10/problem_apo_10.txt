#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{5.62308,5.92076,6.47266,8.9444,9.32237,9.35639,1.12807,1.7907,5.49864,7.36302},
{7.40402,9.54198,8.66831,1.86966,2.5544,4.92915,3.36308,4.46366,2.93879,3.71981},
{2.24516,7.42779,9.92102,3.29832,2.82358,4.57061,4.00258,8.47672,2.61723,1.54616},
{6.35093,7.41899,3.56696,2.95335,2.01123,4.64537,2.05277,3.04409,7.35095,2.20635},
{1.96916,5.32984,6.68092,8.14724,2.99334,2.65657,8.17074,8.32027,2.85737,4.13891},
{5.02925,1.42421,3.07172,1.11855,6.03768,4.96172,3.14947,4.86388,4.77642,3.91257},
{1.64682,7.83364,4.93816,5.62724,2.14153,5.29967,3.31167,4.73935,8.1351,9.29368},
{5.80642,1.76747,7.43009,5.24345,6.37399,2.36781,1.31545,4.37896,2.92553,8.03536},
{5.14713,2.01678,6.79626,7.53243,5.13198,7.43678,2.68092,1.52462,7.38769,7.5749},
{8.78842,4.04485,7.81307,1.91422,4.23852,3.09886,3.498,4.22157,8.07268,1.26648},
{6.83325,2.34846,9.07101,4.35212,4.03588,6.56102,4.28469,7.12422,6.73939,4.59461},
{7.98787,8.05395,7.47977,4.53683,1.02407,4.9455,8.37383,8.39673,1.69025,7.89441},
{1.2017,3.21295,2.65117,5.00029,5.66714,9.71426,6.94898,5.11637,8.26404,1.27402},
{9.97377,5.38261,5.08299,8.74854,2.59643,5.90849,7.28577,1.02628,9.03179,6.38298},
{5.47526,9.64861,4.71227,3.862,8.41173,9.95765,5.14049,1.52724,3.31661,1.4002},
{8.04025,7.80667,4.13489,6.44498,7.25215,8.86656,5.23879,5.13463,4.03881,4.73435},
{3.49206,1.20808,2.11115,3.05585,8.81078,4.51577,4.56263,8.39324,2.70554,5.24084},
{3.88094,1.61408,6.34833,6.37174,8.78653,2.11998,5.06939,2.32987,6.8763,9.1133},
{4.41217,9.63142,1.05897,6.84678,9.09637,2.66758,4.42404,6.77849,3.82078,1.88695},
{2.63932,6.72334,1.64355,1.49133,6.80358,5.88875,8.53793,2.60781,3.47076,5.25038},
{3.72647,9.34168,2.87047,5.82657,3.56275,4.04928,2.24689,1.83306,2.97779,2.78928},
{4.86118,6.25188,1.3757,3.36167,9.46628,7.53002,8.00558,4.01588,8.63672,4.70848},
{9.90548,7.18454,5.19416,5.77293,2.71832,9.21653,8.615,1.7355,8.21773,1.65832},
{2.02456,8.72113,2.01295,7.34996,7.45664,7.64149,4.15349,3.60836,6.86344,8.73109},
{1.05827,7.00128,9.70516,4.24673,7.53847,6.79261,3.36833,9.47669,4.75382,4.1713},
{9.23203,9.37519,6.66057,8.86341,5.50453,1.7443,2.32617,6.16761,9.3851,2.31835},
{5.34746,3.51448,5.56321,8.55281,7.50733,6.01924,5.86684,4.22387,5.66285,7.85859},
{4.80358,2.00655,1.72761,9.20981,3.01525,4.30361,7.62771,6.23787,5.29343,3.75846},
{7.56702,6.0544,2.7618,8.47527,7.2066,6.56274,8.41285,2.66623,9.42252,6.62879},
{2.70853,9.73095,9.88254,1.9895,5.0062,8.0111,2.2364,1.95605,4.893,8.17457},
{5.77535,9.51678,9.77,4.43126,8.21186,8.85471,8.5004,5.0707,6.86603,1.91826},
{5.89409,3.78304,8.72226,1.49336,5.95207,3.82874,5.49991,4.6709,7.70671,8.36851},
{2.0597,1.5021,1.36475,2.8304,9.52115,7.0846,2.35803,3.26391,6.02628,4.65891},
{6.38077,7.74734,6.50289,9.21922,4.18337,5.93285,3.32353,4.32425,5.23541,4.96883},
{5.61039,8.78168,9.82686,8.8888,4.02667,5.25736,2.75773,4.21946,4.9196,1.31933},
{9.92277,6.98083,7.49105,6.93105,1.64069,7.52284,8.80508,5.16924,8.47293,7.55631},
{3.52034,6.12211,8.24402,4.42517,5.24216,8.94273,4.47151,2.779,6.12229,4.61209},
{7.39005,4.08159,2.59368,2.95384,2.95131,7.87709,2.10287,4.63074,4.70645,3.6328},
{7.87698,7.65594,7.07941,6.79949,8.04064,9.34154,7.54303,5.38841,2.92067,5.84483},
{1.76075,7.9605,9.03685,9.6979,7.94757,8.48085,7.32327,3.35615,2.63805,4.36832},
{4.16387,7.99969,7.49221,6.30748,5.60606,2.01905,5.51836,5.84547,1.32026,5.61584},
{3.76086,7.45102,5.73109,2.06597,2.49565,4.7772,9.95225,3.84917,2.53426,2.30389},
{6.86317,4.8665,9.1626,7.56713,2.51407,7.12934,2.80649,1.08438,4.18162,9.35334},
{1.98461,5.96194,4.50513,1.97219,1.15336,9.93948,9.02356,5.72085,7.29874,1.70721},
{7.95912,1.29945,5.20358,1.04878,3.37784,1.55369,5.43134,8.0121,6.29637,3.12626},
{9.74489,3.19669,3.94198,2.75151,2.02778,9.2067,3.79409,6.52866,5.86432,5.82121},
{4.64678,1.93549,7.35721,1.9623,1.33057,3.03977,2.60164,4.36639,8.2556,9.39689},
{3.79407,6.34878,9.44286,7.32117,7.28552,7.93528,8.14094,7.27234,4.57507,8.0728},
{9.06612,5.95995,8.28716,5.65399,8.28755,3.59445,8.45568,6.10469,3.77827,2.6286},
{1.28859,4.91633,5.18264,9.78465,6.5461,1.99474,7.77305,5.10225,6.54667,4.44052}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {520.538,21.9274,958.609,453.148,946.236,720.138,536.372,558.482,100.004,825.668,828.386,522.536,771.847,613.421,424.099,894.646,594.065,90.2192,203.946,114.978,19.627,925.458,172.166,647.119,674.215,643.973,736.591,776.754,385.089,694.601,643.989,871.58,508.944,479.638,10.5124,193.144,804.082,186.903,778.113,443.044,495.734,440.092,758.087,389.775,190.31,211.847,548.261,212.503,932.091,690.479};


static const std::vector<float> min_impressions = {40.689,31.7386,47.0348,42.5408,23.2118,34.7191,26.0003,42.339,40.2129,40.4837};


#endif
