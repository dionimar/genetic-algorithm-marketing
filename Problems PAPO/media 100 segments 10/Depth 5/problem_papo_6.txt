#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(events[18], events[85]),events[17]),events[52]),events[58]),events[0]),cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(events[90], events[27]),events[96]),events[33]),events[50]),events[64]),cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(events[54], events[26]),events[14]),events[22]),events[80]),events[52]),cons_excl(cons_excl(cons_incl(cons_excl(cons_incl(events[16], events[9]),events[92]),events[17]),events[39]),events[24]),cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(events[32], events[62]),events[72]),events[11]),events[43]),events[47]),cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(events[75], events[69]),events[74]),events[67]),events[39]),events[87]),cons_incl(cons_excl(cons_excl(cons_excl(cons_indep(events[31], events[67]),events[89]),events[54]),events[88]),events[78]),cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(events[79], events[19]),events[66]),events[89]),events[61]),events[80]),cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(events[78], events[67]),events[38]),events[16]),events[62]),events[74]),cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(events[39], events[84]),events[1]),events[81]),events[38]),events[17])};


static const std::vector< std::vector<float> > prob = {{0.364538, 0.460556, 0.394962, 0.541664, 0.879254, 0.933858, 0.714664, 0.207701, 0.233127, 0.507011, 0.971751, 0.0815041, 0.813152, 0.121544, 0.864549, 0.680424, 0.409377, 2.41718e05, 0.471323, 0.460126, 0.46508, 0.61777, 0.531204, 0.273873, 0.505302, 0.181422, 0.997491, 0.923335, 0.717341, 0.749836, 0.535561, 0.13214, 0.281374, 0.328981, 0.156138, 0.163015, 0.125081, 0.102197, 0.757513, 0.737676, 0.33042, 0.663266, 0.0425466, 0.916018, 0.898127, 0.443065, 0.851839, 0.516918, 0.0492366, 0.823747, 0.343326, 0.100214, 0.50904, 0.406155, 0.749513, 0.59525, 0.152935, 0.325049, 0.872906, 0.0249749, 0.696654, 0.372564, 0.481844, 0.753657, 0.556956, 0.617839, 0.587937, 0.699457, 0.395152, 0.520676, 0.528753, 0.603927, 0.54111, 0.456201, 0.0822228, 0.263318, 0.38554, 0.0216086, 0.57972, 0.472291, 0.909943, 0.384445, 0.248908, 0.927855, 0.484874, 0.683883, 0.881373, 0.558537, 0.384338, 0.375828, 0.798108, 0.113127, 0.746372, 0.521965, 0.039399, 0.137666, 0.798011, 0.977293, 0.296714, 0.995693},
{0.418811, 0.579537, 0.541202, 0.390836, 0.833688, 0.331651, 0.470472, 0.158243, 0.888364, 0.402831, 0.939038, 0.948876, 0.627397, 0.93105, 0.739817, 0.385964, 0.804328, 0.91262, 0.551231, 0.0387942, 0.47616, 0.152089, 0.502397, 0.875283, 0.380938, 0.944109, 0.395098, 0.623191, 0.529057, 0.0743631, 0.0964128, 0.802504, 0.685038, 0.0325116, 0.0391977, 0.453229, 0.287019, 0.845696, 0.736002, 0.268466, 0.032632, 0.60477, 0.622613, 0.694342, 0.337815, 0.500281, 0.182768, 0.966253, 0.95087, 0.654013, 0.210483, 0.315346, 0.970586, 0.536834, 0.581484, 0.511775, 0.0715158, 0.283206, 0.162172, 0.187628, 0.731234, 0.067259, 0.893819, 0.2248, 0.928853, 0.653516, 0.519252, 0.162366, 0.407614, 0.260437, 0.815082, 0.704723, 0.858158, 0.430621, 0.606455, 0.56921, 0.188616, 0.869288, 0.928265, 0.529474, 0.889824, 0.580459, 0.984427, 0.743594, 0.537024, 0.731168, 0.458077, 0.515289, 0.763952, 0.878374, 0.0327691, 0.837574, 0.473966, 0.0519381, 0.727668, 0.666915, 0.482094, 0.0268054, 0.269163, 0.158927},
{0.197787, 0.259946, 0.728257, 0.275707, 0.315761, 0.714427, 0.243796, 0.262374, 0.819819, 0.577185, 0.042721, 0.125246, 0.805885, 0.698339, 0.779164, 0.533607, 0.577755, 0.192104, 0.285781, 0.739392, 0.588589, 0.793323, 0.149208, 0.0873749, 0.583444, 0.842062, 0.779344, 0.806524, 0.406705, 0.294686, 0.871942, 0.87573, 0.116315, 0.421791, 0.470431, 0.362979, 0.725564, 0.646231, 0.975269, 0.557414, 0.595335, 0.368955, 0.577392, 0.512169, 0.816617, 0.18063, 0.228892, 0.753747, 0.13914, 0.414729, 0.237036, 0.763302, 0.888252, 0.249501, 0.671505, 0.947798, 0.846685, 0.423864, 0.584719, 0.394762, 0.335764, 0.319552, 0.574968, 0.574892, 0.131214, 0.0285271, 0.416569, 0.297556, 0.855628, 0.957051, 0.213427, 0.662548, 0.280534, 0.450817, 0.743366, 0.641373, 0.858139, 0.440704, 0.118676, 0.487273, 0.466768, 0.510213, 0.627234, 0.167499, 0.740046, 0.667133, 0.255103, 0.187327, 0.178683, 0.499476, 0.690051, 0.632365, 0.522898, 0.352026, 0.585394, 0.283361, 0.573744, 0.595497, 0.404579, 0.704823},
{0.769688, 0.735537, 0.404208, 0.215167, 0.426977, 0.949548, 0.941699, 0.409334, 0.867376, 0.191472, 0.590113, 0.757152, 0.20846, 0.780401, 0.471631, 0.645987, 0.0764462, 0.852942, 0.398977, 0.0805943, 0.856529, 0.42134, 0.417636, 0.248268, 0.998605, 0.672456, 0.963906, 0.0690287, 0.19505, 0.00960884, 0.959261, 0.291553, 0.724236, 0.201772, 0.140377, 0.645347, 0.225101, 0.629383, 0.7718, 0.174594, 0.753564, 0.712223, 0.310107, 0.941555, 0.958516, 0.463214, 0.809031, 0.135314, 0.208858, 0.937226, 0.29249, 0.396599, 0.70884, 0.499984, 0.105948, 0.0714023, 0.411154, 0.633951, 0.506002, 0.820794, 0.94478, 0.0115693, 0.154686, 0.0820329, 0.1622, 0.585218, 0.00541989, 0.297799, 0.362729, 0.783141, 0.793139, 0.911143, 0.00215341, 0.735066, 0.365717, 0.979143, 0.176174, 0.497481, 0.890245, 0.220014, 0.897561, 0.871787, 0.81463, 0.830322, 0.315443, 0.425645, 0.62673, 0.626809, 0.881445, 0.547639, 0.645027, 0.898532, 0.294002, 0.971728, 0.917324, 0.461006, 0.0555975, 0.475969, 0.18009, 0.984751},
{0.0693237, 0.775876, 0.604716, 0.693038, 0.551302, 0.770865, 0.735182, 0.851542, 0.952203, 0.238537, 0.511717, 0.61681, 0.860518, 0.372697, 0.593051, 0.172836, 0.373939, 0.417571, 0.631577, 0.447901, 0.114143, 0.0731853, 0.910812, 0.865724, 0.385884, 0.136243, 0.877968, 0.221713, 0.363019, 0.963375, 0.714714, 0.908125, 0.862153, 0.494533, 0.264941, 0.499149, 0.435208, 0.490391, 0.832688, 0.720629, 0.980714, 0.391986, 0.374273, 0.0375895, 0.512701, 0.963196, 0.85836, 0.645926, 0.561833, 0.0257747, 0.946183, 0.982167, 0.730351, 0.557407, 0.392549, 0.810058, 0.828987, 0.556199, 0.371667, 0.76472, 0.879597, 0.714009, 0.834302, 0.635896, 0.34437, 0.393769, 0.683844, 0.189052, 0.568683, 0.914258, 0.991988, 0.703026, 0.277101, 0.91701, 0.219099, 0.458156, 0.0864719, 0.944903, 0.0893136, 0.92403, 0.597017, 0.461796, 0.140468, 0.896044, 0.916101, 0.0301866, 0.56445, 0.32297, 0.758077, 0.18724, 0.934066, 0.98517, 0.947662, 0.454087, 0.310142, 0.751301, 0.9931, 0.855605, 0.0657429, 0.799833},
{0.155601, 0.747297, 0.168609, 0.394281, 0.503457, 0.251482, 0.913874, 0.788734, 0.345252, 0.284414, 0.674495, 0.349558, 0.695907, 0.850251, 0.985977, 0.464171, 0.210429, 0.164642, 0.686562, 0.999885, 0.447945, 0.416903, 0.733699, 0.971581, 0.589988, 0.249619, 0.570143, 0.663646, 0.149283, 0.180528, 0.561607, 0.793569, 0.0857533, 0.508476, 0.276788, 0.905733, 0.718278, 0.816349, 0.040477, 0.636475, 0.423007, 0.901358, 0.294146, 0.743277, 0.0360637, 0.349288, 0.521414, 0.766171, 0.549943, 0.942196, 0.412159, 0.507157, 0.615364, 0.432341, 0.314051, 0.142763, 0.285722, 0.299804, 0.636219, 0.184099, 0.00671299, 0.25606, 0.802851, 0.00132426, 0.837813, 0.508077, 0.795088, 0.0636663, 0.11071, 0.530177, 0.435048, 0.814269, 0.0877829, 0.489956, 0.102981, 0.321119, 0.225374, 0.85054, 0.858452, 0.373791, 0.836801, 0.833477, 0.286188, 0.865559, 0.797332, 0.707774, 0.226421, 0.540794, 0.554342, 0.770102, 0.409668, 0.0184731, 0.749679, 0.517061, 0.856271, 0.458528, 0.56118, 0.72711, 0.831338, 0.81134},
{0.154179, 0.758316, 0.478753, 0.545953, 0.155322, 0.298965, 0.490364, 0.266398, 0.749906, 0.137384, 0.92897, 0.671874, 0.32625, 0.8954, 0.658906, 0.739924, 0.579068, 0.632655, 0.669698, 0.855345, 0.964404, 0.624859, 0.16121, 0.799084, 0.608617, 0.736343, 0.219025, 0.249955, 0.902363, 0.693992, 0.917611, 0.219667, 0.0435609, 0.556383, 0.830774, 0.414368, 0.520177, 0.129259, 0.184541, 0.116583, 0.0779186, 0.850076, 0.136532, 0.323073, 0.895929, 0.541405, 0.911067, 0.0360698, 0.148459, 0.550076, 0.936477, 0.0214407, 0.000798277, 0.102375, 0.987766, 0.411638, 0.280531, 0.619105, 0.623108, 0.622772, 0.436886, 0.151157, 0.897536, 0.653198, 0.801166, 0.855386, 0.588726, 0.604155, 0.655449, 0.585018, 0.916755, 0.778938, 0.224763, 0.686958, 0.310103, 0.0666341, 0.441465, 0.105853, 0.965652, 0.615856, 0.0617795, 0.214347, 0.812325, 0.615704, 0.727693, 0.416416, 0.170783, 0.00505933, 0.246872, 0.00242099, 0.900341, 0.346118, 0.735217, 0.93869, 0.457585, 0.76834, 0.747551, 0.599412, 0.467245, 0.943887},
{0.427975, 0.719992, 0.644288, 0.653667, 0.592042, 0.611816, 0.362666, 0.657283, 0.101516, 0.450913, 0.262814, 0.890143, 0.546695, 0.188309, 0.588062, 0.427199, 0.594405, 0.647502, 0.958278, 0.783905, 0.746495, 0.473266, 0.0777312, 0.325485, 0.141398, 0.594897, 0.89965, 0.483021, 0.387561, 0.0613979, 0.386997, 0.134259, 0.535701, 0.796893, 0.643723, 0.855909, 0.435407, 0.757391, 0.974287, 0.63779, 0.91015, 0.529095, 0.756313, 0.692992, 0.817483, 0.955025, 0.648256, 0.63463, 0.149779, 0.727562, 0.621507, 0.384301, 0.692676, 0.967762, 0.332367, 0.524971, 0.328684, 0.884045, 0.525005, 0.35224, 0.893137, 0.0705555, 0.804707, 0.301733, 0.329579, 0.688014, 0.771168, 0.585294, 0.150147, 0.826848, 0.606737, 0.926359, 0.732748, 0.192578, 0.517797, 0.35284, 0.963685, 0.400277, 0.576625, 0.919008, 0.0405413, 0.387033, 0.795634, 0.787395, 0.519678, 0.92187, 0.99306, 0.411429, 0.141552, 0.593133, 0.303695, 0.660521, 0.317349, 0.75758, 0.0372438, 0.938692, 0.726832, 0.526074, 0.0470608, 0.131885},
{0.620188, 0.185761, 0.209929, 0.590609, 0.273616, 0.0695326, 0.18623, 0.609598, 0.990654, 0.51859, 0.908518, 0.0965246, 0.671775, 0.837473, 0.610683, 0.507841, 0.36711, 0.295357, 0.648673, 0.390868, 0.165165, 0.662998, 0.440777, 0.121929, 0.80737, 0.944027, 0.700325, 0.706499, 0.891408, 0.378979, 0.0513005, 0.766288, 0.087393, 0.0746412, 0.444854, 0.886794, 0.321721, 0.613711, 0.329317, 0.868639, 0.676626, 0.504157, 0.935536, 0.713321, 0.845294, 0.0362744, 0.432002, 0.302981, 0.260288, 0.523891, 0.906628, 0.0608489, 0.409252, 0.806085, 0.78383, 0.240118, 0.662276, 0.543912, 0.467026, 0.770632, 0.315044, 0.409363, 0.553216, 0.736816, 0.846227, 0.0423923, 0.302497, 0.782856, 0.273392, 0.736601, 0.925991, 0.958221, 0.0464714, 0.10703, 0.941956, 0.76296, 0.98509, 0.862836, 0.815017, 0.224847, 0.566669, 0.286069, 0.226926, 0.890073, 0.0860727, 0.624596, 0.222824, 0.0653623, 0.862049, 0.89582, 0.737011, 0.354863, 0.457014, 0.774586, 0.355838, 0.28795, 0.032764, 0.488328, 0.543985, 0.761159},
{0.0217821, 0.415105, 0.228684, 0.305814, 0.90389, 0.982214, 0.484151, 0.785874, 0.566938, 0.978787, 0.707462, 0.989701, 0.724691, 0.335879, 0.175024, 0.974096, 0.868187, 0.94318, 0.335624, 0.449889, 0.952784, 0.464648, 0.799743, 0.777439, 0.0286628, 0.0206976, 0.496752, 0.109657, 0.151759, 0.393157, 0.161028, 0.671495, 0.544482, 0.0991185, 0.830877, 0.0451444, 0.0719426, 0.353579, 0.920607, 0.0817669, 0.720363, 0.445699, 0.265778, 0.213248, 0.545048, 0.946425, 0.94093, 0.270288, 0.442625, 0.833358, 0.116312, 0.0801129, 0.673474, 0.754768, 0.188314, 0.685501, 0.114011, 0.213072, 0.268288, 0.403897, 0.260007, 0.636257, 0.541649, 0.00850244, 0.953954, 0.133743, 0.130226, 0.617783, 0.0830319, 0.251461, 0.422066, 0.433213, 0.337088, 0.0794616, 0.679933, 0.14526, 0.340338, 0.953659, 0.868075, 0.395665, 0.370939, 0.690294, 0.272033, 0.174919, 0.00964939, 0.0538675, 0.702489, 0.255829, 0.937427, 0.581982, 0.510277, 0.251864, 0.649591, 0.076666, 0.408495, 0.423425, 0.379749, 0.774082, 0.0336226, 0.995821},
};

static const std::vector<float> costs = {506.893, 479.148, 352.662, 465.059, 69.597, 10.5488, 658.552, 675.03, 281.834, 750.323, 536.716, 148.138, 175.707, 286.766, 121.391, 404.598, 106.067, 749.659, 666.531, 124.361, 342.289, 792.795, 984.416, 431.631, 210.036, 624.911, 887.913, 441.576, 177.703, 157.324, 717.222, 402.808, 198.783, 556.73, 765.405, 619.793, 804.952, 748.59, 903.263, 253.031, 75.3195, 432.696, 841.592, 79.9977, 519.279, 828.5, 624.116, 847.584, 399.318, 619.598, 41.1973, 93.1537, 357.061, 908.465, 888.278, 514.814, 258.227, 2.96288, 24.5147, 4.59295, 692.202, 106.181, 334.775, 464.277, 103.382, 881.043, 834.719, 162.596, 265.592, 431.807, 89.3715, 709.708, 588.922, 120.122, 473.794, 417.265, 195.603, 883.128, 258.821, 695.436, 257.122, 537.808, 367.775, 210.832, 195.558, 969.85, 107.607, 604.953, 682.87, 206.672, 395.88, 570.624, 709.492, 386.839, 658.931, 767.73, 131.239, 820.574, 715.197, 973.717};

static const std::vector<float> min_impressions = {0.971887, 0.737865, 0.443714, 0.971676, 0.808021, 0.938226, 0.935952, 0.611151, 0.923012, 0.167811};

//
#endif
