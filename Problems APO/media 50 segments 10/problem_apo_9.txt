#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{9.73416,9.44668,8.50659,3.19215,7.85403,4.25848,5.52105,5.51861,3.59942,1.60622},
{3.86895,3.70496,3.14562,1.85403,2.11303,7.968,8.50561,9.29386,1.07169,1.44936},
{9.39403,6.74934,8.57481,5.5947,5.01084,1.9424,5.89449,9.91344,5.65772,3.70878},
{6.96304,1.02313,1.39646,9.96558,1.30388,6.4442,4.55678,9.16401,6.83439,8.40483},
{3.54722,2.42815,4.58602,9.74641,7.86264,5.92856,8.64312,2.34464,4.9753,6.72295},
{2.68099,1.28388,3.94305,3.26296,9.07348,2.47627,3.62107,9.38268,1.94087,9.90819},
{8.2061,2.84663,9.48396,6.58856,5.94991,3.3011,2.67005,1.4454,6.97101,8.72742},
{8.36308,2.18418,7.97828,5.28885,6.77341,7.00309,4.98503,7.22978,4.75421,2.86676},
{2.07696,9.47687,8.17153,3.52224,9.24719,5.45998,7.72313,5.47396,6.17924,8.08045},
{3.33296,3.00611,6.7764,3.66246,6.2355,4.03792,8.08771,6.81576,9.98771,5.35075},
{7.92504,5.59459,8.38253,2.67769,5.95046,6.67115,2.50896,9.07393,1.72789,2.60642},
{4.91739,4.5147,9.62157,5.57764,2.58126,6.88664,7.40468,9.77929,2.98548,7.11966},
{4.93779,3.25625,9.14703,6.42616,8.74009,8.53257,3.95739,4.53131,7.40242,9.04898},
{4.83294,5.25659,9.6694,6.96124,2.19334,1.08189,2.36834,8.32058,2.25457,5.3663},
{7.63715,8.48407,6.13536,4.03977,4.55604,3.92604,8.04515,1.90594,5.42593,9.52165},
{3.01579,8.62301,6.26459,4.73745,6.571,7.97499,5.662,1.16971,5.39887,2.81643},
{4.73342,5.53632,1.96585,8.1203,7.65278,9.07874,2.60973,6.74392,3.28165,3.95963},
{4.60079,7.939,3.98139,6.4554,9.48373,6.21688,2.0527,8.71974,4.27797,8.60394},
{5.8278,6.80393,1.6925,8.49878,3.33013,6.81208,5.7743,4.09826,1.77152,5.59655},
{9.81387,4.32954,5.0179,7.37018,6.09968,9.79279,9.77161,5.5054,5.43187,7.06041},
{7.66699,5.41269,7.7296,7.67694,4.45611,6.55151,6.35978,1.28098,1.87184,5.61499},
{5.65946,9.065,5.61748,2.37134,2.98857,9.84164,4.91846,3.78286,7.75592,5.22556},
{4.09573,6.64985,9.6815,3.1269,7.99108,1.26883,6.831,9.70721,7.1829,5.67725},
{9.29354,5.07039,9.27997,8.49887,6.12947,7.82448,5.51401,9.52878,3.18453,3.53588},
{3.82698,8.85868,2.41011,5.55871,4.48327,4.73158,7.89228,6.46377,2.40562,3.16783},
{7.35924,6.86181,7.96251,2.11941,2.4609,8.83089,7.27591,7.29447,5.45492,4.70874},
{7.57284,6.86536,8.37964,4.49979,9.54132,9.96273,3.76456,1.29094,6.20646,4.46412},
{6.75448,2.23925,1.99076,9.01246,4.86249,5.67706,9.73371,5.48082,4.3719,3.03447},
{9.96002,8.29673,5.70837,4.44312,3.70833,4.52569,8.81661,6.37753,5.56537,6.93016},
{8.23183,8.94443,9.97332,6.76922,8.96266,3.25343,2.41076,1.7442,8.95429,2.91306},
{9.39984,5.68939,8.67127,8.07769,6.59994,2.73932,5.84115,3.12219,2.23038,1.76673},
{7.10599,6.86495,6.27064,8.64285,3.47002,1.71188,9.32544,4.53984,6.83053,3.54562},
{4.47653,7.79517,5.86952,9.95333,1.08336,3.67524,9.88028,5.07371,5.2729,6.66055},
{4.73511,5.87338,7.59558,6.39222,2.4334,1.37869,4.81012,7.2295,1.44388,1.83803},
{8.5765,6.77043,5.33911,6.29013,7.34557,9.32303,1.65167,9.59239,2.05657,9.11879},
{9.17403,3.19285,6.96334,1.04491,2.42188,5.83048,9.78701,6.298,3.56337,2.56508},
{9.00018,3.96476,7.80407,7.63961,7.11884,5.67175,3.24045,8.51184,1.2672,5.68775},
{5.61105,2.90708,6.69889,5.93723,6.12278,8.75402,7.95299,5.09067,5.93698,4.63699},
{1.98935,8.55436,1.12669,2.87258,7.43644,3.31171,1.69482,9.49018,8.09471,4.14305},
{3.22351,4.73574,2.47875,8.01117,9.99275,3.85053,4.58081,1.20615,1.15381,5.28935},
{5.93646,9.75084,9.72862,8.6757,7.16304,5.62226,1.83432,9.26108,6.33799,5.37636},
{5.88911,9.68163,5.8645,7.50862,1.72488,3.37563,6.43767,7.28936,9.49486,6.29404},
{8.86265,5.94633,4.81526,9.85019,1.47866,6.6429,4.23881,1.20181,3.77769,8.17059},
{6.37382,6.03941,9.16647,3.6176,5.07655,7.56681,8.45671,2.16095,1.70764,4.04918},
{1.39539,9.72239,4.54497,2.48188,4.7049,1.99149,6.38734,4.30103,8.84554,8.88937},
{6.16992,7.31833,4.61716,3.87566,4.4999,8.02854,3.22284,3.93942,9.98337,9.65479},
{2.28247,2.54739,9.67447,8.8144,2.29019,4.27319,2.87382,1.25252,3.74755,9.64276},
{8.68757,5.82774,9.57948,9.65874,5.9898,6.53415,8.87736,1.62131,2.51557,2.33242},
{6.24818,4.00731,5.55537,7.07065,6.75519,5.97026,6.7923,2.53785,9.18369,3.99394},
{6.62215,6.52359,2.36045,7.06901,4.84338,8.96719,7.66075,5.15054,6.98525,9.02914}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {416.445,194.454,808.503,967.283,315.273,192.824,468.707,238.948,534.591,856.573,85.223,35.0028,123.919,79.6808,795.856,694.911,294.969,772.167,805.647,462.151,66.2799,910.236,991.601,150.952,309.291,108.626,785.988,559.125,542.956,525.063,204.269,435.93,342.634,964.832,53.9251,32.3767,472.425,634.254,471.682,7.29312,343.062,429.039,444.105,245.219,36.7577,564.272,350.343,473.227,591.956,300.666};


static const std::vector<float> min_impressions = {37.2634,27.2783,32.0294,33.5961,33.5401,40.0486,28.9425,34.6019,27.7317,49.8609};


#endif
