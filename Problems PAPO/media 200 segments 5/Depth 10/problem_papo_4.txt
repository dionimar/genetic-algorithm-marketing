#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_indep(events[138], events[82]),events[55]),events[66]),events[81]),events[167]),events[186]),events[177]),events[121]),events[10]),events[165]),cons_indep(cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(events[5], events[141]),events[123]),events[57]),events[183]),events[62]),events[159]),events[127]),events[18]),events[82]),events[52]),cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(events[111], events[70]),events[73]),events[182]),events[165]),events[109]),events[43]),events[190]),events[152]),events[38]),events[116]),cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(events[143], events[190]),events[86]),events[9]),events[54]),events[196]),events[173]),events[97]),events[112]),events[84]),events[121]),cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(events[33], events[124]),events[55]),events[85]),events[6]),events[26]),events[59]),events[61]),events[19]),events[84]),events[99])};


static const std::vector< std::vector<float> > prob = {{0.463029, 0.215376, 0.920992, 0.0768585, 0.567934, 0.0608163, 0.735281, 0.646362, 0.228428, 0.0609114, 0.623139, 0.21934, 0.221957, 0.2866, 0.192921, 0.670646, 0.877741, 0.776913, 0.825781, 0.605937, 0.114143, 0.84584, 0.900026, 0.15413, 0.184595, 0.480515, 0.865381, 0.764779, 0.368758, 0.871471, 0.591619, 0.60478, 0.0503087, 0.150282, 0.107339, 0.177988, 0.216635, 0.479628, 0.232834, 0.439203, 0.262185, 0.42036, 0.447373, 0.871816, 0.217015, 0.177252, 0.291663, 0.251689, 0.947285, 0.544352, 0.816345, 0.436292, 0.337417, 0.679985, 0.929153, 0.675227, 0.582981, 0.99012, 0.763809, 0.583699, 0.0168195, 0.50749, 0.468644, 0.610874, 0.0351204, 0.173523, 0.0652358, 0.0604163, 0.784165, 0.868511, 0.306503, 0.128707, 0.719882, 0.523819, 0.328042, 0.925906, 0.160844, 0.898988, 0.90358, 0.653789, 0.270128, 0.0446182, 0.101429, 0.312704, 0.172165, 0.695413, 0.0419471, 0.36106, 0.350184, 0.244288, 0.887789, 0.564933, 0.494401, 0.471781, 0.308139, 0.121079, 0.344612, 0.313097, 0.870579, 0.0298287, 0.837512, 0.240117, 0.718934, 0.466079, 0.196907, 0.657607, 0.953915, 0.39103, 0.754723, 0.129722, 0.591491, 0.690141, 0.615676, 0.119502, 0.462805, 0.263946, 0.687658, 0.847847, 0.0209843, 0.282116, 0.953341, 0.286325, 0.015897, 0.41437, 0.150589, 0.385194, 0.753165, 0.836391, 0.618195, 0.57548, 0.0950615, 0.993611, 0.760932, 0.894939, 0.851197, 0.627127, 0.31402, 0.386042, 0.0184131, 0.845705, 0.0329959, 0.749385, 0.906718, 0.178891, 0.59788, 0.345498, 0.216431, 0.439952, 0.0941749, 0.0180478, 0.832149, 0.270031, 0.833902, 0.650992, 0.131512, 0.489002, 0.750806, 0.117055, 0.728465, 0.920621, 0.519052, 0.00937925, 0.963871, 0.0525549, 0.637024, 0.941708, 0.384544, 0.133858, 0.218247, 0.709519, 0.576031, 0.940109, 0.320216, 0.712456, 0.935242, 0.826783, 0.972516, 0.671096, 0.695454, 0.026167, 0.518929, 0.325657, 0.481084, 0.444218, 0.131738, 0.406031, 0.271231, 0.145336, 0.837156, 0.453727, 0.446079, 0.787957, 0.207899, 0.275037, 0.811556, 0.298071, 0.923599, 0.956703, 0.917226, 0.468564},
{0.263629, 0.70009, 0.653791, 0.570668, 0.964885, 0.243308, 0.121849, 0.706105, 0.218999, 0.586531, 0.899556, 0.421478, 0.371581, 0.108397, 0.820279, 0.74233, 0.758981, 0.892973, 0.575647, 0.240094, 0.162975, 0.432719, 0.336198, 0.188236, 0.752567, 0.149216, 0.284575, 0.875598, 0.966085, 0.0270089, 0.782992, 0.535717, 0.248639, 0.119964, 0.548889, 0.352088, 0.281531, 0.941833, 0.233212, 0.815286, 0.652887, 0.921424, 0.900822, 0.444507, 0.917611, 0.342106, 0.257775, 0.61799, 0.095224, 0.0891665, 0.566936, 0.640962, 0.0127534, 0.229963, 0.51564, 0.165201, 0.792757, 0.751186, 0.0646026, 0.16559, 0.741693, 0.871925, 0.68945, 0.771214, 0.775687, 0.320661, 0.865699, 0.0962328, 0.346643, 0.266381, 0.830792, 0.201575, 0.350789, 0.434559, 0.289864, 0.326409, 0.379599, 0.935933, 0.93912, 0.0633885, 0.277806, 0.309471, 0.990638, 0.651547, 0.371237, 0.640397, 0.194895, 0.897283, 0.269427, 0.231719, 0.0807467, 0.473042, 0.576974, 0.319256, 0.44822, 0.453053, 0.201198, 0.739117, 0.378585, 0.241434, 0.5884, 0.371781, 0.216306, 0.949768, 0.803008, 0.469013, 0.0978426, 0.676736, 0.305844, 0.49219, 0.445997, 0.652137, 0.960691, 0.709366, 0.900452, 0.610015, 0.159437, 0.563123, 0.99606, 0.670181, 0.099643, 0.863996, 0.508175, 0.832666, 0.567278, 0.0372594, 0.338725, 0.330576, 0.179563, 0.281462, 0.29376, 0.415977, 0.879861, 0.500078, 0.809389, 0.490524, 0.804673, 0.191042, 0.955301, 0.280188, 0.731115, 0.590291, 0.839692, 0.820413, 0.801309, 0.0516512, 0.718393, 0.781766, 0.600105, 0.211492, 0.147775, 0.366708, 0.548437, 0.808046, 0.136964, 0.418371, 0.842931, 0.986708, 0.625181, 0.513943, 0.290532, 0.194272, 0.26987, 0.527698, 0.998323, 0.333547, 0.7419, 0.271443, 0.478589, 0.463271, 0.147816, 0.681493, 0.359629, 0.422701, 0.157261, 0.620147, 0.178092, 0.0697147, 0.344441, 0.717661, 0.439455, 0.945822, 0.437492, 0.335071, 0.402596, 0.569855, 0.29492, 0.573369, 0.876201, 0.156267, 0.373307, 0.739928, 0.426768, 0.0968241, 0.977508, 0.720877, 0.153492, 0.887639, 0.975593, 0.795413},
{0.96299, 0.700574, 0.471667, 0.173996, 0.440738, 0.161341, 0.781964, 0.82044, 0.50873, 0.986229, 0.711447, 0.121103, 0.483252, 0.481415, 0.712772, 0.415493, 0.0187417, 0.799753, 0.942058, 0.274802, 0.3877, 0.0437979, 0.641107, 0.0354073, 0.149799, 0.936037, 0.620055, 0.0476034, 0.495461, 0.444089, 0.296724, 0.538599, 0.108182, 0.241394, 0.903463, 0.940461, 0.55663, 0.430979, 0.575651, 0.41045, 0.874118, 0.39285, 0.211448, 0.308466, 0.0587957, 0.834749, 0.212517, 0.0775387, 0.972884, 0.805536, 0.583896, 0.879022, 0.835187, 0.367853, 0.46408, 0.166402, 0.0675043, 0.169536, 0.896747, 0.0262553, 0.108113, 0.639484, 0.21782, 0.61825, 0.185302, 0.416951, 0.611884, 0.73446, 0.930387, 0.298569, 0.391182, 0.969655, 0.384517, 0.190293, 0.430721, 0.357326, 0.82611, 0.522465, 0.29709, 0.335988, 0.274303, 0.0113282, 0.47211, 0.207554, 0.506094, 0.924941, 0.0926997, 0.464684, 0.292895, 0.180192, 0.118288, 0.797791, 0.499375, 0.0481087, 0.382964, 0.927772, 0.575707, 0.387855, 0.200558, 0.0759401, 0.926684, 0.258566, 0.949061, 0.00661141, 0.994568, 0.3747, 0.769178, 0.218623, 0.470992, 0.157388, 0.500126, 0.482695, 0.461804, 0.205404, 0.811395, 0.947969, 0.269354, 0.420231, 0.800681, 0.249281, 0.703853, 0.720303, 0.278167, 0.981643, 0.496229, 0.0722907, 0.302161, 0.174187, 0.49246, 0.892298, 0.979317, 0.556775, 0.505176, 0.975121, 0.765616, 0.0177103, 0.0102154, 0.135779, 0.386749, 0.749132, 0.186769, 0.317619, 0.401324, 0.363097, 0.917724, 0.101247, 0.128946, 0.0919318, 0.682491, 0.285224, 0.467923, 0.353772, 0.235404, 0.0470513, 0.974971, 0.588707, 0.517768, 0.489205, 0.663836, 0.484144, 0.224493, 0.591122, 0.464838, 0.853231, 0.754637, 0.996324, 0.529677, 0.385315, 0.990795, 0.781935, 0.785317, 0.0332238, 0.564124, 0.0722082, 0.228115, 0.600416, 0.0716051, 0.659341, 0.659174, 0.0413783, 0.38353, 0.84254, 0.932477, 0.469012, 0.429064, 0.465286, 0.430974, 0.41154, 0.134873, 0.62191, 0.26042, 0.884855, 0.906397, 0.339644, 0.506174, 0.862762, 0.28491, 0.963156, 0.503535, 0.837146},
{0.857209, 0.164029, 0.465473, 0.304827, 0.743944, 0.090098, 0.605113, 0.935754, 0.543685, 0.486841, 0.358507, 0.397558, 0.862328, 0.548575, 0.605349, 0.31294, 0.0889957, 0.654315, 0.345292, 0.740679, 0.984424, 0.933006, 0.120556, 0.454483, 0.408151, 0.936919, 0.671923, 0.988751, 0.231939, 0.961815, 0.514681, 0.19696, 0.200616, 0.0877222, 0.748606, 0.74786, 0.814666, 0.54542, 0.0626079, 0.0440413, 0.884423, 0.201139, 0.218465, 0.211634, 0.975343, 0.385213, 0.842476, 0.580999, 0.91952, 0.598372, 0.037565, 0.830409, 0.116744, 0.776011, 0.314755, 0.66796, 0.735486, 0.662564, 0.135783, 0.706936, 0.151533, 0.858093, 0.594824, 0.344072, 0.752919, 0.957576, 0.170802, 0.660068, 0.551036, 0.117, 0.535897, 0.295661, 0.030217, 0.850474, 0.145553, 0.0381538, 0.19471, 0.0822673, 0.450182, 0.134978, 0.43751, 0.913482, 0.885344, 0.857893, 0.569713, 0.985298, 0.351126, 0.951604, 0.921649, 0.804446, 0.0731938, 0.80586, 0.850457, 0.639416, 0.43385, 0.00551452, 0.738881, 0.952358, 0.658235, 0.829504, 0.360788, 0.069903, 0.236401, 0.4399, 0.756588, 0.225785, 0.860675, 0.723982, 0.647285, 0.727513, 0.77897, 0.102896, 0.469127, 0.708096, 0.796573, 0.545914, 0.903997, 0.289207, 0.405784, 0.13885, 0.806895, 0.567484, 0.0642568, 0.296173, 0.334941, 0.0202217, 0.801155, 0.53583, 0.172219, 0.73126, 0.0627386, 0.332653, 0.754431, 0.905866, 0.122986, 0.628601, 0.937943, 0.417049, 0.83901, 0.187719, 0.743764, 0.486777, 0.939586, 0.893264, 0.275503, 0.149057, 0.0972959, 0.993235, 0.626683, 0.297534, 0.527626, 0.828613, 0.388853, 0.287458, 0.207879, 0.928669, 0.316341, 0.510359, 0.464083, 0.598244, 0.240197, 0.140471, 0.26583, 0.303841, 0.735011, 0.507293, 0.00110839, 0.679104, 0.268672, 0.407633, 0.623546, 0.975339, 0.0427116, 0.687475, 0.777001, 0.111326, 0.143068, 0.597703, 0.868183, 0.313325, 0.67211, 0.599725, 0.00159984, 0.303123, 0.460116, 0.342255, 0.57434, 0.445604, 0.329697, 0.455692, 0.980768, 0.700556, 0.379503, 0.243776, 0.201452, 0.0464466, 0.905774, 0.641351, 0.144894, 0.418185},
{0.792777, 0.00996892, 0.553483, 0.402795, 0.123763, 0.338182, 0.629168, 0.880228, 0.505444, 0.280894, 0.136049, 0.508907, 0.168931, 0.0490229, 0.836108, 0.671933, 0.293277, 0.40851, 0.600004, 0.00735939, 0.507985, 0.4519, 0.16558, 0.210381, 0.525885, 0.546102, 0.375574, 0.0246663, 0.119145, 0.764382, 0.694041, 0.733434, 0.0424849, 0.765727, 0.542786, 0.58867, 0.575581, 0.901784, 0.368241, 0.53976, 0.108767, 0.741185, 0.343402, 0.380849, 0.104229, 0.189282, 0.892064, 0.706996, 0.546492, 0.623295, 0.582081, 0.750359, 0.510955, 0.440232, 0.18248, 0.578813, 0.00473127, 0.175558, 0.278399, 0.85852, 0.952361, 0.761902, 0.87652, 0.705923, 0.51615, 0.497083, 0.28505, 0.76005, 0.0268483, 0.938127, 0.405783, 0.904986, 0.214133, 0.0934418, 0.275455, 0.754349, 0.705807, 0.450206, 0.858243, 0.247138, 0.873974, 0.0395989, 0.854204, 0.395681, 0.571445, 0.36239, 0.367738, 0.210614, 0.0667282, 0.313466, 0.337428, 0.566855, 0.446811, 0.784633, 0.338186, 0.481281, 0.78111, 0.957591, 0.362695, 0.886836, 0.974718, 0.628365, 0.103218, 0.41518, 0.167465, 0.193063, 0.203401, 0.290889, 0.706526, 0.770414, 0.274859, 0.330972, 0.0276674, 0.0155272, 0.333556, 0.414336, 0.824392, 0.98122, 0.856431, 0.220783, 0.374825, 0.825192, 0.287823, 0.388495, 0.118602, 0.869915, 0.162539, 0.592781, 0.799325, 0.467549, 0.9035, 0.178119, 0.293424, 0.199512, 0.946216, 0.349475, 0.639549, 0.0620726, 0.185359, 0.416569, 0.961497, 0.963555, 0.553186, 0.688081, 0.477674, 0.981871, 0.354267, 0.554489, 0.21407, 0.0514427, 0.763377, 0.954635, 0.383921, 0.41794, 0.154533, 0.126758, 0.192946, 0.980862, 0.928842, 0.032475, 0.526624, 0.585727, 0.268701, 0.974058, 0.332008, 0.595129, 0.689626, 0.214254, 0.0180922, 0.402705, 0.873003, 0.922239, 0.767919, 0.907493, 0.177779, 0.655782, 0.388599, 0.424593, 0.599407, 0.0172473, 0.229719, 0.807465, 0.215854, 0.500974, 0.939299, 0.756471, 0.312251, 0.558643, 0.357982, 0.356941, 0.0252668, 0.560399, 0.283462, 0.821675, 0.777116, 0.391672, 0.0968623, 0.842379, 0.469922, 0.167811},
};

static const std::vector<float> costs = {13.8205, 46.6944, 771.914, 862.488, 772.826, 628.573, 815.115, 14.7628, 128.933, 282.778, 985.127, 485.07, 678.209, 692.017, 455.702, 544.359, 900.542, 67.4481, 160.691, 129.711, 294.318, 6.75994, 740.44, 207.583, 250.487, 394.761, 117.151, 8.99354, 863.837, 517.395, 50.0791, 794.356, 622.587, 813.555, 883.891, 110.567, 242.422, 383.861, 347.159, 366.155, 871.391, 240.639, 751.014, 550.042, 841.572, 97.1312, 330.921, 971.892, 425.799, 335.258, 675.237, 889.251, 559.592, 670.825, 735.737, 401.976, 196.795, 963.714, 862.338, 143.29, 306.969, 465.017, 857.798, 340.864, 385.373, 439.246, 347.666, 994.054, 557.541, 195.955, 419.089, 245.76, 349.917, 32.9543, 544.971, 945.849, 282.243, 346.327, 614.067, 783.114, 280.801, 856.203, 992.199, 607.918, 97.6923, 386.168, 254.632, 908.322, 205.215, 841.428, 722.198, 683.903, 886.284, 177.178, 130.469, 337.86, 184.625, 403.288, 176.503, 674.973, 16.4362, 73.4212, 371.722, 895.381, 414.597, 110.902, 69.1616, 118.212, 533.81, 707.879, 131.739, 917.336, 161.988, 187.152, 141.688, 386.894, 379.405, 139.687, 98.3385, 279.575, 820.814, 17.7393, 692.008, 519.647, 473.833, 403.549, 345.358, 636.511, 455.15, 284.345, 267.935, 802.641, 153.629, 981.138, 847.475, 687.449, 517.413, 637.623, 147.621, 241.149, 248.296, 658.819, 958.622, 821.455, 323.018, 755.936, 936.741, 625.622, 632.684, 591.914, 406.451, 474.553, 553.44, 447.662, 229.083, 699.082, 635.425, 57.5638, 630.14, 533.803, 914.877, 599.983, 486.487, 946.839, 795.046, 45.0488, 134.501, 765.522, 565.981, 639.281, 994.34, 672.531, 625.846, 717.066, 320.806, 844.682, 289.085, 516.855, 794.149, 134.527, 121.539, 27.99, 232.874, 133.639, 528.73, 549.506, 75.498, 937.54, 609.191, 229.828, 932.314, 191.264, 608.211, 371.137, 143.868, 180.493, 298.102, 684.694, 234.344, 125.578};

static const std::vector<float> min_impressions = {0.824611, 0.562938, 0.126415, 0.462889, 0.424946};

//
#endif
