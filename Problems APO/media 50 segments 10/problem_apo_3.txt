#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include <vector>

#include "matrix.hpp"

#define APO

static const int media = 50;
static const int segments = 10;

static const std::vector< std::vector<float> > restr_rep {{3.35034,5.64611,4.28742,2.55331,1.35814,1.19511,2.74402,3.22113,8.48718,5.92123},
{7.16262,2.88717,4.11643,4.7787,9.86717,3.7534,9.95529,6.42464,8.09152,8.72083},
{3.88236,9.34613,6.2697,5.08405,5.4226,2.05341,7.19186,2.25987,8.4761,8.69667},
{4.60126,1.74867,9.78464,3.83554,9.58804,1.36354,2.68946,4.48731,1.68156,2.58792},
{8.3212,6.92511,8.635,8.8344,7.62909,5.80797,8.14275,2.27288,5.62234,1.98519},
{1.87633,3.26295,5.60307,7.14583,7.10535,2.14713,1.02722,4.88632,4.91019,3.19592},
{9.6544,2.80206,5.46748,9.32592,1.1611,9.48747,1.28376,8.5152,8.16592,5.35627},
{3.22634,6.78969,1.29609,4.83769,7.73872,3.62236,9.5397,7.3296,6.68958,9.66831},
{3.26213,8.42408,3.92731,6.96283,7.71988,5.01735,4.84552,1.2479,5.01813,4.31746},
{1.63123,6.06962,4.89054,4.28604,3.01165,3.42017,9.05694,7.21339,7.04818,5.69018},
{1.92882,6.65185,5.67215,1.70547,9.20399,5.36696,9.4398,2.56578,9.07836,7.45419},
{4.90357,3.92202,5.65316,4.58085,8.24844,4.29679,1.21584,5.54894,1.88712,3.2076},
{9.65419,9.81922,5.36792,1.99764,8.43205,8.09988,4.83561,5.51413,9.70581,9.13752},
{1.21522,3.65035,8.95874,8.21294,5.5367,5.77568,7.35046,6.00587,2.1745,9.70757},
{6.49816,6.68562,4.71936,9.31347,8.2547,9.85007,3.82598,4.79912,5.06995,9.7493},
{6.13648,6.25457,2.422,2.93515,7.13326,8.20525,4.25371,7.34932,1.72886,6.15846},
{4.77202,4.16981,9.09726,2.7087,1.64682,4.1968,7.07227,9.86623,5.62253,1.53493},
{5.41255,5.9048,8.4804,9.71358,3.87509,4.85555,3.63077,1.92124,6.7457,8.24816},
{7.06442,8.47841,5.75485,3.15548,4.81405,7.5964,2.24002,3.98207,1.95356,3.05531},
{9.29196,2.71451,9.62508,5.73163,6.43442,5.51056,5.79331,4.05672,3.80166,9.94719},
{3.82841,8.70384,3.11246,7.81592,1.70241,5.48256,7.71326,3.24321,5.89644,2.30991},
{4.39862,2.00425,9.55319,1.80787,3.26077,9.90936,5.82444,5.5221,4.48592,5.28286},
{8.73389,8.50023,9.96637,9.88341,4.14163,5.96418,6.35624,7.30839,1.70734,2.57572},
{8.926,7.05083,8.04721,6.30281,2.11987,5.01501,8.97984,4.26227,8.0861,5.48785},
{7.11142,5.49449,8.27593,3.96595,6.9596,8.94226,2.50685,1.84786,9.8328,4.74613},
{2.25642,5.23261,8.72454,9.01067,4.45798,2.38966,3.09135,2.47481,2.55709,7.14459},
{8.42435,3.02129,8.26928,5.23703,3.73114,4.66208,3.08151,5.10908,9.99491,2.76199},
{4.3499,9.01404,6.9472,7.9205,2.53502,5.7719,2.61624,8.88146,4.72054,9.55192},
{9.68603,2.44916,8.76622,4.21961,3.80242,2.42615,9.09519,7.75362,8.0605,8.98005},
{1.58035,9.18331,6.34619,9.13692,6.57837,5.17417,8.08801,5.87317,8.66823,5.68943},
{2.86265,3.23214,5.00502,8.30393,2.78387,2.39909,9.59144,5.2166,9.63639,4.59166},
{6.84236,8.9959,3.54944,6.02185,3.02873,2.2651,2.32351,8.21147,8.7736,3.77089},
{8.97962,3.36931,4.72953,7.812,4.45505,5.43038,8.94778,8.95986,5.86943,2.23922},
{7.57928,8.52023,3.89064,3.43386,2.21311,3.44343,4.19292,6.55538,9.6847,9.66144},
{2.14087,6.45886,4.5933,9.01425,8.73878,5.01051,5.11649,4.28272,5.14244,1.54817},
{6.68632,6.06496,4.51922,5.33981,7.21872,4.33487,4.05086,5.40636,8.50355,7.03243},
{2.97107,4.84698,5.59437,2.3968,5.5584,7.69981,9.5755,8.70275,7.60842,7.0861},
{6.44196,4.60564,3.81661,7.18361,7.12125,8.05424,7.59883,2.10525,3.24688,4.051},
{3.63939,3.14847,6.21733,3.5024,8.69426,4.36333,5.23107,4.54423,4.0142,6.51209},
{1.92135,3.16034,5.89861,3.84134,4.34073,2.88075,6.66052,5.72312,1.20294,6.13},
{6.5249,5.88616,5.94819,5.53345,5.21159,6.90961,5.83755,3.10708,7.77955,1.77697},
{5.97753,7.5096,9.23559,6.72596,5.06264,1.77983,6.76102,4.61975,1.83393,7.59906},
{6.5311,9.94266,8.45789,9.36433,9.64445,1.3943,6.25946,3.86643,2.65343,5.75974},
{3.09163,4.27416,6.35657,2.35617,7.80827,2.60846,5.77566,4.73914,6.04101,1.60362},
{4.61789,2.94921,2.77626,4.92324,3.17937,8.27629,9.14167,8.80807,5.57607,2.23432},
{1.87611,4.74212,2.40863,2.79275,2.24914,5.104,3.73418,2.19279,7.61629,8.41841},
{5.22615,4.0902,5.23162,3.76072,3.49888,6.55265,7.90724,9.41997,4.55204,5.08807},
{9.11873,6.09638,4.56479,8.19199,6.88539,4.53845,7.81793,5.6327,7.87076,1.17136},
{1.98098,3.18232,5.56487,7.5413,3.81712,6.00774,8.96988,6.63678,7.23211,3.1639},
{4.97224,1.08818,3.84106,1.33668,7.29602,9.3089,7.50909,1.13948,6.61902,5.09771}};

static const Matrix restrictions_aux = Matrix(restr_rep);

static const Matrix restrictions = restrictions_aux.transpose();

static const std::vector<float> costs = {589.337,972.94,755.624,679.294,691.545,803.988,406.321,723.525,762.049,611.952,938.382,923.074,34.6166,465.543,611.145,783.45,59.6659,850.16,721.478,198.964,478.095,634.033,767.334,744.336,723.22,270.698,256.076,517.462,856.818,723.563,824.693,187.594,176.523,536.749,681.299,797.477,140.779,469.643,854.25,595.656,638.656,260.079,238.729,565.648,859.081,329.481,33.2217,264.808,466.502,362.656};


static const std::vector<float> min_impressions = {20.0312,33.5081,27.9893,25.3927,23.0994,39.242,27.0255,35.4681,48.9038,44.0716};


#endif
