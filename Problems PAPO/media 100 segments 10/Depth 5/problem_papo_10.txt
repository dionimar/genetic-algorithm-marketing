#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(events[23], events[20]),events[59]),events[40]),events[27]),events[12]),cons_incl(cons_excl(cons_excl(cons_indep(cons_excl(events[65], events[90]),events[97]),events[16]),events[14]),events[60]),cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(events[20], events[56]),events[26]),events[14]),events[15]),events[11]),cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[42], events[63]),events[18]),events[11]),events[75]),events[66]),cons_incl(cons_excl(cons_incl(cons_indep(cons_indep(events[85], events[68]),events[62]),events[83]),events[31]),events[70]),cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(events[82], events[32]),events[45]),events[49]),events[48]),events[44]),cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(events[94], events[41]),events[98]),events[76]),events[86]),events[45]),cons_excl(cons_excl(cons_excl(cons_excl(cons_incl(events[11], events[38]),events[17]),events[24]),events[35]),events[50]),cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[33], events[61]),events[26]),events[65]),events[12]),events[77]),cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(events[55], events[0]),events[74]),events[18]),events[93]),events[81])};


static const std::vector< std::vector<float> > prob = {{0.093046, 0.566353, 0.463147, 0.831304, 0.656526, 0.74567, 0.0901833, 0.211568, 0.838555, 0.760754, 0.760009, 0.25505, 0.736937, 0.37691, 0.909484, 0.623201, 0.560493, 0.462712, 0.805148, 0.302638, 0.102788, 0.9869, 0.823333, 0.615636, 0.952701, 0.854602, 0.760222, 0.872185, 0.559898, 0.644417, 0.611467, 0.616234, 0.103393, 0.780304, 0.0812929, 0.465203, 0.556118, 0.276711, 0.588589, 0.644789, 0.746941, 0.429408, 0.706661, 0.333061, 0.0159064, 0.54136, 0.218905, 0.41036, 0.987566, 0.76743, 0.750613, 0.112849, 0.913618, 0.900332, 0.733497, 0.8987, 0.81114, 0.980968, 0.984094, 0.425234, 0.181047, 0.350698, 0.898557, 0.444291, 0.75719, 0.965633, 0.310604, 0.579094, 0.26989, 0.730728, 0.333675, 0.85942, 0.137053, 0.169831, 0.337821, 0.530343, 0.905667, 0.935583, 0.737994, 0.909466, 0.0217969, 0.985431, 0.71541, 0.980569, 0.0760801, 0.5013, 0.139437, 0.886656, 0.195964, 0.996267, 0.674087, 0.623129, 0.172265, 0.0211596, 0.339552, 0.382421, 0.00929901, 0.391198, 0.0795182, 0.352353},
{0.201052, 0.174317, 0.857156, 0.479639, 0.652138, 0.931684, 0.0896495, 0.000361162, 0.409677, 0.0896672, 0.982317, 0.195429, 0.987153, 0.247296, 0.901974, 0.921316, 0.965218, 0.483466, 0.504249, 0.0906417, 0.792252, 0.367337, 0.47972, 0.505969, 0.423606, 0.0356668, 0.682076, 0.559124, 0.151791, 0.334102, 0.184174, 0.892043, 0.456922, 0.46061, 0.127107, 0.262835, 0.262221, 0.84701, 0.459178, 0.580375, 0.399181, 0.82699, 0.225359, 0.911716, 0.772327, 0.125706, 0.618992, 0.719793, 0.624813, 0.899829, 0.658244, 0.111946, 0.794107, 0.119495, 0.35769, 0.0920716, 0.609086, 0.486631, 0.745344, 0.8998, 0.510929, 0.824779, 0.782744, 0.636272, 0.101205, 0.0818688, 0.758075, 0.0112791, 0.157191, 0.39973, 0.167588, 0.621832, 0.826466, 0.148416, 0.689178, 0.122626, 0.976208, 0.35009, 0.322764, 0.53889, 0.0391403, 0.704482, 0.294805, 0.471413, 0.523011, 0.617667, 0.98736, 0.345613, 0.0755518, 0.585885, 0.95288, 0.268305, 0.241081, 0.291699, 0.26748, 0.366278, 0.309179, 0.984673, 0.0410502, 0.90266},
{0.189672, 0.132941, 0.330818, 0.857214, 0.524245, 0.237618, 0.547885, 0.180664, 0.462088, 0.529489, 0.0379506, 0.370103, 0.385947, 0.249386, 0.14548, 0.791699, 0.743088, 0.257412, 0.864479, 0.411397, 0.407368, 0.764488, 0.15773, 0.614682, 0.298034, 0.0271486, 0.363764, 0.996726, 0.444539, 0.96042, 0.222817, 0.416347, 0.533675, 0.963348, 0.161071, 0.217833, 0.447689, 0.463101, 0.263661, 0.710786, 0.450222, 0.148879, 0.448905, 0.476456, 0.563554, 0.211956, 0.398766, 0.998077, 0.53742, 0.927421, 0.333269, 0.814094, 0.764718, 0.905364, 0.247117, 0.138246, 0.329409, 0.334501, 0.50662, 0.347028, 0.232055, 0.130252, 0.293163, 0.695777, 0.48022, 0.721417, 0.0704658, 0.32862, 0.782306, 0.451764, 0.852185, 0.982117, 0.180754, 0.243673, 0.00592221, 0.781545, 0.862927, 0.699702, 0.642173, 0.895118, 0.199394, 0.762208, 0.0146408, 0.833157, 0.368831, 0.202888, 0.750498, 0.346027, 0.82871, 0.419001, 0.212693, 0.587311, 0.335337, 0.17559, 0.927786, 0.958459, 0.0116546, 0.889992, 0.00337548, 0.277831},
{0.293508, 0.210395, 0.710563, 0.0329432, 0.602427, 0.774218, 0.164005, 0.0525274, 0.341284, 0.624398, 0.207191, 0.197748, 0.210707, 0.237333, 0.0169715, 0.719521, 0.743207, 0.0330035, 0.0194636, 0.193862, 0.627747, 0.94126, 0.464115, 0.670951, 0.385096, 0.0699878, 0.398312, 0.370647, 0.282452, 0.386143, 0.905649, 0.543997, 0.337079, 0.49124, 0.127941, 0.545697, 0.769952, 0.585179, 0.653937, 0.806102, 0.909852, 0.283229, 0.931008, 0.430167, 0.420212, 0.569191, 0.602762, 0.373594, 0.352077, 0.953438, 0.809503, 0.805454, 0.810448, 0.425922, 0.911896, 0.292479, 0.6065, 0.593086, 0.373751, 0.670615, 0.572078, 0.00564022, 0.835647, 0.283126, 0.660916, 0.343374, 0.846633, 0.533385, 0.300233, 0.0148741, 0.383069, 0.557787, 0.493264, 0.632513, 0.0083383, 0.26441, 0.21667, 0.671852, 0.140204, 0.388391, 0.97164, 0.159018, 0.191121, 0.337828, 0.274725, 0.265638, 0.171709, 0.200696, 0.189405, 0.355734, 0.920129, 0.644401, 0.788174, 0.457608, 0.0760434, 0.780139, 0.864877, 0.50379, 0.67744, 0.140491},
{0.419257, 0.200974, 0.744343, 0.0524476, 0.360726, 0.161402, 0.665933, 0.90536, 0.309669, 0.556334, 0.348083, 0.608399, 0.179065, 0.476655, 0.660134, 0.867274, 0.436527, 0.950853, 0.429113, 0.902373, 0.98881, 0.445086, 0.858064, 0.857991, 0.455103, 0.0492556, 0.551863, 0.0617925, 0.599818, 0.190123, 0.512624, 0.567754, 0.995542, 0.00712919, 0.227521, 0.259889, 0.324692, 0.544639, 0.997032, 0.533323, 0.332965, 0.104983, 0.890018, 0.559673, 0.0104124, 0.604202, 0.13651, 0.309049, 0.881991, 0.722435, 0.478989, 0.486555, 0.562351, 0.148373, 0.863884, 0.00482389, 0.537481, 0.0407315, 0.383313, 0.764573, 0.012907, 0.124195, 0.543176, 0.886441, 0.0634892, 0.837908, 0.878484, 0.000494559, 0.375641, 0.604264, 0.9941, 0.13037, 0.387735, 0.893753, 0.537214, 0.934196, 0.0862368, 0.83375, 0.591835, 0.0281006, 0.138405, 0.362277, 0.585182, 0.292309, 0.110494, 0.389221, 0.512113, 0.144357, 0.310957, 0.560001, 0.380237, 0.096913, 0.276116, 0.423997, 0.112216, 0.333238, 0.59146, 0.701994, 0.729762, 0.210319},
{0.158763, 0.0800468, 0.752347, 0.153803, 0.499453, 0.120075, 0.89433, 0.113929, 0.00133689, 0.111992, 0.54772, 0.100147, 0.745626, 0.299831, 0.293942, 0.194804, 0.573142, 0.0866163, 0.326825, 0.854357, 0.703852, 0.469398, 0.517782, 0.234175, 0.348011, 0.374143, 0.448976, 0.191345, 0.954673, 0.695703, 0.124195, 0.632093, 0.448015, 0.804469, 0.942261, 0.854377, 0.435215, 0.795588, 0.373391, 0.328696, 0.191633, 0.22292, 0.182734, 0.0729254, 0.582376, 0.238724, 0.333991, 0.818786, 0.871533, 0.887168, 0.460318, 0.923484, 0.580777, 0.595452, 0.103116, 0.940895, 0.678841, 0.368161, 0.955183, 0.650124, 0.516301, 0.743305, 0.918696, 0.252344, 0.755985, 0.693043, 0.200999, 0.847596, 0.254308, 0.222771, 0.466439, 0.0912551, 0.794288, 0.979821, 0.437596, 0.753573, 0.558137, 0.162068, 0.770648, 0.26581, 0.0413088, 0.403863, 0.145324, 0.125451, 0.761895, 0.283471, 0.577851, 0.84993, 0.112955, 0.357485, 0.519588, 0.368518, 0.743458, 0.0308355, 0.0665016, 0.96965, 0.830021, 0.432503, 0.740887, 0.411888},
{0.466386, 0.588525, 0.205849, 0.16951, 0.652319, 0.294967, 0.687549, 0.184392, 0.40969, 0.86973, 0.69345, 0.77556, 0.419262, 0.402751, 0.741964, 0.171346, 0.15394, 0.84522, 0.886107, 0.0190043, 0.306478, 0.382425, 0.451938, 0.978755, 0.315354, 0.647214, 0.418124, 0.928891, 0.212518, 0.53293, 0.857853, 0.0861355, 0.168729, 0.273118, 0.449732, 0.221646, 0.82246, 0.346417, 0.564697, 0.736742, 0.761356, 0.25072, 0.692148, 0.905179, 0.525865, 0.413992, 0.947451, 0.526982, 0.597269, 0.41272, 0.938443, 0.234194, 0.47428, 0.434087, 0.904298, 0.245726, 0.588043, 0.248657, 0.375225, 0.172205, 0.930869, 0.100055, 0.853699, 0.605741, 0.471075, 0.975324, 0.509679, 0.347713, 0.11297, 0.0375791, 0.325387, 0.924482, 0.785884, 0.0881901, 0.647466, 0.312972, 0.546057, 0.609085, 0.364121, 0.304641, 0.911598, 0.152556, 0.705206, 0.855093, 0.937745, 0.790207, 0.412592, 0.708013, 0.828784, 0.368837, 0.650536, 0.063488, 0.536634, 0.975513, 0.254463, 0.939897, 0.420588, 0.672661, 0.760719, 0.0449243},
{0.696662, 0.140627, 0.369453, 0.762205, 0.619088, 0.494382, 0.518612, 0.188085, 0.389754, 0.0313837, 0.973768, 0.777527, 0.694138, 0.31794, 0.510543, 0.112898, 0.801613, 0.767832, 0.409493, 0.0385407, 0.666288, 0.983822, 0.261394, 0.491246, 0.685023, 0.40496, 0.613277, 0.180061, 0.863182, 0.177486, 0.24479, 0.86632, 0.696397, 0.878433, 0.462021, 0.0865861, 0.0974254, 0.955076, 0.924161, 0.646503, 0.0527341, 0.625693, 0.879643, 0.409782, 0.535556, 0.443786, 0.0946543, 0.979657, 0.60959, 0.988302, 0.494513, 0.152774, 0.823689, 0.194574, 0.961965, 0.627203, 0.890269, 0.939126, 0.097404, 0.130325, 0.88596, 0.656643, 0.886389, 0.821454, 0.7719, 0.76361, 0.675863, 0.826679, 0.799324, 0.481551, 0.618318, 0.376248, 0.37985, 0.0352259, 0.0735818, 0.9006, 0.356129, 0.698722, 0.406778, 0.490703, 0.574889, 0.949947, 0.45852, 0.774274, 0.278033, 0.273613, 0.524672, 0.597622, 0.117235, 0.366781, 0.554246, 0.901287, 0.40321, 0.0971171, 0.1874, 0.0337419, 0.91451, 0.32603, 0.542013, 0.202964},
{0.600374, 0.200705, 0.0550384, 0.411257, 0.565309, 0.145521, 0.901774, 0.970639, 0.193535, 0.79336, 0.117402, 0.178211, 0.217798, 0.0824259, 0.442048, 0.471584, 0.357523, 0.498008, 0.336967, 0.515779, 0.911179, 0.695393, 0.0480219, 0.155436, 0.489877, 0.778284, 0.479938, 0.776438, 0.695766, 0.980611, 0.5566, 0.053208, 0.948153, 0.111303, 0.11327, 0.289877, 0.496481, 0.965781, 0.790019, 0.424024, 0.195649, 0.287882, 0.112997, 0.824163, 0.148792, 0.778382, 0.300016, 0.742097, 0.401609, 0.949615, 0.157606, 0.848495, 0.712293, 0.465889, 0.410154, 0.160472, 0.328156, 0.343831, 0.494279, 0.494162, 0.0617162, 0.915803, 0.0343681, 0.308601, 0.396597, 0.719179, 0.49035, 0.919832, 0.25243, 0.953192, 0.391134, 0.144359, 0.705839, 0.658054, 0.407218, 0.360399, 0.0122099, 0.85433, 0.535214, 0.821736, 0.035251, 0.228482, 0.778807, 0.416994, 0.643092, 0.660474, 0.298895, 0.833604, 0.0287561, 0.946557, 0.950394, 0.158073, 0.563654, 0.619697, 0.137382, 0.741097, 0.381215, 0.138398, 0.683792, 0.377917},
{0.178168, 0.790678, 0.799196, 0.279892, 0.289209, 0.657046, 0.387901, 0.0432479, 0.79741, 0.297304, 0.25338, 0.260097, 0.775122, 0.0838728, 0.58363, 0.3665, 0.430611, 0.506139, 0.0023709, 0.879714, 0.945675, 0.934356, 0.283406, 0.884706, 0.880209, 0.752494, 0.895919, 0.961241, 0.348123, 0.751798, 0.398315, 0.931028, 0.0184166, 0.683717, 0.0967774, 0.900386, 0.433036, 0.908857, 0.391599, 0.237585, 0.154311, 0.593731, 0.715379, 0.0495177, 0.776401, 0.193845, 0.52515, 0.451447, 0.462114, 0.893969, 0.948069, 0.0889157, 0.49864, 0.450676, 0.221497, 0.440555, 0.848116, 0.911041, 0.440391, 0.632552, 0.914468, 0.429886, 0.118159, 0.114826, 0.729191, 0.626823, 0.0271471, 0.340729, 0.464099, 0.273225, 0.638934, 0.292785, 0.322508, 0.689644, 0.612336, 0.22217, 0.0321557, 0.18668, 0.0823899, 0.295007, 0.232259, 0.78886, 0.437614, 0.45616, 0.601974, 0.669437, 0.762958, 0.635715, 0.493917, 0.692975, 0.863605, 0.627794, 0.758737, 0.340909, 0.388897, 0.798116, 0.345611, 0.958341, 0.421438, 0.247997},
};

static const std::vector<float> costs = {77.1068, 144.581, 205.3, 669.935, 247.015, 331.194, 408.72, 3.09327, 624.05, 432.78, 11.661, 275.784, 453.313, 264.054, 854.07, 113.947, 59.5844, 193.897, 360.464, 653.535, 146.954, 39.0557, 94.1185, 998.667, 371.537, 381.925, 953.777, 141.578, 447.443, 675.624, 107.433, 686.797, 724.569, 932.502, 363.593, 776.627, 357.268, 987.588, 655.9, 397.587, 485.718, 669.7, 416.701, 16.9382, 896.599, 618.886, 585.5, 180.332, 431.402, 745.273, 514.877, 987.476, 658.764, 766.038, 687.336, 703.828, 489.266, 13.1736, 609.042, 373.751, 704.509, 6.4627, 935.458, 338.399, 407.909, 144.408, 625.715, 756.834, 309.417, 544.249, 694.088, 603.874, 593.837, 139.637, 661.319, 622.603, 481.541, 236.31, 938.225, 713.702, 615.784, 804.646, 164.624, 546.567, 413.822, 86.3406, 946.105, 762.951, 889.976, 523.758, 151.382, 838.058, 300.763, 758.869, 110.457, 317.373, 261.693, 496.26, 97.6506, 972.859};

static const std::vector<float> min_impressions = {0.336196, 0.264779, 0.335003, 0.0963688, 0.913094, 0.259904, 0.788617, 0.5758, 0.425954, 0.0966989};

//
#endif
