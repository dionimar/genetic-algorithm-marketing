#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_incl(cons_incl(cons_excl(cons_incl(events[88], events[3]),events[14]),events[18]),events[82]),events[79]),cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(events[21], events[74]),events[19]),events[1]),events[99]),events[60]),cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(events[88], events[49]),events[99]),events[89]),events[62]),events[22]),cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(events[33], events[59]),events[66]),events[32]),events[4]),events[86]),cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(events[80], events[83]),events[91]),events[41]),events[29]),events[87])};


static const std::vector< std::vector<float> > prob = {{0.728587, 0.853075, 0.173976, 0.574569, 0.615702, 0.310143, 0.506172, 0.321572, 0.781462, 0.302501, 0.279849, 0.397267, 0.810317, 0.528032, 0.128128, 0.577936, 0.0916784, 0.26522, 0.47986, 0.291774, 0.79143, 0.512382, 0.900133, 0.661398, 0.800098, 0.643341, 0.148963, 0.863777, 0.463194, 0.114968, 0.975868, 0.968893, 0.780513, 0.14438, 0.949343, 0.239558, 0.230067, 0.299337, 0.755083, 0.528163, 0.595301, 0.744288, 0.843374, 0.572653, 0.780033, 0.736628, 0.798157, 0.65662, 0.0515675, 0.214118, 0.47343, 0.974312, 0.000437841, 0.0202568, 0.440171, 0.353647, 0.25014, 0.502445, 0.863637, 0.608102, 0.494616, 0.917471, 0.411585, 0.975104, 0.480795, 0.116508, 0.439858, 0.913586, 0.445372, 0.614728, 0.450443, 0.743333, 0.349882, 0.638357, 0.212389, 0.714777, 0.0128081, 0.284398, 0.725156, 0.199968, 0.596395, 0.571276, 0.947552, 0.039838, 0.256918, 0.921181, 0.297755, 0.00825774, 0.0280025, 0.844889, 0.0123582, 0.0923595, 0.980765, 0.255519, 0.141495, 0.829417, 0.860328, 0.811443, 0.171967, 0.115777},
{0.616658, 0.622757, 0.129595, 0.222233, 0.106975, 0.13146, 0.778099, 0.926989, 0.146833, 0.0983341, 0.715207, 0.892081, 0.172119, 0.178996, 0.686276, 0.244026, 0.676633, 0.334023, 0.341268, 0.0881941, 0.182226, 0.431014, 0.197013, 0.678803, 0.823167, 0.385282, 0.930934, 0.234485, 0.502312, 0.415622, 0.244075, 0.825629, 0.282069, 0.422498, 0.23394, 0.132894, 0.0525975, 0.60684, 0.118845, 0.769245, 0.871368, 0.755425, 0.399813, 0.727271, 0.236096, 0.314286, 0.61543, 0.67889, 0.53631, 0.520961, 0.360701, 0.0083606, 0.71088, 0.230219, 0.99898, 0.668337, 0.531878, 0.107216, 0.194022, 0.288561, 0.972992, 0.521871, 0.916503, 0.174606, 0.0870652, 0.926315, 0.795277, 0.685903, 0.381298, 0.147743, 0.797408, 0.536225, 0.714085, 0.217237, 0.462414, 0.618923, 0.955672, 0.425123, 0.963352, 0.628294, 0.567578, 0.953855, 0.46236, 0.948367, 0.632939, 0.513707, 0.421511, 0.652714, 0.73281, 0.872463, 0.369011, 0.829022, 0.66333, 0.0775436, 0.447335, 0.449086, 0.0381283, 0.349827, 0.472249, 0.833715},
{0.480302, 0.162404, 0.476695, 0.936629, 0.608291, 0.0317765, 0.820179, 0.0122527, 0.224788, 0.4744, 0.642819, 0.84325, 0.489971, 0.151076, 0.607172, 0.0536008, 0.405993, 0.604962, 0.718428, 0.306442, 0.713787, 0.202441, 0.0369429, 0.717484, 0.370289, 0.264421, 0.0637213, 0.360941, 0.311282, 0.256853, 0.811588, 0.325018, 0.86466, 0.506838, 0.456336, 0.55267, 0.486487, 0.576678, 0.277082, 0.786266, 0.600185, 0.56547, 0.959544, 0.680333, 0.846841, 0.110374, 0.534534, 0.786103, 0.572573, 0.426985, 0.311415, 0.270081, 0.407853, 0.0478396, 0.534924, 0.117894, 0.511584, 0.0377036, 0.966561, 0.884477, 0.934484, 0.460619, 0.891409, 0.503575, 0.182523, 0.13706, 0.997794, 0.860174, 0.0213527, 0.372626, 0.814456, 0.079757, 0.654442, 0.669849, 0.419407, 0.140057, 0.594075, 0.113003, 0.520075, 0.375284, 0.7752, 0.675354, 0.297025, 0.750364, 0.0011497, 0.601266, 0.318845, 0.134223, 0.323836, 0.163922, 0.0730455, 0.886094, 0.129341, 0.585532, 0.975662, 0.582689, 0.243168, 0.21964, 0.0990247, 0.309543},
{0.266796, 0.652772, 0.745642, 0.590822, 0.685526, 0.357261, 0.695691, 0.703249, 0.628626, 0.975867, 0.272379, 0.290892, 0.900866, 0.152953, 0.338807, 0.927766, 0.904325, 0.340007, 0.835914, 0.00644276, 0.398597, 0.0275248, 0.25543, 0.544015, 0.64265, 0.186364, 0.799794, 0.485034, 0.744352, 0.680826, 0.850028, 0.758465, 0.151087, 0.042389, 0.356253, 0.536718, 0.181631, 0.291577, 0.392312, 0.590567, 0.948708, 0.388202, 0.230116, 0.0134529, 0.28272, 0.333808, 0.766075, 0.906221, 0.202449, 0.683554, 0.117316, 0.751308, 0.284816, 0.18457, 0.381403, 0.736412, 0.871157, 0.593186, 0.0343521, 0.53257, 0.357234, 0.111285, 0.827761, 0.279601, 0.684016, 0.334266, 0.163563, 0.282733, 0.625431, 0.999302, 0.519332, 0.693615, 0.233207, 0.0236171, 0.933433, 0.636825, 0.870163, 0.191324, 0.592953, 0.816422, 0.769222, 0.906624, 0.314523, 0.839234, 0.561732, 0.30499, 0.995533, 0.35238, 0.81148, 0.0670397, 0.255643, 0.454452, 0.385314, 0.756778, 0.633961, 0.760642, 0.646687, 0.256248, 0.944531, 0.729202},
{0.430744, 0.362314, 0.134513, 0.419052, 0.131849, 0.997523, 0.241516, 0.80382, 0.277403, 0.81017, 0.161821, 0.845465, 0.0758252, 0.30448, 0.478484, 0.318861, 0.170314, 0.923889, 0.729608, 0.283085, 0.400288, 0.16457, 0.785838, 0.541425, 0.822345, 0.22151, 0.923594, 0.493668, 0.789849, 0.131898, 0.956935, 0.00440493, 0.475385, 0.995846, 0.604823, 0.311864, 0.561781, 0.475443, 0.46272, 0.968135, 0.476972, 0.992948, 0.50546, 0.118481, 0.859902, 0.0737283, 0.552677, 0.765037, 0.429042, 0.639475, 0.625625, 0.718385, 0.0923444, 0.306573, 0.980287, 0.663721, 0.183591, 0.645482, 0.262343, 0.216759, 0.429874, 0.0431488, 0.725834, 0.696677, 0.760707, 0.388106, 0.735183, 0.187538, 0.705303, 0.490714, 0.926861, 0.421289, 0.2384, 0.753028, 0.405197, 0.727754, 0.239272, 0.0822572, 0.254149, 0.500996, 0.0547024, 0.653317, 0.454163, 0.821449, 0.997674, 0.65721, 0.81773, 0.123918, 0.467216, 0.235708, 0.982055, 0.430033, 0.470758, 0.0550693, 0.897167, 0.711486, 0.904837, 0.610213, 0.416412, 0.726648},
};

static const std::vector<float> costs = {239.098, 378.485, 808.499, 964.879, 687.577, 44.0553, 245.575, 628.875, 6.42009, 756.218, 686.391, 407.882, 941.436, 260.49, 38.3017, 148.872, 906.83, 559.174, 95.6491, 866.895, 605.788, 875.87, 551.538, 862.206, 640.608, 755.44, 318.316, 97.6076, 554.372, 224.589, 665.691, 434.24, 630.813, 193.325, 62.466, 491.827, 90.0178, 165.985, 782.969, 211.44, 26.8713, 617.635, 637.474, 344.096, 897.631, 943.403, 976.346, 582.769, 708.636, 438.541, 166.968, 306.999, 208.767, 332.668, 517.299, 774.971, 269.081, 405.538, 87.5219, 736.758, 844.814, 917.145, 677.161, 124.758, 839.879, 858.944, 147.467, 900.545, 502.309, 224.224, 644.737, 611.811, 807.372, 297.865, 857.264, 25.1996, 161.13, 20.4341, 217.109, 901.118, 172.221, 203.132, 757.178, 451.622, 928.154, 772.818, 378.749, 235.952, 358.995, 74.0947, 471.61, 517.204, 793.645, 439.643, 609.136, 380.202, 404.843, 185.697, 949.978, 626.888};

static const std::vector<float> min_impressions = {0.0368548, 0.735891, 0.748213, 0.252523, 0.114332};

//
#endif
