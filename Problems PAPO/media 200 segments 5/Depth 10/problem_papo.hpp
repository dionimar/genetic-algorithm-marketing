#ifndef PROBLEM_H
#define PROBLEM_H
#include "syntax_tree.hpp"
#include <iostream>

#define PAPO

static const int media = 200;
static const int segments = 5;

static const std::vector<Syntax_Tree> events = {
    cons_event(0),   cons_event(1),   cons_event(2),   cons_event(3),
    cons_event(4),   cons_event(5),   cons_event(6),   cons_event(7),
    cons_event(8),   cons_event(9),   cons_event(10),  cons_event(11),
    cons_event(12),  cons_event(13),  cons_event(14),  cons_event(15),
    cons_event(16),  cons_event(17),  cons_event(18),  cons_event(19),
    cons_event(20),  cons_event(21),  cons_event(22),  cons_event(23),
    cons_event(24),  cons_event(25),  cons_event(26),  cons_event(27),
    cons_event(28),  cons_event(29),  cons_event(30),  cons_event(31),
    cons_event(32),  cons_event(33),  cons_event(34),  cons_event(35),
    cons_event(36),  cons_event(37),  cons_event(38),  cons_event(39),
    cons_event(40),  cons_event(41),  cons_event(42),  cons_event(43),
    cons_event(44),  cons_event(45),  cons_event(46),  cons_event(47),
    cons_event(48),  cons_event(49),  cons_event(50),  cons_event(51),
    cons_event(52),  cons_event(53),  cons_event(54),  cons_event(55),
    cons_event(56),  cons_event(57),  cons_event(58),  cons_event(59),
    cons_event(60),  cons_event(61),  cons_event(62),  cons_event(63),
    cons_event(64),  cons_event(65),  cons_event(66),  cons_event(67),
    cons_event(68),  cons_event(69),  cons_event(70),  cons_event(71),
    cons_event(72),  cons_event(73),  cons_event(74),  cons_event(75),
    cons_event(76),  cons_event(77),  cons_event(78),  cons_event(79),
    cons_event(80),  cons_event(81),  cons_event(82),  cons_event(83),
    cons_event(84),  cons_event(85),  cons_event(86),  cons_event(87),
    cons_event(88),  cons_event(89),  cons_event(90),  cons_event(91),
    cons_event(92),  cons_event(93),  cons_event(94),  cons_event(95),
    cons_event(96),  cons_event(97),  cons_event(98),  cons_event(99),
    cons_event(100), cons_event(101), cons_event(102), cons_event(103),
    cons_event(104), cons_event(105), cons_event(106), cons_event(107),
    cons_event(108), cons_event(109), cons_event(110), cons_event(111),
    cons_event(112), cons_event(113), cons_event(114), cons_event(115),
    cons_event(116), cons_event(117), cons_event(118), cons_event(119),
    cons_event(120), cons_event(121), cons_event(122), cons_event(123),
    cons_event(124), cons_event(125), cons_event(126), cons_event(127),
    cons_event(128), cons_event(129), cons_event(130), cons_event(131),
    cons_event(132), cons_event(133), cons_event(134), cons_event(135),
    cons_event(136), cons_event(137), cons_event(138), cons_event(139),
    cons_event(140), cons_event(141), cons_event(142), cons_event(143),
    cons_event(144), cons_event(145), cons_event(146), cons_event(147),
    cons_event(148), cons_event(149), cons_event(150), cons_event(151),
    cons_event(152), cons_event(153), cons_event(154), cons_event(155),
    cons_event(156), cons_event(157), cons_event(158), cons_event(159),
    cons_event(160), cons_event(161), cons_event(162), cons_event(163),
    cons_event(164), cons_event(165), cons_event(166), cons_event(167),
    cons_event(168), cons_event(169), cons_event(170), cons_event(171),
    cons_event(172), cons_event(173), cons_event(174), cons_event(175),
    cons_event(176), cons_event(177), cons_event(178), cons_event(179),
    cons_event(180), cons_event(181), cons_event(182), cons_event(183),
    cons_event(184), cons_event(185), cons_event(186), cons_event(187),
    cons_event(188), cons_event(189), cons_event(190), cons_event(191),
    cons_event(192), cons_event(193), cons_event(194), cons_event(195),
    cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {
    cons_incl(
        cons_indep(
            cons_excl(
                cons_incl(
                    cons_indep(
                        cons_incl(cons_excl(cons_incl(cons_excl(cons_indep(
                                                                    events[79],
                                                                    events[75]),
                                                                events[133]),
                                                      events[94]),
                                            events[89]),
                                  events[170]),
                        events[130]),
                    events[72]),
                events[95]),
            events[161]),
        events[81]),
    cons_excl(
        cons_indep(
            cons_excl(
                cons_incl(
                    cons_indep(
                        cons_incl(
                            cons_indep(
                                cons_indep(cons_indep(cons_incl(events[178],
                                                                events[29]),
                                                      events[193]),
                                           events[82]),
                                events[36]),
                            events[127]),
                        events[46]),
                    events[157]),
                events[23]),
            events[5]),
        events[143]),
    cons_incl(
        cons_excl(
            cons_incl(
                cons_incl(
                    cons_indep(
                        cons_incl(
                            cons_indep(
                                cons_excl(cons_indep(cons_indep(events[170],
                                                                events[58]),
                                                     events[124]),
                                          events[144]),
                                events[119]),
                            events[21]),
                        events[151]),
                    events[84]),
                events[161]),
            events[92]),
        events[75]),
    cons_incl(
        cons_incl(
            cons_incl(
                cons_indep(
                    cons_incl(
                        cons_excl(
                            cons_excl(
                                cons_excl(cons_indep(cons_excl(events[142],
                                                               events[169]),
                                                     events[81]),
                                          events[48]),
                                events[148]),
                            events[188]),
                        events[26]),
                    events[198]),
                events[45]),
            events[168]),
        events[15]),
    cons_incl(
        cons_incl(
            cons_incl(
                cons_excl(
                    cons_indep(
                        cons_indep(
                            cons_indep(
                                cons_excl(cons_incl(cons_excl(events[27],
                                                              events[171]),
                                                    events[11]),
                                          events[59]),
                                events[35]),
                            events[68]),
                        events[14]),
                    events[190]),
                events[79]),
            events[53]),
        events[90])};

static const std::vector<std::vector<float>> prob = {
    {0.32617,   0.142373,  0.327,     0.00776708, 0.720491,  0.133759,
     0.835377,  0.50885,   0.583815,  0.829528,   0.883043,  0.803824,
     0.603336,  0.24947,   0.336538,  0.742207,   0.150314,  0.733748,
     0.145173,  0.409227,  0.993781,  0.247192,   0.921393,  0.203941,
     0.0925325, 0.390561,  0.663925,  0.727674,   0.348776,  0.505589,
     0.66176,   0.310149,  0.16509,   0.454887,   0.942216,  0.379372,
     0.0837474, 0.786489,  0.718929,  0.92558,    0.88118,   0.595873,
     0.361369,  0.741903,  0.735365,  0.199961,   0.917349,  0.838769,
     0.392236,  0.476811,  0.459585,  0.413945,   0.841139,  0.982187,
     0.661829,  0.886013,  0.329251,  0.379056,   0.749658,  0.917771,
     0.924059,  0.473014,  0.545607,  0.593652,   0.213566,  0.140174,
     0.0960994, 0.577874,  0.541294,  0.587261,   0.996268,  0.0470506,
     0.220077,  0.654443,  0.667669,  0.253466,   0.50587,   0.387658,
     0.955927,  0.126361,  0.536533,  0.43897,    0.541317,  0.028529,
     0.361173,  0.317151,  0.501743,  0.771482,   0.460412,  0.747218,
     0.764755,  0.197209,  0.451056,  0.681283,   0.441723,  0.848422,
     0.4711,    0.47799,   0.814725,  0.207178,   0.521776,  0.396167,
     0.873569,  0.988078,  0.759403,  0.398018,   0.938011,  0.199945,
     0.564629,  0.122676,  0.162025,  0.238979,   0.178841,  0.927302,
     0.291265,  0.967905,  0.0248935, 0.081577,   0.489182,  0.213241,
     0.550186,  0.559021,  0.248026,  0.919458,   0.0867807, 0.564493,
     0.686271,  0.772256,  0.495305,  0.452425,   0.839266,  0.896913,
     0.679075,  0.459914,  0.201978,  0.987704,   0.340009,  0.37824,
     0.772827,  0.935579,  0.939758,  0.278577,   0.785861,  0.964218,
     0.931635,  0.820713,  0.869346,  0.136315,   0.127441,  0.0158211,
     0.288841,  0.374967,  0.18373,   0.0739293,  0.807868,  0.427178,
     0.322922,  0.786443,  0.134072,  0.837368,   0.399722,  0.21011,
     0.998411,  0.0786931, 0.765259,  0.936593,   0.258788,  0.498139,
     0.313892,  0.381644,  0.436647,  0.482634,   0.8135,    0.0097057,
     0.609009,  0.0352918, 0.598336,  0.576207,   0.258427,  0.973965,
     0.905745,  0.279704,  0.762661,  0.34541,    0.663846,  0.211264,
     0.725702,  0.858672,  0.060857,  0.434779,   0.146168,  0.616688,
     0.14897,   0.78206,   0.0875012, 0.797583,   0.0844332, 0.420047,
     0.861291,  0.394944},
    {0.776684,  0.992871, 0.0347463, 0.815635,  0.0145539, 0.539675,   0.280605,
     0.0515011, 0.345943, 0.198912,  0.0321827, 0.602846,  0.134877,   0.754226,
     0.337777,  0.67953,  0.279593,  0.299873,  0.327545,  0.837551,   0.791658,
     0.289463,  0.515584, 0.2187,    0.754696,  0.0894902, 0.454815,   0.624954,
     0.356837,  0.510962, 0.53645,   0.87421,   0.916138,  0.482724,   0.191723,
     0.665601,  0.883891, 0.85,      0.0572191, 0.995147,  0.892637,   0.997516,
     0.384939,  0.546254, 0.688871,  0.92306,   0.91456,   0.68998,    0.61794,
     0.946292,  0.547858, 0.803255,  0.48035,   0.567102,  0.00929887, 0.682479,
     0.0722564, 0.691242, 0.373008,  0.290606,  0.887852,  0.948524,   0.461569,
     0.803995,  0.547107, 0.379724,  0.855366,  0.0102437, 0.782343,   0.376208,
     0.283558,  0.485449, 0.993722,  0.157029,  0.239505,  0.800975,   0.223603,
     0.428931,  0.458753, 0.0696624, 0.270605,  0.76018,   0.210709,   0.115805,
     0.318093,  0.143128, 0.315474,  0.167361,  0.47777,   0.830005,   0.819048,
     0.413418,  0.304464, 0.670573,  0.158656,  0.807364,  0.310831,   0.771966,
     0.0647226, 0.388443, 0.097314,  0.998259,  0.934123,  0.488493,   0.228744,
     0.549617,  0.698877, 0.186588,  0.665004,  0.0364667, 0.163877,   0.867431,
     0.122804,  0.978275, 0.615586,  0.448028,  0.616594,  0.249099,   0.562856,
     0.236877,  0.85698,  0.393427,  0.0179682, 0.999984,  0.322684,   0.743334,
     0.399351,  0.122672, 0.953453,  0.294833,  0.547507,  0.607588,   0.972953,
     0.748146,  0.815371, 0.0572359, 0.346168,  0.690861,  0.466629,   0.555188,
     0.279955,  0.1166,   0.902478,  0.13379,   0.834244,  0.254372,   0.450294,
     0.193243,  0.720286, 0.790286,  0.59656,   0.994723,  0.124072,   0.632176,
     0.0812863, 0.496335, 0.452846,  0.230321,  0.685096,  0.527245,   0.199327,
     0.921342,  0.708585, 0.927857,  0.653586,  0.675933,  0.327532,   0.957229,
     0.0087442, 0.2199,   0.658591,  0.337779,  0.974546,  0.557288,   0.339734,
     0.35538,   0.164195, 0.587851,  0.733944,  0.59282,   0.640421,   0.559591,
     0.322946,  0.375221, 0.606205,  0.190799,  0.976015,  0.00200318, 0.521933,
     0.508927,  0.806918, 0.417564,  0.702375,  0.532378,  0.422196,   0.82094,
     0.733604,  0.972282, 0.656741,  0.0122729},
    {0.0399075, 0.836148,   0.808952,  0.192867,  0.660566,  0.409929,
     0.812578,  0.662829,   0.318936,  0.857829,  0.218503,  0.311533,
     0.890062,  0.865092,   0.38156,   0.856921,  0.211205,  0.0332498,
     0.376023,  0.148359,   0.302537,  0.833995,  0.0034318, 0.108112,
     0.264408,  0.692167,   0.444131,  0.373801,  0.0643668, 0.791,
     0.091478,  0.897693,   0.425801,  0.724007,  0.167691,  0.135273,
     0.938713,  0.0668382,  0.0728847, 0.557927,  0.762346,  0.801826,
     0.214256,  0.469099,   0.4717,    0.446,     0.83431,   0.470983,
     0.865237,  0.651111,   0.749633,  0.86325,   0.832437,  0.868855,
     0.49554,   0.823333,   0.969166,  0.0655952, 0.6266,    0.208567,
     0.260092,  0.727228,   0.946387,  0.549668,  0.236996,  0.998001,
     0.0364321, 0.81464,    0.573193,  0.666699,  0.216259,  0.128702,
     0.725837,  0.66575,    0.0852514, 0.592367,  0.0432513, 0.451706,
     0.854566,  0.58992,    0.737104,  0.289345,  0.866986,  0.0885026,
     0.296208,  0.693767,   0.672309,  0.187988,  0.217317,  0.110794,
     0.0811014, 0.650575,   0.122741,  0.302454,  0.0097247, 0.649931,
     0.944135,  0.189686,   0.981319,  0.168334,  0.317783,  0.644484,
     0.729121,  0.621485,   0.887784,  0.402961,  0.950482,  0.148076,
     0.733287,  0.370938,   0.636658,  0.418223,  0.0334449, 0.329543,
     0.0325638, 0.135314,   0.197011,  0.886637,  0.0423328, 0.867601,
     0.989671,  0.0838674,  0.340895,  0.96104,   0.101073,  0.0844307,
     0.736135,  0.839334,   0.292225,  0.286534,  0.355032,  0.117852,
     0.0634923, 0.0426378,  0.205546,  0.568751,  0.225698,  0.79121,
     0.860773,  0.553576,   0.528287,  0.730047,  0.176367,  0.563489,
     0.878454,  0.4829,     0.557838,  0.555941,  0.485636,  0.176532,
     0.377421,  0.879396,   0.755481,  0.886515,  0.823925,  0.913512,
     0.978146,  0.280511,   0.954899,  0.972675,  0.397762,  0.367694,
     0.642874,  0.163044,   0.0665626, 0.0349964, 0.149465,  0.552446,
     0.971169,  0.00253421, 0.719125,  0.685735,  0.976057,  0.0643632,
     0.373463,  0.524768,   0.907723,  0.325359,  0.88866,   0.365902,
     0.384573,  0.544759,   0.237875,  0.615681,  0.324698,  0.969512,
     0.548484,  0.326164,   0.104897,  0.345394,  0.0425979, 0.847307,
     0.351088,  0.628914,   0.304546,  0.703769,  0.0577211, 0.754677,
     0.380988,  0.625548},
    {0.489387,  0.923077,   0.0783643, 0.121716,  0.692644,  0.457451,
     0.276758,  0.345079,   0.969247,  0.57227,   0.548554,  0.0308901,
     0.504404,  0.69626,    0.585199,  0.389034,  0.384656,  0.0256698,
     0.766918,  0.410848,   0.966205,  0.79993,   0.199858,  0.970227,
     0.936303,  0.697611,   0.854346,  0.594354,  0.135124,  0.151035,
     0.894914,  0.4585,     0.793943,  0.950947,  0.920603,  0.464861,
     0.474201,  0.931934,   0.78248,   0.551635,  0.215197,  0.790242,
     0.459835,  0.102377,   0.675685,  0.896461,  0.978021,  0.264768,
     0.458271,  0.244692,   0.797141,  0.861538,  0.956045,  0.726488,
     0.965567,  0.374334,   0.888114,  0.0367514, 0.814428,  0.297864,
     0.171779,  0.476439,   0.94384,   0.704079,  0.85163,   0.576756,
     0.696098,  0.0628058,  0.753545,  0.679075,  0.427212,  0.10773,
     0.322125,  0.251179,   0.0213365, 0.428286,  0.662618,  0.485228,
     0.570742,  0.787245,   0.201268,  0.303277,  0.14483,   0.511154,
     0.765956,  0.815642,   0.365019,  0.488631,  0.985269,  0.315578,
     0.653884,  0.576079,   0.0170916, 0.916686,  0.111765,  0.589392,
     0.785103,  0.336932,   0.870351,  0.625006,  0.745906,  0.70279,
     0.662615,  0.00930565, 0.230549,  0.401635,  0.0176488, 0.204163,
     0.669392,  0.96053,    0.521711,  0.0273353, 0.0961151, 0.80504,
     0.0488521, 0.139074,   0.654751,  0.971807,  0.90717,   0.756375,
     0.723059,  0.547407,   0.742198,  0.75425,   0.472401,  0.20726,
     0.456815,  0.328014,   0.476365,  0.238265,  0.811749,  0.385843,
     0.542735,  0.303531,   0.866868,  0.404284,  0.415172,  0.406272,
     0.33917,   0.733431,   0.899857,  0.165182,  0.512119,  0.770638,
     0.959262,  0.508775,   0.553912,  0.216453,  0.8742,    0.712274,
     0.792348,  0.168048,   0.176748,  0.413402,  0.618123,  0.840562,
     0.385577,  0.218313,   0.204308,  0.613561,  0.703624,  0.891464,
     0.884971,  0.503112,   0.701455,  0.112713,  0.971837,  0.487696,
     0.856469,  0.701452,   0.217248,  0.571693,  0.186358,  0.698709,
     0.511845,  0.532924,   0.647535,  0.738824,  0.255174,  0.772635,
     0.739927,  0.498728,   0.42184,   0.551041,  0.298538,  0.755922,
     0.864868,  0.0902273,  0.743987,  0.430285,  0.470377,  0.00646966,
     0.228063,  0.22036,    0.816649,  0.167843,  0.95912,   0.959966,
     0.0803308, 0.628141},
    {0.0983166, 0.231434,  0.370936,    0.0511373, 0.482403,  0.416255,
     0.234976,  0.850986,  0.843805,    0.987723,  0.239118,  0.504685,
     0.341078,  0.791823,  0.824074,    0.166689,  0.621826,  0.966088,
     0.010574,  0.556867,  0.642487,    0.888805,  0.806838,  0.869871,
     0.658076,  0.475849,  0.160111,    0.967578,  0.246661,  0.774931,
     0.383279,  0.935214,  0.467003,    0.0692534, 0.135842,  0.840828,
     0.0777706, 0.406163,  0.800437,    0.47987,   0.615361,  0.330725,
     0.531394,  0.322611,  0.616737,    0.335342,  0.543329,  0.972376,
     0.624565,  0.173444,  0.411682,    0.167478,  0.413785,  0.644701,
     0.558134,  0.808491,  0.00129612,  0.475903,  0.558136,  0.295163,
     0.489748,  0.348762,  0.846196,    0.0211206, 0.594474,  0.603696,
     0.835097,  0.149103,  0.786506,    0.589929,  0.96973,   0.652061,
     0.727313,  0.380537,  0.869955,    0.242485,  0.974361,  0.764232,
     0.934054,  0.55816,   0.180715,    0.999335,  0.315056,  0.66249,
     0.164857,  0.914414,  0.28878,     0.864618,  0.134725,  0.229658,
     0.941864,  0.0837858, 0.906289,    0.755812,  0.536082,  0.688423,
     0.519479,  0.243662,  0.304109,    0.229307,  0.897259,  0.0932868,
     0.449599,  0.263514,  0.908033,    0.836954,  0.500925,  0.658662,
     0.461458,  0.637997,  0.572776,    0.930431,  0.408959,  0.576362,
     0.703376,  0.914865,  0.182291,    0.427341,  0.997607,  0.986158,
     0.858105,  0.532696,  0.693141,    0.774464,  0.549877,  0.0889936,
     0.135659,  0.965772,  0.682522,    0.10826,   0.0405823, 0.850862,
     0.113788,  0.818232,  0.207584,    0.0196938, 0.696724,  0.0320313,
     0.26127,   0.677636,  0.807842,    0.843814,  0.347488,  0.895268,
     0.755959,  0.949435,  0.188763,    0.504501,  0.795785,  0.281585,
     0.239966,  0.952775,  0.0368706,   0.0734981, 0.574649,  0.0837486,
     0.21851,   0.20845,   0.851054,    0.132024,  0.737919,  0.694524,
     0.471757,  0.120688,  0.000807606, 0.964571,  0.987636,  0.574597,
     0.859396,  0.912937,  0.156074,    0.575849,  0.850698,  0.105221,
     0.202602,  0.681207,  0.682935,    0.524632,  0.146012,  0.766397,
     0.108557,  0.953911,  0.56747,     0.495365,  0.882237,  0.143321,
     0.930848,  0.959365,  0.542371,    0.463048,  0.405563,  0.299376,
     0.997584,  0.0947057, 0.712891,    0.650894,  0.614786,  0.765118,
     0.733955,  0.935664},
};

static const std::vector<float> costs = {
    280.795, 475.971, 915.52,  941.749, 13.4765, 531.403, 214.794, 268.995,
    413.841, 852.533, 475.388, 264.203, 474.485, 512.488, 530.999, 695.348,
    202.866, 219.572, 701.328, 637.398, 9.73705, 342.469, 987.674, 668.258,
    156.809, 788.511, 779.247, 731.444, 124.251, 627.801, 231.193, 545.205,
    911.181, 658.935, 647.321, 480.229, 499.37,  777.425, 408.22,  220.389,
    117.892, 901.667, 687.744, 988.512, 434.503, 699.242, 959.568, 829.498,
    398.769, 536.285, 885.449, 733.884, 237.018, 914.85,  791.507, 564.504,
    125.807, 797.632, 145.911, 766.65,  564.547, 487.861, 679.907, 647.596,
    823.785, 938.981, 567.202, 994.701, 327.157, 908.776, 823.074, 269.294,
    263.026, 469.984, 460.383, 87.8785, 697.721, 113.541, 779.556, 985.676,
    711.342, 89.893,  45.0566, 769.246, 720.495, 104.347, 760.493, 113.787,
    270.859, 461.867, 686.126, 977.549, 71.92,   571.06,  701.779, 823.54,
    928.635, 379.039, 914.12,  565.401, 580.582, 750.809, 113.074, 807.425,
    643.763, 68.8843, 896.389, 823.519, 302.96,  360.806, 112.432, 295.192,
    44.4943, 125.267, 266.796, 574.586, 33.6964, 62.8091, 955.027, 778.373,
    733.878, 851.741, 886.61,  328.944, 461.789, 642.502, 670.314, 307.337,
    723.417, 845.635, 435.231, 574.573, 617.577, 888.664, 500.88,  349.37,
    629.6,   852.279, 589.97,  626.938, 912.245, 752.9,   18.0174, 105.451,
    625.923, 502.056, 753.424, 4.77399, 161.514, 143.63,  162.566, 845.351,
    896.378, 418.239, 264.52,  838.513, 712.36,  729.92,  828.982, 30.7942,
    429.265, 469.05,  106.783, 649.744, 733.373, 908.463, 942.644, 817.048,
    900.626, 163.708, 208.462, 864.497, 854.25,  103.871, 323.687, 666.481,
    155.321, 440.209, 798.241, 990.901, 776.122, 391.212, 710.999, 512.303,
    977.844, 823.952, 25.745,  897.088, 650.194, 957.208, 277.445, 989.18,
    978.396, 900.05,  270.188, 716.965, 914.671, 106.958, 769.357, 655.847};

static const std::vector<float> min_impressions = {0.342064, 0.440275, 0.381263,
                                                   0.140299, 0.173776};

//
#endif
