#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[52], events[42]),events[35]),events[0]),events[84]),events[61]),events[73]),events[9]),events[87]),events[89]),events[71]),cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(events[17], events[4]),events[75]),events[80]),events[76]),events[18]),events[11]),events[29]),events[42]),events[60]),events[73]),cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[90], events[32]),events[26]),events[8]),events[60]),events[97]),events[85]),events[9]),events[81]),events[67]),events[51]),cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(events[42], events[4]),events[98]),events[24]),events[29]),events[80]),events[41]),events[39]),events[66]),events[70]),events[64]),cons_excl(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(events[28], events[72]),events[11]),events[68]),events[55]),events[54]),events[35]),events[88]),events[2]),events[49]),events[47]),cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(events[18], events[34]),events[20]),events[73]),events[15]),events[84]),events[35]),events[12]),events[65]),events[39]),events[38]),cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(events[44], events[73]),events[70]),events[12]),events[97]),events[36]),events[62]),events[86]),events[9]),events[40]),events[80]),cons_incl(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_incl(cons_excl(events[56], events[91]),events[54]),events[44]),events[65]),events[11]),events[39]),events[48]),events[38]),events[69]),events[41]),cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(cons_incl(events[53], events[57]),events[55]),events[78]),events[6]),events[47]),events[90]),events[5]),events[68]),events[69]),events[72]),cons_excl(cons_excl(cons_incl(cons_excl(cons_excl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(events[98], events[15]),events[2]),events[28]),events[37]),events[82]),events[68]),events[58]),events[57]),events[64]),events[44])};


static const std::vector< std::vector<float> > prob = {{0.266274, 0.0861264, 0.712063, 0.452131, 0.345618, 0.580149, 0.526847, 0.498904, 0.355439, 0.109389, 0.301059, 0.0119227, 0.714643, 0.898516, 0.209365, 0.0375912, 0.0225142, 0.0512318, 0.342995, 0.0840568, 0.223609, 0.71761, 0.521805, 0.991317, 0.0562309, 0.559902, 0.972175, 0.578537, 0.139774, 0.422381, 0.418844, 0.377258, 0.522167, 0.868634, 0.24274, 0.257306, 0.071373, 0.113463, 0.483516, 0.597258, 0.367257, 0.695851, 0.246811, 0.417253, 0.327357, 0.918446, 0.226668, 0.270725, 0.760619, 0.13249, 0.0948089, 0.174837, 0.327653, 0.811023, 0.736029, 0.527788, 0.926002, 0.934263, 0.497187, 0.974267, 0.751385, 0.798759, 0.604614, 0.508516, 0.210285, 0.920352, 0.128527, 0.269858, 0.822255, 0.902336, 0.0469666, 0.765636, 0.599652, 0.915078, 0.968732, 0.817793, 0.083793, 0.366186, 0.742859, 0.902982, 0.0838322, 0.339779, 0.350647, 0.0359849, 0.393176, 0.108662, 0.263105, 0.554424, 0.439187, 0.0596767, 0.775189, 0.714997, 0.0201947, 0.93096, 0.0567401, 0.126359, 0.108857, 0.954955, 0.0279697, 0.566264},
{0.627228, 0.552375, 0.771514, 0.0312349, 0.639906, 0.724065, 0.227354, 0.75778, 0.912064, 0.913525, 0.029934, 0.245846, 0.0096538, 0.254707, 0.549485, 0.0928353, 0.699512, 0.310061, 0.373733, 0.331943, 0.561512, 0.000536907, 0.307662, 0.977446, 0.982557, 0.471349, 0.739923, 0.266512, 0.100572, 0.262629, 0.485567, 0.377018, 0.995961, 0.448074, 0.45249, 0.262508, 0.423037, 0.382023, 0.302055, 0.366663, 0.0759888, 0.417447, 0.251818, 0.536205, 0.990761, 0.918539, 0.0956694, 0.853311, 0.0143185, 0.161403, 0.460766, 0.629048, 0.291242, 0.227897, 0.740373, 0.246773, 0.991088, 0.311583, 0.280831, 0.364798, 0.925368, 0.755638, 0.118549, 0.82821, 0.706931, 0.514267, 0.449444, 0.151284, 0.49996, 0.745944, 0.64763, 0.47638, 0.974885, 0.894724, 0.651923, 0.0988289, 0.226841, 0.406986, 0.441178, 0.698765, 0.0111493, 0.298025, 0.169211, 0.446214, 0.388822, 0.795238, 0.837617, 0.103019, 0.439314, 0.28098, 0.474202, 0.967055, 0.498917, 0.400674, 0.576853, 0.388328, 0.475987, 0.36453, 0.36587, 0.127884},
{0.235573, 0.292563, 0.124706, 0.204836, 0.171613, 0.11308, 0.950077, 0.808228, 0.644306, 0.53619, 0.608102, 0.14265, 0.736535, 0.372792, 0.937913, 0.790626, 0.324149, 0.775628, 0.932921, 0.889698, 0.332228, 0.935719, 0.760772, 0.289954, 0.14628, 0.803601, 0.79096, 0.655276, 0.895815, 0.225469, 0.564533, 0.408224, 0.44588, 0.647618, 0.0270551, 0.0438952, 0.636468, 0.919794, 0.738356, 0.968274, 0.480222, 0.439626, 0.723474, 0.112687, 0.12502, 0.769289, 0.991738, 0.660066, 0.278782, 0.896545, 0.312045, 0.931787, 0.237935, 0.0495997, 0.53704, 0.515916, 0.960358, 0.347473, 0.562604, 0.588248, 0.308966, 0.830128, 0.141316, 0.608155, 0.95185, 0.436937, 0.957684, 0.689243, 0.870632, 0.213451, 0.185383, 0.19656, 0.939509, 0.0128896, 0.0445305, 0.596589, 0.344928, 0.316806, 0.251018, 0.375749, 0.139199, 0.375913, 0.864498, 0.0857052, 0.335985, 0.117257, 0.447014, 0.882806, 0.222468, 0.325782, 0.190988, 0.827364, 0.512793, 0.121004, 0.176514, 0.700865, 0.502809, 0.0822516, 0.975188, 0.0585645},
{0.393214, 0.228158, 0.214007, 0.00294883, 0.780112, 0.622616, 0.878498, 0.55617, 0.691865, 0.413046, 0.969332, 0.00472047, 0.436883, 0.253062, 0.914175, 0.541488, 0.470957, 0.0161102, 0.649312, 0.743058, 0.632248, 0.478109, 0.4261, 0.322658, 0.590618, 0.267137, 0.984502, 0.902659, 0.87251, 0.647029, 0.100933, 0.57565, 0.233387, 0.227952, 0.748885, 0.881673, 0.0111846, 0.198936, 0.795836, 0.0130096, 0.0694244, 0.238814, 0.965762, 0.073271, 0.788814, 0.329401, 0.0294793, 0.56511, 0.28456, 0.897801, 0.621292, 0.946374, 0.409246, 0.696585, 0.869093, 0.391944, 0.910674, 0.268824, 0.454688, 0.105403, 0.837061, 0.353559, 0.229555, 0.712643, 0.539469, 0.303761, 0.664695, 0.332608, 0.801126, 0.810603, 0.668645, 0.465567, 0.605512, 0.885703, 0.353385, 0.641713, 0.490102, 0.0806728, 0.886949, 0.202581, 0.229414, 0.639742, 0.610896, 0.145406, 0.133134, 0.453135, 0.17288, 0.266813, 0.830656, 0.105071, 0.741792, 0.753469, 0.568305, 0.799851, 0.913948, 0.361227, 0.796572, 0.877577, 0.814609, 0.461125},
{0.501911, 0.318572, 0.651643, 0.051212, 0.178637, 0.540168, 0.935285, 0.381357, 0.866867, 0.638539, 0.0836344, 0.369711, 0.72129, 0.927141, 0.41298, 0.905786, 0.145351, 0.114655, 0.079813, 0.783893, 0.606058, 0.579203, 0.324318, 0.700594, 0.0968024, 0.504051, 0.607878, 0.403031, 0.655774, 0.678267, 0.689604, 0.665468, 0.252139, 0.0537361, 0.961082, 0.743773, 0.753211, 0.51111, 0.925755, 0.341899, 0.510287, 0.684803, 0.208123, 0.754952, 0.75258, 0.700574, 0.401274, 0.143399, 0.598635, 0.609085, 0.0020497, 0.188833, 0.091547, 0.659925, 0.319447, 0.0241083, 0.207837, 0.445943, 0.11004, 0.857883, 0.271845, 0.163983, 0.130335, 0.467119, 0.176583, 0.24471, 0.0670248, 0.259546, 0.282502, 0.804441, 0.188285, 0.591664, 0.811905, 0.684652, 0.0106651, 0.563757, 0.728296, 0.146859, 0.787597, 0.155105, 0.20669, 0.561499, 0.543553, 0.498799, 0.307104, 0.683374, 0.683612, 0.408786, 0.662543, 0.434976, 0.873376, 0.105483, 0.13872, 0.519662, 0.887546, 0.150724, 0.0187685, 0.54348, 0.887247, 0.230636},
{0.112233, 0.598806, 0.125784, 0.327664, 0.00735049, 0.577773, 0.728973, 0.438276, 0.225672, 0.136871, 0.302714, 0.336568, 0.649139, 0.538421, 0.597153, 0.97964, 0.357255, 0.0912735, 0.575894, 0.664889, 0.306571, 0.0433235, 0.177334, 0.373669, 0.0147834, 0.878173, 0.318964, 0.701353, 0.553342, 0.827737, 0.431625, 0.474579, 0.655047, 0.240829, 0.132435, 0.614092, 0.237678, 0.536876, 0.456559, 0.791084, 0.680555, 0.0332525, 0.856862, 0.051906, 0.643843, 0.697865, 0.181443, 0.803735, 0.486353, 0.0820739, 0.0987093, 0.982937, 0.379484, 0.280359, 0.623831, 0.518056, 0.706782, 0.7636, 0.744412, 0.818351, 0.452624, 0.89297, 0.843432, 0.884057, 0.558506, 0.0839743, 0.677371, 0.097492, 0.324159, 0.348054, 0.316175, 0.354992, 0.33656, 0.473716, 0.063914, 0.66825, 0.0389242, 0.232226, 0.744436, 0.982151, 0.0939655, 0.719333, 0.557551, 0.718686, 0.468058, 0.245639, 0.617779, 0.271528, 0.798302, 0.0995173, 0.435122, 0.001778, 0.753927, 0.590875, 0.433795, 0.670948, 0.29504, 0.966634, 0.794, 0.901359},
{0.0598937, 0.969548, 0.689507, 0.591377, 0.600861, 0.166237, 0.457111, 0.39665, 0.26514, 0.694934, 0.162373, 0.291834, 0.259368, 0.338327, 0.314139, 0.237799, 0.462476, 0.658692, 0.149933, 0.18676, 0.496727, 0.702373, 0.964498, 0.508554, 0.975078, 0.769901, 0.13085, 0.121629, 0.0599297, 0.691891, 0.977566, 0.0315457, 0.968666, 0.570126, 0.989199, 0.580772, 0.817472, 0.542584, 0.112001, 0.49437, 0.598426, 0.652925, 0.201318, 0.851422, 0.271383, 0.760941, 0.575795, 0.178405, 0.213959, 0.869253, 0.290186, 0.211526, 0.615377, 0.523395, 0.20246, 0.125035, 0.829927, 0.751356, 0.352879, 0.367061, 0.927413, 0.0948253, 0.299834, 0.353728, 0.639651, 0.179327, 0.49039, 0.563714, 0.459608, 0.830484, 0.266174, 0.493619, 0.874305, 0.774246, 0.848452, 0.202576, 0.867696, 0.0473757, 0.869362, 0.892535, 0.0927507, 0.477084, 0.996715, 0.338836, 0.0195548, 0.458322, 0.196377, 0.497909, 0.280228, 0.80103, 0.261163, 0.584022, 0.141331, 0.961058, 0.345385, 0.853795, 0.490686, 0.465885, 0.0376934, 0.353274},
{0.0911393, 0.801175, 0.113711, 0.183841, 0.401256, 0.0551012, 0.817766, 0.534203, 0.113137, 0.742252, 0.585972, 0.758073, 0.28452, 0.107936, 0.904332, 0.823268, 0.951926, 0.924129, 0.809343, 0.296805, 0.257291, 0.969813, 0.980035, 0.319204, 0.381797, 0.807119, 0.078113, 0.24864, 0.715989, 0.728802, 0.396727, 0.330393, 0.353561, 0.406702, 0.0604427, 0.284836, 0.273661, 0.173693, 0.729461, 0.301873, 0.526073, 0.946854, 0.869671, 0.252558, 0.309768, 0.001955, 0.393832, 0.570296, 0.069594, 0.276978, 0.707972, 0.0477916, 0.855427, 0.512176, 0.805186, 0.513425, 0.686648, 0.989354, 0.932384, 0.797336, 0.560459, 0.14702, 0.333213, 0.415889, 0.270918, 0.53545, 0.766501, 0.338849, 0.990167, 0.307958, 0.272283, 0.228266, 0.6556, 0.338327, 0.934824, 0.477758, 0.568305, 0.0854683, 0.248791, 0.0052309, 0.0826542, 0.725483, 0.253768, 0.555765, 0.363301, 0.43257, 0.419459, 0.447852, 0.901167, 0.242758, 0.725558, 0.0434728, 0.086538, 0.805065, 0.1197, 0.845958, 0.83038, 0.783153, 0.56172, 0.732435},
{0.406616, 0.125533, 0.902595, 0.024988, 0.657518, 0.505777, 0.216951, 0.508877, 0.355614, 0.705264, 0.974351, 0.727371, 0.554917, 0.674595, 0.00862346, 0.628739, 0.452107, 0.748064, 0.123795, 0.89624, 0.0890697, 0.598791, 0.0320383, 0.0560738, 0.528806, 0.963687, 0.385834, 0.503219, 0.220948, 0.952137, 0.285525, 0.632639, 0.710361, 0.722544, 0.958273, 0.367189, 0.592017, 0.625942, 0.128058, 0.755105, 0.74855, 0.695575, 0.253521, 0.355723, 0.0250164, 0.160443, 0.803794, 0.00360145, 0.250537, 0.856693, 0.0326867, 0.19521, 0.680977, 0.729142, 0.301672, 0.156426, 0.591313, 0.0814581, 0.749797, 0.814105, 0.158673, 0.759649, 0.947061, 0.273225, 0.201404, 0.697373, 0.410164, 0.272389, 0.761866, 0.450149, 0.993733, 0.657259, 0.758705, 0.128536, 0.545878, 0.441775, 0.706803, 0.931326, 0.602027, 0.642144, 0.198617, 0.101281, 0.322956, 0.640554, 0.400816, 0.197671, 0.137332, 0.546325, 0.890859, 0.470552, 0.27999, 0.428604, 0.583023, 0.997998, 0.187192, 0.111877, 0.666102, 0.391605, 0.254419, 0.50883},
{0.387015, 0.502564, 0.748374, 0.0200354, 0.481262, 0.655648, 0.730081, 0.111077, 0.0247956, 0.301698, 0.828284, 0.469299, 0.531046, 0.0455047, 0.282591, 0.972877, 0.169228, 0.964053, 0.566693, 0.739584, 0.0014652, 0.721481, 0.669431, 0.68364, 0.963791, 0.904856, 0.46556, 0.00563756, 0.574759, 0.273204, 0.703782, 0.592294, 0.719875, 0.172748, 0.421073, 0.540109, 0.990823, 0.904626, 0.191315, 0.17298, 0.77188, 0.766934, 0.247644, 0.737101, 0.928877, 0.974315, 0.0137072, 0.791603, 0.732955, 0.107803, 0.487094, 0.296002, 0.410755, 0.261228, 0.417027, 0.780168, 0.654641, 0.94916, 0.80313, 0.187249, 0.267524, 0.451357, 0.27341, 0.21447, 0.261978, 0.394884, 0.513433, 0.614617, 0.269656, 0.863812, 0.729843, 0.229142, 0.5121, 0.0954338, 0.57335, 0.764165, 0.607977, 0.0500218, 0.367712, 0.141073, 0.589779, 0.259294, 0.149065, 0.802473, 0.0997785, 0.499063, 0.755273, 0.328175, 0.268301, 0.182249, 0.0398225, 0.161743, 0.962147, 0.610712, 0.66743, 0.421159, 0.571665, 0.0397733, 0.0103028, 0.97048},
};

static const std::vector<float> costs = {673.55, 269.709, 904.792, 739.778, 899.856, 371.512, 17.4574, 596.669, 367.992, 372.331, 651.915, 812.065, 858.443, 73.5188, 487.059, 625.869, 869.967, 87.8116, 255.142, 706.78, 526.651, 994.997, 41.5893, 526.399, 619.869, 506.254, 845.75, 392.828, 295.121, 895.37, 544.142, 248.281, 414.087, 456.18, 260.523, 675.046, 683.841, 403.629, 79.1299, 94.1805, 281.265, 607.477, 941.312, 248.532, 925.688, 918.802, 600.144, 618.966, 244.83, 425.576, 818.274, 359.211, 909.136, 769.342, 347.776, 635.578, 469.083, 356.885, 697.673, 679.458, 510.47, 482.445, 633.722, 899.517, 406.727, 185.108, 616.111, 349.128, 568.873, 133.379, 164.085, 289.314, 727.648, 839.672, 285.424, 729.398, 989.102, 57.8001, 159.045, 392.303, 748.864, 676.732, 948.549, 643.711, 984.094, 194.108, 449.859, 835.755, 687.263, 319.78, 644.821, 700.683, 464.537, 481.929, 175.831, 653.275, 180.678, 91.0698, 821.159, 21.0382};

static const std::vector<float> min_impressions = {0.8701, 0.889071, 0.154715, 0.0235606, 0.538288, 0.441914, 0.41341, 0.387345, 0.565677, 0.0859646};

//
#endif
