#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 200;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99), cons_event(100), cons_event(101), cons_event(102), cons_event(103), cons_event(104), cons_event(105), cons_event(106), cons_event(107), cons_event(108), cons_event(109), cons_event(110), cons_event(111), cons_event(112), cons_event(113), cons_event(114), cons_event(115), cons_event(116), cons_event(117), cons_event(118), cons_event(119), cons_event(120), cons_event(121), cons_event(122), cons_event(123), cons_event(124), cons_event(125), cons_event(126), cons_event(127), cons_event(128), cons_event(129), cons_event(130), cons_event(131), cons_event(132), cons_event(133), cons_event(134), cons_event(135), cons_event(136), cons_event(137), cons_event(138), cons_event(139), cons_event(140), cons_event(141), cons_event(142), cons_event(143), cons_event(144), cons_event(145), cons_event(146), cons_event(147), cons_event(148), cons_event(149), cons_event(150), cons_event(151), cons_event(152), cons_event(153), cons_event(154), cons_event(155), cons_event(156), cons_event(157), cons_event(158), cons_event(159), cons_event(160), cons_event(161), cons_event(162), cons_event(163), cons_event(164), cons_event(165), cons_event(166), cons_event(167), cons_event(168), cons_event(169), cons_event(170), cons_event(171), cons_event(172), cons_event(173), cons_event(174), cons_event(175), cons_event(176), cons_event(177), cons_event(178), cons_event(179), cons_event(180), cons_event(181), cons_event(182), cons_event(183), cons_event(184), cons_event(185), cons_event(186), cons_event(187), cons_event(188), cons_event(189), cons_event(190), cons_event(191), cons_event(192), cons_event(193), cons_event(194), cons_event(195), cons_event(196), cons_event(197), cons_event(198), cons_event(199)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(events[156], events[152]),events[178]),events[155]),events[130]),events[148]),events[163]),events[64]),events[17]),events[44]),events[83]),cons_excl(cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(events[26], events[68]),events[125]),events[120]),events[51]),events[65]),events[162]),events[122]),events[58]),events[5]),events[84]),cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(events[72], events[75]),events[138]),events[64]),events[70]),events[184]),events[89]),events[55]),events[94]),events[29]),events[74]),cons_excl(cons_excl(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_incl(events[145], events[190]),events[100]),events[20]),events[10]),events[48]),events[40]),events[63]),events[178]),events[117]),events[6]),cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(events[117], events[147]),events[198]),events[78]),events[141]),events[113]),events[52]),events[44]),events[111]),events[26]),events[108])};


static const std::vector< std::vector<float> > prob = {{0.826972, 0.442962, 0.79329, 0.684535, 0.00814282, 0.688069, 0.442204, 0.914946, 0.20306, 0.566535, 0.607035, 0.847728, 0.84005, 0.33557, 0.499781, 0.928421, 0.00170015, 0.941877, 0.781584, 0.0553493, 0.00261693, 0.00923089, 0.498374, 0.278555, 0.766205, 0.646466, 0.724061, 0.182559, 0.242193, 0.276033, 0.794518, 0.484045, 0.391543, 0.985398, 0.103809, 0.322057, 0.21813, 0.836892, 0.389602, 0.89588, 0.588811, 0.0291204, 0.771712, 0.272107, 0.43265, 0.211557, 0.11824, 0.575533, 0.241295, 0.0163408, 0.0217437, 0.526179, 0.237572, 0.549006, 0.197033, 0.355231, 0.535987, 0.496657, 0.754287, 0.312568, 0.693168, 0.841541, 0.963431, 0.208208, 0.48533, 0.780945, 0.598338, 0.605276, 0.233752, 0.684223, 0.430876, 0.777911, 0.37423, 0.427081, 0.0721137, 0.729466, 0.733364, 0.0897494, 0.589579, 0.446595, 0.203621, 0.952355, 0.628968, 0.390191, 0.649832, 0.383382, 0.43725, 0.691388, 0.155838, 0.21791, 0.517386, 0.593076, 0.980407, 0.275, 0.264566, 0.584537, 0.626841, 0.216137, 0.188253, 0.106456, 0.00122509, 0.520486, 0.551866, 0.752856, 0.678816, 0.678982, 0.413144, 0.96745, 0.903109, 0.960055, 0.850155, 0.37376, 0.40407, 0.128947, 0.0720147, 0.399969, 0.884762, 0.666961, 0.0791217, 0.948394, 0.0419281, 0.000522451, 0.6931, 0.637626, 0.946821, 0.283538, 0.554595, 0.991394, 0.713953, 0.880185, 0.672907, 0.0933717, 0.868707, 0.942708, 0.677884, 0.237785, 0.133543, 0.422342, 0.557777, 0.839667, 0.213087, 0.148047, 0.170536, 0.874106, 0.534449, 0.135121, 0.75936, 0.14817, 0.310249, 0.588917, 0.568588, 0.565081, 0.946516, 0.815471, 0.262256, 0.6125, 0.980424, 0.223307, 0.0177318, 0.412581, 0.257408, 0.0794057, 0.57069, 0.00787329, 0.683931, 0.731626, 0.614374, 0.990164, 0.511657, 0.850966, 0.372255, 0.445569, 0.448809, 0.0252735, 0.310879, 0.910264, 0.977422, 0.531756, 0.42651, 0.657827, 0.301491, 0.647353, 0.520176, 0.0861593, 0.608512, 0.567507, 0.689558, 0.534083, 0.599779, 0.824504, 0.970517, 0.559922, 0.174179, 0.600308, 0.445013, 0.680238, 0.883947, 0.725152, 0.2055, 0.946636},
{0.447644, 0.15826, 0.325479, 0.449772, 0.0150855, 0.408111, 0.404248, 0.735814, 0.175611, 0.467166, 0.455696, 0.980657, 0.181737, 0.826456, 0.611732, 0.0342857, 0.341484, 0.633695, 0.559546, 0.609878, 0.891158, 0.139554, 0.887655, 0.114791, 0.00347869, 0.112917, 0.963486, 0.232157, 0.240047, 0.482767, 0.377028, 0.382654, 0.677906, 0.84664, 0.128993, 0.832783, 0.130984, 0.391179, 0.540326, 0.0182281, 0.103722, 0.287074, 0.0934443, 0.597693, 0.0108688, 0.648344, 0.774154, 0.174603, 0.662143, 0.0304597, 0.840536, 0.85512, 0.263368, 0.386674, 0.560578, 0.38197, 0.914862, 0.493844, 0.813338, 0.968692, 0.768619, 0.0800879, 0.877826, 0.490187, 0.793618, 0.979587, 0.731901, 0.674707, 0.545144, 0.747883, 0.475054, 0.3069, 0.491903, 0.208905, 0.487399, 0.999875, 0.783097, 0.975669, 0.0853472, 0.478569, 0.766915, 0.630161, 0.872502, 0.511992, 0.905555, 0.534975, 0.0523669, 0.457527, 0.591532, 0.247009, 0.749055, 0.357028, 0.938318, 0.355828, 0.146162, 0.898357, 0.50805, 0.186312, 0.954971, 0.402968, 0.175257, 0.703889, 0.36063, 0.79177, 0.53365, 0.422265, 0.935871, 0.041064, 0.605718, 0.867207, 0.990517, 0.664542, 0.0794888, 0.94177, 0.256296, 0.993524, 0.247721, 0.725285, 0.557607, 0.79257, 0.954597, 0.424398, 0.665039, 0.063837, 0.776675, 0.622259, 0.288377, 0.676158, 0.985065, 0.70437, 0.489033, 0.808561, 0.032635, 0.0566301, 0.962338, 0.959761, 0.841371, 0.394287, 0.18623, 0.135464, 0.0504119, 0.913741, 0.101881, 0.264613, 0.179773, 0.59214, 0.377982, 0.0500216, 0.111189, 0.444332, 0.517031, 0.48895, 0.294227, 0.552285, 0.197357, 0.395176, 0.480529, 0.117728, 0.754639, 0.304786, 0.539559, 0.281344, 0.569535, 0.851666, 0.320644, 0.641331, 0.82846, 0.476614, 0.551138, 0.0332572, 0.185759, 0.654749, 0.973007, 0.81309, 0.573052, 0.886833, 0.631823, 0.617737, 0.515306, 0.63452, 0.662696, 0.416961, 0.485703, 0.900385, 0.865064, 0.615651, 0.667493, 0.020164, 0.465041, 0.785378, 0.611531, 0.673259, 0.463262, 0.488325, 0.76951, 0.102782, 0.83402, 0.91194, 0.914148, 0.331818},
{0.843832, 0.72065, 0.754863, 0.710593, 0.63099, 0.462848, 0.379858, 0.0778643, 0.150551, 0.361184, 0.541365, 0.238373, 0.834952, 0.784745, 0.775629, 0.880685, 0.46186, 0.411309, 0.3027, 0.572499, 0.60815, 0.8169, 0.987762, 0.565592, 0.825929, 0.0107545, 0.170872, 0.696569, 0.866347, 0.749268, 0.797985, 0.929248, 0.53686, 0.0897725, 0.155817, 0.655026, 0.815732, 0.950049, 0.788205, 0.969891, 0.307741, 0.728383, 0.907356, 0.894491, 0.33144, 0.0869509, 0.661805, 0.360362, 0.851986, 0.0505201, 0.572806, 0.977407, 0.0237108, 0.249033, 0.742129, 0.897262, 0.0804417, 0.619792, 0.0370296, 0.428476, 0.0134406, 0.340827, 0.20763, 0.901048, 0.429045, 0.528626, 0.390195, 0.598717, 0.468485, 0.1502, 0.0371191, 0.518952, 0.669935, 0.167436, 0.970437, 0.364668, 0.743779, 0.678543, 0.924648, 0.880714, 0.914001, 0.90865, 0.0205687, 0.43781, 0.0839267, 0.731893, 0.851399, 0.373085, 0.246942, 0.0810223, 0.564739, 0.931503, 0.482057, 0.777006, 0.876351, 0.515004, 0.474937, 0.795793, 0.992125, 0.801123, 0.744897, 0.557939, 0.587841, 0.332586, 0.0711156, 0.227345, 0.403777, 0.0964988, 0.104121, 0.385399, 0.653704, 0.470068, 0.684247, 0.640651, 0.0538967, 0.0605223, 0.256158, 0.592136, 0.2869, 0.427125, 0.0953897, 0.601057, 0.016626, 0.00959529, 0.212616, 0.634872, 0.162169, 0.195775, 0.745353, 0.63353, 0.68973, 0.450934, 0.79299, 0.425099, 0.357899, 0.692654, 0.417836, 0.811988, 0.371481, 0.793916, 0.119973, 0.0555645, 0.303547, 0.497414, 0.0398411, 0.998394, 0.890143, 0.345923, 0.636228, 0.0856283, 0.0731717, 0.667688, 0.195762, 0.387998, 0.809952, 0.938048, 0.142061, 0.823878, 0.428628, 0.00825383, 0.161045, 0.15052, 0.724098, 0.76376, 0.727878, 0.42719, 0.941051, 0.274605, 0.96008, 0.229576, 0.717228, 0.436077, 0.351748, 0.509083, 0.427694, 0.575657, 0.403238, 0.324572, 0.559491, 0.0659154, 0.957295, 0.630367, 0.73582, 0.413557, 0.76786, 0.966574, 0.099223, 0.736507, 0.693902, 0.300959, 0.729018, 0.87855, 0.0924592, 0.255285, 0.0805528, 0.0269657, 0.0514109, 0.838656, 0.857392, 0.218348},
{0.540868, 0.17298, 0.767733, 0.263748, 0.423927, 0.395129, 0.0522242, 0.474622, 0.748022, 0.288942, 0.789496, 0.793523, 0.907366, 0.101917, 0.161884, 0.819031, 0.970194, 0.784359, 0.46827, 0.168314, 0.487479, 0.97101, 0.0125805, 0.398952, 0.0382405, 0.847725, 0.162356, 0.124127, 0.940248, 0.812297, 0.587854, 0.630297, 0.877251, 0.0479682, 0.244451, 0.18553, 0.166935, 0.65838, 0.487156, 0.518541, 0.793327, 0.24156, 0.869188, 0.893066, 0.29845, 0.814214, 0.782029, 0.36193, 0.870337, 0.510623, 0.927813, 0.926678, 0.598913, 0.266219, 0.271595, 0.44685, 0.255805, 0.323551, 0.684619, 0.444912, 0.141929, 0.545441, 0.524724, 0.417673, 0.211199, 0.987525, 0.846278, 0.928585, 0.190416, 0.0450801, 0.0681338, 0.295353, 0.812995, 0.186157, 0.968638, 0.820263, 0.585227, 0.154253, 0.710939, 0.474337, 0.477526, 0.462641, 0.826015, 0.793357, 0.499261, 0.481966, 0.133692, 0.52894, 0.704105, 0.121896, 0.214477, 0.89727, 0.43677, 0.864378, 0.253883, 0.123433, 0.683539, 0.995255, 0.27991, 0.287036, 0.714581, 0.313417, 0.116859, 0.61276, 0.737842, 0.629184, 0.935455, 0.398712, 0.699143, 0.0149541, 0.489658, 0.078726, 0.173035, 0.92421, 0.0459976, 0.800919, 0.0666655, 0.0323246, 0.925261, 0.25941, 0.319222, 0.70329, 0.216112, 0.456551, 0.962612, 0.905829, 0.301128, 0.492871, 0.541527, 0.154863, 0.713671, 0.572885, 0.76168, 0.616274, 0.0899328, 0.530808, 0.715819, 0.244323, 0.456974, 0.310464, 0.862478, 0.578489, 0.974723, 0.0183672, 0.84479, 0.0596183, 0.508278, 0.736786, 0.315499, 0.914495, 0.914799, 0.468851, 0.0232528, 0.433973, 0.145299, 0.301386, 0.339828, 0.917938, 0.694047, 0.670763, 0.503895, 0.831553, 0.650383, 0.807638, 0.126892, 0.406401, 0.0753783, 0.4272, 0.0342358, 0.666499, 0.802372, 0.504013, 0.762851, 0.391279, 0.848841, 0.910426, 0.343445, 0.192172, 0.989849, 0.436465, 0.538561, 0.25981, 0.480999, 0.37359, 0.319529, 0.780854, 0.640398, 0.652216, 0.645963, 0.536607, 0.995844, 0.682499, 0.909105, 0.625616, 0.0390919, 0.991436, 0.150769, 0.631336, 0.639367, 0.16347},
{0.397722, 0.965104, 0.63641, 0.859117, 0.390256, 0.922359, 0.608106, 0.994332, 0.948203, 0.790268, 0.480393, 0.325943, 0.883768, 0.0181744, 0.449522, 0.268803, 0.781292, 0.929176, 0.727767, 0.695714, 0.777051, 0.377634, 0.6612, 0.519258, 0.0293113, 0.944454, 0.969815, 0.17267, 0.0613302, 0.549501, 0.938447, 0.608389, 0.333968, 0.348795, 0.228807, 0.31623, 0.0224831, 0.243635, 0.88605, 0.880263, 0.987442, 0.237639, 0.191414, 0.656067, 0.196366, 0.104992, 0.190672, 0.635165, 0.337005, 0.878072, 0.767497, 0.400495, 0.791366, 0.254354, 0.810975, 0.657972, 0.735828, 0.452272, 0.444703, 0.146583, 0.948475, 0.294296, 0.873324, 0.571506, 0.633128, 0.439481, 0.267484, 0.443525, 0.566731, 0.684733, 0.751603, 0.587412, 0.218646, 0.300269, 0.161719, 0.481596, 0.0797245, 0.469907, 0.225701, 0.266896, 0.752703, 0.387365, 0.263151, 0.907883, 0.76102, 0.87847, 0.141463, 0.706989, 0.194956, 0.147955, 0.772678, 0.0380933, 0.0605181, 0.812645, 0.183932, 0.0928242, 0.158581, 0.937473, 0.290528, 0.54829, 0.88341, 0.529697, 0.126208, 0.236334, 0.181033, 0.857347, 0.0156075, 0.627835, 0.772058, 0.720746, 0.172951, 0.355986, 0.933389, 0.771096, 0.0157008, 0.587388, 0.720189, 0.594935, 0.437462, 0.523024, 0.763676, 0.431458, 0.948052, 0.892572, 0.487597, 0.186344, 0.871415, 0.477425, 0.490107, 0.46953, 0.266729, 0.119779, 0.429815, 0.0518534, 0.102525, 0.301822, 0.259405, 0.486222, 0.596858, 0.589521, 0.4826, 0.269895, 0.182718, 0.368907, 0.914547, 0.971698, 0.553122, 0.707938, 0.118557, 0.289201, 0.403314, 0.44719, 0.995741, 0.747777, 0.714127, 0.84227, 0.973142, 0.903536, 0.728618, 0.200494, 0.52805, 0.985376, 0.973861, 0.335757, 0.675075, 0.520785, 0.276455, 0.0326019, 0.30784, 0.0206223, 0.00622842, 0.258274, 0.23671, 0.427845, 0.733987, 0.825251, 0.266648, 0.357143, 0.58031, 0.820476, 0.801604, 0.389554, 0.021826, 0.208891, 0.694432, 0.146571, 0.887865, 0.115845, 0.0207638, 0.150857, 0.774636, 0.554794, 0.778628, 0.820743, 0.340298, 0.364151, 0.497896, 0.684123, 0.829481, 0.547535},
};

static const std::vector<float> costs = {96.9652, 996.3, 995.283, 53.2678, 555.467, 476.871, 748.798, 849.072, 177.893, 936.395, 822.397, 85.7172, 645.549, 877.899, 400.993, 160.865, 934.863, 404.79, 935.404, 593.849, 407.345, 989.52, 974.304, 787.424, 360.968, 861.466, 414.705, 545.347, 386.988, 463.675, 951.99, 273.005, 149.777, 747.864, 854.901, 473.378, 479.147, 486.654, 838.644, 814.724, 105.143, 872.848, 294.257, 520.374, 368.301, 326.369, 95.8496, 497.503, 394.193, 425.228, 927.823, 737.509, 899.799, 572.662, 525.781, 140.195, 919.131, 663.25, 472.769, 906.537, 242.924, 563.62, 99.0167, 349.573, 109.016, 216.302, 545.373, 413.77, 995.059, 164.973, 336.984, 770.766, 240.247, 992.604, 517.626, 890.936, 503.376, 717.616, 426.092, 856.933, 480.176, 860.913, 916.712, 79.2597, 672.091, 160.288, 565.824, 80.3133, 216.798, 228.365, 458.145, 839.62, 468.568, 532.78, 637.204, 261.003, 670.499, 311.869, 396.335, 211.292, 243.036, 810.213, 412.949, 820.753, 351.008, 612.247, 942.607, 788.42, 485.048, 621.605, 215.895, 772.315, 902.958, 478.174, 664.658, 583.369, 609.64, 727.002, 206.803, 380.435, 958.114, 643.349, 182.411, 950.667, 478.434, 811.8, 666.753, 389.389, 157.956, 973.323, 605.121, 238.845, 885.82, 716.266, 599.016, 536.149, 716.191, 355.184, 751.219, 536.516, 962.095, 644.533, 186.79, 467.001, 587.778, 413.652, 414.102, 2.23879, 153.491, 788.197, 192.229, 711.067, 534.277, 892.194, 329.707, 422.383, 76.5964, 257.235, 913.425, 710.455, 669.374, 547.259, 942.41, 561.336, 240.893, 347.383, 197.873, 323.233, 209.044, 949.391, 720.462, 933.759, 651.637, 776.666, 244.876, 99.0829, 955.226, 289.367, 647.052, 296.019, 798.084, 409.673, 537.293, 797.693, 344.564, 695.852, 446.751, 17.9577, 301.841, 883.517, 409.016, 513.512, 851.982, 267.148, 483.164, 620.125, 853.63, 742.724, 322.284, 810.432};

static const std::vector<float> min_impressions = {0.321175, 0.370251, 0.288773, 0.919302, 0.237329};

//
#endif
