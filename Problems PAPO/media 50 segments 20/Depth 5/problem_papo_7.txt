#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(events[5], events[4]),events[33]),events[6]),events[17]),events[34]),cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(events[1], events[0]),events[40]),events[24]),events[21]),events[34]),cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(events[41], events[40]),events[25]),events[48]),events[47]),events[43]),cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(events[13], events[31]),events[38]),events[3]),events[49]),events[30]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(events[45], events[9]),events[30]),events[7]),events[37]),events[24]),cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(events[6], events[28]),events[14]),events[2]),events[1]),events[21]),cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(events[35], events[19]),events[36]),events[25]),events[49]),events[39]),cons_incl(cons_indep(cons_indep(cons_indep(cons_incl(events[14], events[34]),events[44]),events[26]),events[35]),events[47]),cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[32], events[22]),events[48]),events[37]),events[11]),events[4]),cons_excl(cons_incl(cons_incl(cons_indep(cons_indep(events[11], events[45]),events[23]),events[35]),events[30]),events[17]),cons_incl(cons_incl(cons_indep(cons_indep(cons_excl(events[22], events[33]),events[38]),events[1]),events[36]),events[9]),cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(events[2], events[12]),events[13]),events[35]),events[37]),events[20]),cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(events[48], events[31]),events[10]),events[45]),events[2]),events[18]),cons_excl(cons_incl(cons_indep(cons_indep(cons_excl(events[3], events[19]),events[21]),events[39]),events[23]),events[44]),cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[10], events[34]),events[35]),events[14]),events[18]),events[27]),cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(events[35], events[12]),events[18]),events[14]),events[7]),events[0]),cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(events[11], events[10]),events[34]),events[46]),events[16]),events[21]),cons_excl(cons_incl(cons_excl(cons_excl(cons_excl(events[38], events[9]),events[10]),events[16]),events[4]),events[28]),cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(events[19], events[25]),events[16]),events[42]),events[29]),events[47]),cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(events[33], events[39]),events[25]),events[49]),events[42]),events[20])};


static const std::vector< std::vector<float> > prob = {{0.890464, 0.14646, 0.333118, 0.732506, 0.748288, 0.109743, 0.759068, 0.644249, 0.457179, 0.021268, 0.819982, 0.391953, 0.817851, 0.773774, 0.512261, 0.509054, 0.645174, 0.255504, 0.665306, 0.669496, 0.0271662, 0.913501, 0.934006, 0.840356, 0.542304, 0.30067, 0.962678, 0.309325, 0.686386, 0.660062, 0.0574737, 0.197069, 0.329856, 0.0815259, 0.32811, 0.571024, 0.734699, 0.910265, 0.0411432, 0.941224, 0.441041, 0.310438, 0.557884, 0.367984, 0.50757, 0.488516, 0.670742, 0.742931, 0.995854, 0.413729},
{0.342146, 0.271473, 0.114028, 0.741702, 0.337375, 0.335372, 0.67845, 0.721229, 0.287393, 0.261864, 0.581936, 0.0864423, 0.832617, 0.0051464, 0.586209, 0.166393, 0.459434, 0.890803, 0.984661, 0.256571, 0.18405, 0.285011, 0.400884, 0.812977, 0.594661, 0.625036, 0.223893, 0.88131, 0.356592, 0.419121, 0.954496, 0.038285, 0.496161, 0.754958, 0.538048, 0.451069, 0.897467, 0.50145, 0.35431, 0.523646, 0.0351382, 0.784297, 0.813745, 0.12288, 0.786568, 0.259552, 0.203313, 0.731715, 0.353974, 0.526853},
{0.745173, 0.596372, 0.344027, 0.846609, 0.648391, 0.144993, 0.998663, 0.697276, 0.0219295, 0.345099, 0.366811, 0.639547, 0.493397, 0.100933, 0.751634, 0.556525, 0.884682, 0.405335, 0.319518, 0.913683, 0.546067, 0.284028, 0.261048, 0.280279, 0.853917, 0.532032, 0.266807, 0.695317, 0.850919, 0.578448, 0.0880406, 0.898551, 0.645866, 0.0818067, 0.484077, 0.0706907, 0.271091, 0.549157, 0.983202, 0.119468, 0.0626627, 0.111138, 0.902598, 0.826875, 0.946531, 0.28519, 0.109237, 0.199961, 0.131558, 0.595747},
{0.990067, 0.202289, 0.383989, 0.884161, 0.82011, 0.0642869, 0.15716, 0.338611, 0.144477, 0.981558, 0.362772, 0.812313, 0.831563, 0.594192, 0.864287, 0.300184, 0.286004, 0.646783, 0.541346, 0.97135, 0.858004, 0.45681, 0.652962, 0.374593, 0.0864781, 0.354435, 0.539481, 0.097287, 0.293005, 0.631232, 0.909121, 0.165953, 0.292606, 0.412534, 0.129446, 0.579667, 0.0163987, 0.986644, 0.524691, 0.411466, 0.74506, 0.404208, 0.612852, 0.260475, 0.88827, 0.669713, 0.313442, 0.0114373, 0.583505, 0.238169},
{0.419754, 0.318666, 0.1773, 0.545015, 0.282329, 0.54293, 0.0816809, 0.00535005, 0.236928, 0.580741, 0.831351, 0.166702, 0.176685, 0.844802, 0.981578, 0.851156, 0.100125, 0.119109, 0.816335, 0.730397, 0.537029, 0.516494, 0.8571, 0.430374, 0.0598709, 0.671764, 0.675414, 0.802938, 0.374763, 0.639794, 0.884685, 0.116898, 0.74161, 0.313628, 0.624862, 0.361666, 0.0661397, 0.0969976, 0.720556, 0.900803, 0.0555876, 0.0711104, 0.842254, 0.485543, 0.422097, 0.721932, 0.339018, 0.291918, 0.895488, 0.295575},
{0.00584022, 0.478064, 0.1808, 0.602312, 0.616976, 0.316626, 0.314087, 0.406614, 0.960984, 0.686297, 0.352469, 0.861858, 0.0488955, 0.0697094, 0.569358, 0.246155, 0.0531114, 0.214613, 0.624128, 0.202391, 0.162915, 0.480737, 0.905968, 0.605596, 0.871444, 0.747412, 0.709942, 0.55883, 0.790327, 0.391689, 0.955811, 0.789294, 0.121694, 0.808435, 0.753934, 0.520049, 0.688719, 0.0279728, 0.185346, 0.961468, 0.153804, 0.669034, 0.410478, 0.77703, 0.259539, 0.143167, 0.500456, 0.608034, 0.308951, 0.76356},
{0.282225, 0.492021, 0.673514, 0.831845, 0.509994, 0.0143502, 0.635127, 0.79625, 0.803534, 0.288373, 0.74916, 0.165236, 0.661909, 0.0615559, 0.395125, 0.713045, 0.231303, 0.268445, 0.335259, 0.528907, 0.969126, 0.426665, 0.826884, 0.297815, 0.161056, 0.450232, 0.645518, 0.312807, 0.122833, 0.804612, 0.735814, 0.968326, 0.0487911, 0.222502, 0.22546, 0.944341, 0.464693, 0.663758, 0.0212074, 0.472561, 0.474211, 0.518999, 0.27422, 0.51172, 0.108715, 0.548334, 0.0669539, 0.156186, 0.481117, 0.238583},
{0.910608, 0.86532, 0.944459, 0.382991, 0.244931, 0.655477, 0.780748, 0.70277, 0.0784082, 0.870009, 0.582575, 0.778374, 0.349171, 0.17677, 0.7704, 0.490691, 0.208653, 0.308439, 0.71672, 0.504008, 0.891645, 0.990777, 0.544776, 0.987064, 0.647758, 0.419533, 0.590965, 0.417717, 0.259938, 0.943197, 0.354061, 0.897743, 0.0324089, 0.506976, 0.388238, 0.946039, 0.804965, 0.852219, 0.331197, 0.469836, 0.057884, 0.177542, 0.968086, 0.364379, 0.869704, 0.474669, 0.814418, 0.955656, 0.967889, 0.839229},
{0.217376, 0.573348, 0.638666, 0.958446, 0.460765, 0.150118, 0.701284, 0.625257, 0.00229146, 0.912744, 0.909287, 0.386011, 0.240358, 0.348568, 0.653513, 0.345438, 0.0201172, 0.656587, 0.694784, 0.71696, 0.427113, 0.045293, 0.861005, 0.519137, 0.86368, 0.531926, 0.263677, 0.361066, 0.688306, 0.856329, 0.702376, 0.70369, 0.185466, 0.949842, 0.0731299, 0.65357, 0.360301, 0.0724948, 0.573954, 0.339348, 0.231292, 0.160405, 0.452675, 0.0890485, 0.690856, 0.32433, 0.762547, 0.371064, 0.165789, 0.4009},
{0.537602, 0.30627, 0.808429, 0.444198, 0.372962, 0.764734, 0.271953, 0.862366, 0.267929, 0.823708, 0.330958, 0.0395444, 0.776055, 0.68564, 0.309788, 0.136615, 0.911298, 0.980146, 0.815582, 0.740176, 0.512867, 0.356282, 0.539193, 0.714127, 0.497981, 0.15559, 0.661857, 0.180951, 0.461254, 0.375777, 0.0979165, 0.605421, 0.479741, 0.747239, 0.473164, 0.188558, 0.697541, 0.651391, 0.033723, 0.143706, 0.606961, 0.451988, 0.0677911, 0.540249, 0.618654, 0.316389, 0.184908, 0.175171, 0.373576, 0.550619},
{0.936731, 0.0838932, 0.203165, 0.527642, 0.0534625, 0.900785, 0.893474, 0.533498, 0.0521258, 0.850083, 0.175086, 0.116938, 0.680957, 0.249469, 0.169187, 0.843924, 0.651046, 0.133435, 0.475816, 0.0244306, 0.256004, 0.9024, 0.199653, 0.49464, 0.0351963, 0.895423, 0.801101, 0.590883, 0.0338356, 0.0577568, 0.584668, 0.267923, 0.023538, 0.841994, 0.850384, 0.00896299, 0.277422, 0.0956813, 0.877378, 0.861647, 0.0437441, 0.542411, 0.723357, 0.331541, 0.244659, 0.00732828, 0.846779, 0.704254, 0.0205037, 0.522344},
{0.761533, 0.491528, 0.878787, 0.923866, 0.550735, 0.487766, 0.227498, 0.580301, 0.881071, 0.983139, 0.870891, 0.504053, 0.50454, 0.176145, 0.601554, 0.852564, 0.494166, 0.597799, 0.735201, 0.132353, 0.310084, 0.802424, 0.420339, 0.0284583, 0.25936, 0.632243, 0.712801, 0.817375, 0.364815, 0.250824, 0.19403, 0.0919817, 0.0413436, 0.0265075, 0.734555, 0.4154, 0.0471179, 0.220981, 0.715764, 0.746993, 0.437786, 0.140739, 0.0673758, 0.956083, 0.126439, 0.673963, 0.00350878, 0.738219, 0.75818, 0.384046},
{0.576785, 0.449539, 0.000424677, 0.742844, 0.311595, 0.853326, 0.0965253, 0.453918, 0.338772, 0.69071, 0.826297, 0.54339, 0.0791831, 0.116686, 0.211729, 0.498521, 0.353509, 0.994751, 0.780369, 0.195485, 0.505617, 0.509521, 0.752128, 0.132535, 0.526717, 0.580631, 0.274055, 0.239312, 0.767787, 0.581445, 0.817971, 0.192056, 0.295745, 0.595471, 0.953187, 0.294069, 0.351211, 0.85955, 0.945107, 0.213444, 0.606721, 0.157722, 0.528858, 0.941586, 0.809689, 0.910046, 0.195533, 0.123445, 0.486258, 0.391726},
{0.656595, 0.660271, 0.776512, 0.958714, 0.714003, 0.142044, 0.0655645, 0.333603, 0.82189, 0.298469, 0.400874, 0.461414, 0.876055, 0.202559, 0.237778, 0.329744, 0.426895, 0.651383, 0.0916036, 0.448515, 0.0233962, 0.582156, 0.386484, 0.932811, 0.95562, 0.754996, 0.222793, 0.846883, 0.674914, 0.367751, 0.0742479, 0.249966, 0.557094, 0.131185, 0.214782, 0.815853, 0.0238928, 0.47181, 0.808228, 0.781023, 0.575328, 0.662849, 0.592075, 0.14374, 0.821577, 0.355194, 0.344488, 0.984788, 0.725139, 0.938709},
{0.327849, 0.885955, 0.589379, 0.514786, 0.607279, 0.196387, 0.687079, 0.594109, 0.495769, 0.444226, 0.308299, 0.305203, 0.295828, 0.525249, 0.16882, 0.0853182, 0.388423, 0.0130654, 0.380197, 0.283001, 0.169282, 0.85406, 0.503835, 0.0327479, 0.50413, 0.745148, 0.0995225, 0.736192, 0.85631, 0.77229, 0.832556, 0.80813, 0.131824, 0.899391, 0.0967053, 0.22424, 0.278047, 0.437498, 0.155754, 0.864308, 0.580854, 0.131137, 0.572798, 0.933524, 0.859732, 0.797537, 0.150941, 0.0156574, 0.939518, 0.824529},
{0.215933, 0.926999, 0.0461096, 0.588384, 0.601742, 0.965836, 0.495708, 0.687798, 0.936647, 0.238722, 0.774526, 0.133128, 0.717355, 0.345465, 0.915329, 0.306936, 0.573891, 0.129352, 0.551668, 0.540726, 0.764776, 0.0205729, 0.49, 0.115559, 0.579036, 0.547849, 0.0604051, 0.727222, 0.166383, 0.0885232, 0.421525, 0.177809, 0.612057, 0.789308, 0.267609, 0.385484, 0.166093, 0.514814, 0.548691, 0.835097, 0.46231, 0.877088, 0.102971, 0.114756, 0.888907, 0.0658165, 0.273051, 0.677804, 0.0115859, 0.820471},
{0.308422, 0.663041, 0.187547, 0.631396, 0.854849, 0.0987808, 0.00801722, 0.635019, 0.578857, 0.00688985, 0.103231, 0.174425, 0.523849, 0.369033, 0.0100236, 0.661281, 0.606258, 0.137312, 0.423357, 0.382777, 0.0660188, 0.413192, 0.097078, 0.156918, 0.610793, 0.107869, 0.897322, 0.607331, 0.442187, 0.0992437, 0.825649, 0.279494, 0.791265, 0.255881, 0.8022, 0.0413435, 0.66867, 0.341095, 0.999268, 0.803613, 0.699713, 0.652608, 0.180676, 0.869038, 0.604126, 0.931144, 0.503354, 0.0784168, 0.531148, 0.227549},
{0.743113, 0.44037, 0.916202, 0.597826, 0.318216, 0.287125, 0.723223, 0.0729694, 0.369542, 0.60009, 0.985156, 0.676332, 0.97291, 0.864379, 0.700454, 0.0746426, 0.975629, 0.0947312, 0.0388993, 0.753476, 0.613733, 0.0414022, 0.651061, 0.518638, 0.694747, 0.506107, 0.717874, 0.783075, 0.150705, 0.35154, 0.16763, 0.358941, 0.433105, 0.11755, 0.508035, 0.918293, 0.389968, 0.941255, 0.0624643, 0.0185674, 0.892272, 0.0442971, 0.784238, 0.103773, 0.0622368, 0.521495, 0.423052, 0.450931, 0.978161, 0.494891},
{0.902326, 0.63834, 0.364351, 0.506014, 0.164698, 0.0751539, 0.59059, 0.177663, 0.05894, 0.761708, 0.259225, 0.654388, 0.404844, 0.564188, 0.965006, 0.815632, 0.00533576, 0.0270131, 0.786282, 0.0223295, 0.235288, 0.531756, 0.331995, 0.953252, 0.373065, 0.543834, 0.113061, 0.24978, 0.473947, 0.757309, 0.118079, 0.882396, 0.617053, 0.32534, 0.325131, 0.66582, 0.221909, 0.724547, 0.0752729, 0.0105668, 0.0397326, 0.587041, 0.588224, 0.728069, 0.684434, 0.380145, 0.435957, 0.0784257, 0.403005, 0.864128},
{0.416061, 0.997838, 0.0332442, 0.559206, 0.749212, 0.884908, 0.293705, 0.91073, 0.340372, 0.0898502, 0.878039, 0.363809, 0.301733, 0.711885, 0.238757, 0.850758, 0.454554, 0.181337, 0.307805, 0.758444, 0.378403, 0.720705, 0.467029, 0.410282, 0.433079, 0.480177, 0.974373, 0.78321, 0.70762, 0.940195, 0.341634, 0.667724, 0.0526508, 0.704062, 0.059803, 0.779134, 0.62278, 0.367471, 0.569999, 0.933206, 0.0708475, 0.826118, 0.937608, 0.596318, 0.28415, 0.259301, 0.0832326, 0.178256, 0.670987, 0.435313},
};

static const std::vector<float> costs = {296.094, 635.336, 582.12, 484.135, 976.11, 539.38, 906.175, 470.978, 724.237, 702.419, 7.02418, 177.332, 988.793, 864.625, 413.83, 898.863, 327.117, 374.174, 666.091, 504.686, 987.948, 992.85, 903.144, 485.091, 476.692, 55.2421, 340.715, 977.267, 118.134, 596.368, 928.719, 909.366, 620.848, 591.758, 481.717, 928.165, 53.9033, 655.309, 831.965, 610.84, 5.2843, 373.984, 652.908, 282.984, 410.824, 637.651, 795.096, 891.43, 826.268, 651.989};

static const std::vector<float> min_impressions = {0.0287756, 0.0215807, 0.464418, 0.939991, 0.140092, 0.507342, 0.00787028, 0.938359, 0.419833, 0.186702, 0.211761, 0.837061, 0.686616, 0.554737, 0.669583, 0.203919, 0.091781, 0.00455165, 0.218553, 0.0375926};

//
#endif
