#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(events[27], events[38]),events[5]),events[33]),events[15]),events[48]),events[13]),events[36]),events[29]),events[0]),events[17]),cons_indep(cons_indep(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(events[4], events[31]),events[42]),events[35]),events[48]),events[30]),events[36]),events[9]),events[19]),events[27]),events[34]),cons_indep(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(events[16], events[33]),events[12]),events[32]),events[9]),events[25]),events[23]),events[26]),events[46]),events[15]),events[19]),cons_incl(cons_excl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_incl(cons_incl(cons_indep(events[33], events[26]),events[45]),events[30]),events[8]),events[20]),events[4]),events[14]),events[1]),events[13]),events[18]),cons_incl(cons_incl(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(events[0], events[28]),events[20]),events[39]),events[3]),events[23]),events[15]),events[32]),events[49]),events[34]),events[19]),cons_indep(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(events[12], events[11]),events[26]),events[4]),events[6]),events[21]),events[13]),events[9]),events[30]),events[27]),events[19]),cons_incl(cons_incl(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(events[37], events[38]),events[48]),events[4]),events[31]),events[44]),events[34]),events[2]),events[9]),events[33]),events[28]),cons_indep(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(events[34], events[4]),events[6]),events[10]),events[16]),events[35]),events[0]),events[12]),events[11]),events[29]),events[1]),cons_indep(cons_incl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_incl(cons_indep(events[28], events[8]),events[38]),events[26]),events[15]),events[10]),events[2]),events[23]),events[19]),events[42]),events[22]),cons_indep(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_excl(cons_incl(cons_incl(events[21], events[39]),events[13]),events[6]),events[12]),events[36]),events[28]),events[33]),events[38]),events[18]),events[27]),cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(events[7], events[16]),events[1]),events[38]),events[44]),events[42]),events[41]),events[26]),events[47]),events[48]),events[15]),cons_indep(cons_incl(cons_incl(cons_incl(cons_incl(cons_incl(cons_indep(cons_incl(cons_indep(cons_incl(events[23], events[43]),events[33]),events[26]),events[20]),events[49]),events[16]),events[8]),events[34]),events[11]),events[47]),cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(events[17], events[34]),events[45]),events[48]),events[21]),events[37]),events[31]),events[47]),events[35]),events[42]),events[4]),cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(events[0], events[28]),events[34]),events[6]),events[11]),events[13]),events[47]),events[30]),events[18]),events[12]),events[36]),cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[15], events[35]),events[24]),events[36]),events[48]),events[44]),events[41]),events[16]),events[1]),events[46]),events[49]),cons_incl(cons_excl(cons_indep(cons_incl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(events[8], events[9]),events[15]),events[37]),events[38]),events[48]),events[2]),events[42]),events[19]),events[36]),events[16]),cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(events[25], events[21]),events[28]),events[5]),events[35]),events[3]),events[1]),events[48]),events[22]),events[41]),events[24]),cons_incl(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(events[44], events[22]),events[32]),events[45]),events[6]),events[4]),events[41]),events[38]),events[19]),events[21]),events[12]),cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[22], events[5]),events[7]),events[21]),events[34]),events[26]),events[30]),events[41]),events[37]),events[6]),events[36]),cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(events[2], events[6]),events[24]),events[42]),events[31]),events[45]),events[35]),events[5]),events[15]),events[10]),events[28])};


static const std::vector< std::vector<float> > prob = {{0.735708, 0.65484, 0.516367, 0.694968, 0.658487, 0.505772, 0.172294, 0.428586, 0.608055, 0.854996, 0.859623, 0.824912, 0.103065, 0.152507, 0.818144, 0.0640575, 0.316508, 0.00439905, 0.366969, 0.819544, 0.383482, 0.579676, 0.425046, 0.803404, 0.701962, 0.802316, 0.588164, 0.252791, 0.778444, 0.133323, 0.415701, 0.811755, 0.313726, 0.404811, 0.73315, 0.455878, 0.182669, 0.175284, 0.786153, 0.794061, 0.406321, 0.957295, 0.066832, 0.510024, 0.222429, 0.99007, 0.283656, 0.598965, 0.177844, 0.545322},
{0.47753, 0.613769, 0.521991, 0.176335, 0.657566, 0.666966, 0.699384, 0.171459, 0.876422, 0.310519, 0.828922, 0.919634, 0.884344, 0.478514, 0.884553, 0.764665, 0.430938, 0.634905, 0.894156, 0.284739, 0.652692, 0.153353, 0.0950422, 0.923492, 0.509557, 0.746413, 0.0941443, 0.586995, 0.22862, 0.906066, 0.769402, 0.951468, 0.832392, 0.474114, 0.150983, 0.441521, 0.337024, 0.424208, 0.139983, 0.664305, 0.547391, 0.513835, 0.616607, 0.842412, 0.482829, 0.124636, 0.820763, 0.854948, 0.66969, 0.0579755},
{0.662233, 0.368208, 0.424001, 0.307349, 0.429788, 0.392249, 0.682157, 0.619291, 0.304202, 0.316865, 0.908836, 0.80103, 0.812736, 0.0630937, 0.789123, 0.529083, 0.244801, 0.977645, 0.631796, 0.945909, 0.499145, 0.465137, 0.992121, 0.329354, 0.948215, 0.168672, 0.454206, 0.923994, 0.184668, 0.423228, 0.177068, 0.797431, 0.780896, 0.975097, 0.107085, 0.343597, 0.20121, 0.53095, 0.114556, 0.0998509, 0.655801, 0.732303, 0.32931, 0.742163, 0.200448, 0.931922, 0.450102, 0.0697076, 0.379913, 0.0939635},
{0.45685, 0.00912806, 0.136476, 0.749847, 0.856572, 0.882803, 0.820933, 0.669665, 0.815001, 0.124053, 0.984843, 0.73172, 0.476685, 0.599621, 0.235751, 0.623402, 0.457687, 0.983356, 0.635482, 0.0215895, 0.569118, 0.604301, 0.0281015, 0.415931, 0.303929, 0.549674, 0.350687, 0.533959, 0.608248, 0.917986, 0.692514, 0.865114, 0.531547, 0.688743, 0.77358, 0.82734, 0.0624639, 0.723133, 0.84437, 0.504236, 0.35176, 0.454884, 0.754955, 0.709421, 0.474172, 0.558887, 0.859959, 0.564418, 0.451956, 0.212152},
{0.14487, 0.849148, 0.414656, 0.446808, 0.612946, 0.218457, 0.000211673, 0.650095, 0.190485, 0.354319, 0.897193, 0.203871, 0.450873, 0.402796, 0.160413, 0.336738, 0.020026, 0.563454, 0.826422, 0.978262, 0.198918, 0.561893, 0.579077, 0.876039, 0.348683, 0.679631, 0.467412, 0.841456, 0.115913, 0.32155, 0.151184, 0.116743, 0.133195, 0.351055, 0.994436, 0.0304803, 0.723594, 0.322354, 0.388374, 0.401112, 0.575239, 0.0917218, 0.0648279, 0.961565, 0.928118, 0.394363, 0.662558, 0.985237, 0.814168, 0.496943},
{0.286926, 0.0754805, 0.850166, 0.711903, 0.242643, 0.594265, 0.278252, 0.0584023, 0.0966825, 0.997428, 0.414989, 0.476072, 0.343385, 0.139881, 0.871427, 0.470564, 0.58562, 0.261877, 0.826839, 0.917763, 0.348043, 0.957625, 0.596604, 0.419751, 0.905679, 0.952038, 0.798789, 0.0376006, 0.030629, 0.799513, 0.886001, 0.16636, 0.452947, 0.855503, 0.76627, 0.564816, 0.0606836, 0.875365, 0.764188, 0.971313, 0.890523, 0.237526, 0.338606, 0.776466, 0.215144, 0.719821, 0.86038, 0.669383, 0.523546, 0.343063},
{0.896621, 0.581603, 0.431343, 0.0910034, 0.988781, 0.196499, 0.443495, 0.792048, 0.526206, 0.642101, 0.85523, 0.0921019, 0.994136, 0.771733, 0.712512, 0.274183, 0.382823, 0.0833169, 0.785545, 0.447507, 0.307494, 0.602506, 0.274519, 0.191042, 0.00291936, 0.913686, 0.942218, 0.994091, 0.795434, 0.172977, 0.0805986, 0.739139, 0.496616, 0.0445464, 0.339511, 0.250961, 0.457587, 0.0195001, 0.30562, 0.392431, 0.636719, 0.37258, 0.154224, 0.676063, 0.743063, 0.316609, 0.372062, 0.164367, 0.633446, 0.455571},
{0.977226, 0.340544, 0.943754, 0.472794, 0.906388, 0.64428, 0.175333, 0.792446, 0.60386, 0.105324, 0.274033, 0.526436, 0.389496, 0.681808, 0.146857, 0.908511, 0.417816, 0.849077, 0.883632, 0.732948, 0.0598077, 0.913155, 0.124594, 0.533574, 0.303715, 0.201394, 0.755562, 0.617576, 0.221002, 0.16411, 0.764682, 0.975053, 0.0495414, 0.541053, 0.221138, 0.203421, 0.525116, 0.339132, 0.646099, 0.802405, 0.529706, 0.452735, 0.845585, 0.420647, 0.16305, 0.914109, 0.191735, 0.28648, 0.934558, 0.637302},
{0.987234, 0.644932, 0.273206, 0.59565, 0.216509, 0.646255, 0.269229, 0.733019, 0.407187, 0.318234, 0.112433, 0.0414831, 0.0926999, 0.0700773, 0.127989, 0.165405, 0.77871, 0.986749, 0.494935, 0.527903, 0.207759, 0.0776554, 0.52478, 0.917788, 0.747686, 0.707588, 0.579915, 0.110745, 0.465614, 0.00560023, 0.576258, 0.742473, 0.227326, 0.556878, 0.342643, 0.62984, 0.259933, 0.973399, 0.264489, 0.995024, 0.963638, 0.842023, 0.923655, 0.714289, 0.823469, 0.272747, 0.685033, 0.918152, 0.310892, 0.519653},
{0.652028, 0.404534, 0.224862, 0.681441, 0.693637, 0.791635, 0.544617, 0.391887, 0.693751, 0.673448, 0.668889, 0.787626, 0.718043, 0.925853, 0.939489, 0.547598, 0.923177, 0.0684713, 0.808999, 0.310818, 0.299445, 0.685105, 0.0134719, 0.753841, 0.637877, 0.427985, 0.785413, 0.488105, 0.880416, 0.500488, 0.976052, 0.0573395, 0.993205, 0.879809, 0.773146, 0.831256, 0.43788, 0.966474, 0.413216, 0.279302, 0.340131, 0.686216, 0.268758, 0.578008, 0.446568, 0.0750536, 0.701708, 0.858458, 0.582812, 0.410618},
{0.385341, 0.84029, 0.772673, 0.701697, 0.0511591, 0.607782, 0.572412, 0.732337, 0.658209, 0.829399, 0.426088, 0.212315, 0.891395, 0.973923, 0.589531, 0.196912, 0.967076, 0.905035, 0.514956, 0.884391, 0.608527, 0.820564, 0.306813, 0.0107122, 0.122044, 0.326274, 0.44338, 0.972691, 0.11371, 0.674183, 0.850136, 0.242538, 0.0666156, 0.717453, 0.860383, 0.153912, 0.524027, 0.456799, 0.873303, 0.609056, 0.315239, 0.0951303, 0.990886, 0.429908, 0.653246, 0.208441, 0.533299, 0.840362, 0.719899, 0.525618},
{0.427711, 0.344128, 0.656564, 0.488636, 0.052706, 0.591812, 0.812235, 0.209203, 0.237167, 0.97869, 0.564693, 0.084642, 0.575925, 0.0138491, 0.323802, 0.88421, 0.617075, 0.58623, 0.0429939, 0.134555, 0.187543, 0.740846, 0.265947, 0.071523, 0.399621, 0.705538, 0.372774, 0.0722966, 0.295237, 0.356627, 0.876825, 0.783777, 0.784554, 0.0134181, 0.685616, 0.465731, 0.458979, 0.833807, 0.150338, 0.502268, 0.529893, 0.51339, 0.922691, 0.359022, 0.553566, 0.564332, 0.430088, 0.837991, 0.878002, 0.0511183},
{0.694856, 0.700643, 0.201918, 0.401076, 0.485709, 0.644548, 0.41674, 0.321612, 0.433494, 0.0577698, 0.235459, 0.775217, 0.121573, 0.493655, 0.614584, 0.00428894, 0.475852, 0.269729, 0.90786, 0.795527, 0.8382, 0.463385, 0.530789, 0.530833, 0.0957887, 0.999375, 0.0793552, 0.337287, 0.928814, 0.0335403, 0.796102, 0.780472, 0.0232593, 0.65291, 0.417102, 0.0255921, 0.880052, 0.138558, 0.762372, 0.166562, 0.576926, 0.0665673, 0.339406, 0.0624818, 0.654864, 0.867825, 0.268288, 0.779549, 0.682448, 0.997575},
{0.451378, 0.990949, 0.435692, 0.712617, 0.0956395, 0.225601, 0.719862, 0.700083, 0.511137, 0.829401, 0.340449, 0.627786, 0.925892, 0.614977, 0.527236, 0.827596, 0.292399, 0.969546, 0.933747, 0.873802, 0.594935, 0.158748, 0.395381, 0.745229, 0.538274, 0.680544, 0.472208, 0.720918, 0.985881, 0.117762, 0.218257, 0.668249, 0.377208, 0.296916, 0.771127, 0.693092, 0.442479, 0.906239, 0.377841, 0.403563, 0.0703181, 0.0282129, 0.33038, 0.236432, 0.427805, 0.692054, 0.411716, 0.643364, 0.366055, 0.780142},
{0.618323, 0.222678, 0.668994, 0.391195, 0.200984, 0.534661, 0.66292, 0.00611892, 0.159442, 0.652606, 0.936333, 0.71174, 0.756718, 0.987036, 0.457524, 0.686588, 0.618056, 0.637857, 0.81442, 0.423595, 0.589266, 0.560005, 0.534706, 0.718926, 0.749055, 0.844585, 0.834182, 0.497128, 0.603328, 0.681394, 0.182971, 0.41256, 0.637276, 0.710435, 0.925605, 0.364328, 0.335426, 0.263411, 0.417998, 0.971038, 0.590193, 0.418459, 0.707316, 0.489548, 0.172632, 0.372461, 0.789383, 0.000179788, 0.630992, 0.372343},
{0.899492, 0.401822, 0.971691, 0.378251, 0.63612, 0.84094, 0.509673, 0.72078, 0.337588, 0.102228, 0.899628, 0.0986752, 0.998812, 0.232146, 0.795169, 0.0617843, 0.746922, 0.560868, 0.339794, 0.738733, 0.148231, 0.535528, 0.940912, 0.643181, 0.606872, 0.640657, 0.0302491, 0.749968, 0.0435188, 0.689017, 0.514927, 0.744972, 0.71796, 0.772155, 0.0233166, 0.0483403, 0.863385, 0.232488, 0.777851, 0.407357, 0.612979, 0.315785, 0.467282, 0.173185, 0.371098, 0.302858, 0.884385, 0.925081, 0.989286, 0.74862},
{0.743409, 0.905509, 0.753583, 0.888213, 0.354414, 0.242563, 0.55494, 0.497306, 0.470227, 0.307496, 0.734905, 0.0281688, 0.0479635, 0.281412, 0.834123, 0.248287, 0.437637, 0.914129, 0.321509, 0.455639, 0.768854, 0.365738, 0.915512, 0.599837, 0.119427, 0.827, 0.00972198, 0.983381, 0.434934, 0.0750405, 0.310665, 0.864009, 0.960611, 0.65004, 0.719157, 0.122099, 0.538075, 0.186004, 0.254232, 0.329145, 0.387136, 0.732687, 0.901485, 0.521967, 0.20087, 0.986433, 0.189499, 0.696168, 0.271904, 0.598192},
{0.0119427, 0.442212, 0.76138, 0.876121, 0.399767, 0.892308, 0.747937, 0.779397, 0.262722, 0.850962, 0.782673, 0.836152, 0.765409, 0.219544, 0.548842, 0.39715, 0.194532, 0.0476093, 0.737, 0.836245, 0.232019, 0.209104, 0.569922, 0.961447, 0.889486, 0.211072, 0.744493, 0.786776, 0.366815, 0.773712, 0.137718, 0.387334, 0.316646, 0.832557, 0.412036, 0.203985, 0.592921, 0.483277, 0.0624208, 0.627847, 0.948599, 0.230968, 0.396579, 0.995081, 0.48752, 0.836182, 0.278711, 0.0776553, 0.302721, 0.162151},
{0.854574, 0.616933, 0.0180972, 0.361626, 0.422151, 0.631907, 0.881597, 0.420016, 0.186523, 0.0117162, 0.083139, 0.914538, 0.9265, 0.257264, 0.698437, 0.774665, 0.522046, 0.19723, 0.934483, 0.722688, 0.621018, 0.641894, 0.184428, 0.733787, 0.253861, 0.724243, 0.425472, 0.0458974, 0.583247, 0.972616, 0.133533, 0.2429, 0.565734, 0.439159, 0.460719, 0.782294, 0.483125, 0.449688, 0.159226, 0.474485, 0.72673, 0.897966, 0.601541, 0.972624, 0.434961, 0.935785, 0.0111155, 0.286351, 0.702058, 0.609179},
{0.540858, 0.897235, 0.236065, 0.19648, 0.891795, 0.606036, 0.0392364, 0.932111, 0.428595, 0.0886909, 0.598846, 0.391138, 0.89276, 0.412485, 0.721184, 0.520161, 0.782832, 0.195047, 0.866418, 0.635207, 0.0337773, 0.556331, 0.607428, 0.109879, 0.281593, 0.942754, 0.822694, 0.850651, 0.435991, 0.258937, 0.517533, 0.532721, 0.936343, 0.835746, 0.667533, 0.597795, 0.704626, 0.919996, 0.84281, 0.464701, 0.748776, 0.182308, 0.782927, 0.59146, 0.742191, 0.0563619, 0.0835491, 0.502892, 0.344807, 0.451584},
};

static const std::vector<float> costs = {777.581, 658.358, 884.142, 646.39, 502.5, 914.352, 9.9624, 163.011, 465.601, 443.382, 226.099, 474.418, 955.538, 732.974, 756.917, 676.464, 41.9523, 862.553, 494.051, 387.267, 765.526, 26.8681, 864.586, 141.177, 490.721, 983.915, 366.602, 993.597, 328.547, 297.741, 445.737, 117.821, 83.7751, 435.078, 471.313, 411.828, 990.022, 360.846, 475.626, 612.278, 619.248, 404.709, 515.296, 69.0289, 740.357, 882.381, 855.025, 789.035, 694.134, 979.984};

static const std::vector<float> min_impressions = {0.682168, 0.383108, 0.802378, 0.591958, 0.891094, 0.315762, 0.472591, 0.025266, 0.358868, 0.757361, 0.0307482, 0.78525, 0.14122, 0.680246, 0.580663, 0.434681, 0.315862, 0.673381, 0.539328, 0.178511};

//
#endif
