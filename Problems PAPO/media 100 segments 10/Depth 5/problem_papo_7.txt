#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 10;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(events[56], events[25]),events[82]),events[59]),events[4]),events[54]),cons_excl(cons_excl(cons_excl(cons_indep(cons_incl(events[79], events[47]),events[18]),events[78]),events[38]),events[97]),cons_incl(cons_excl(cons_incl(cons_excl(cons_excl(events[18], events[23]),events[84]),events[30]),events[75]),events[66]),cons_excl(cons_indep(cons_indep(cons_incl(cons_incl(events[71], events[9]),events[54]),events[30]),events[62]),events[86]),cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(events[83], events[22]),events[26]),events[67]),events[25]),events[46]),cons_incl(cons_excl(cons_indep(cons_excl(cons_indep(events[53], events[24]),events[2]),events[33]),events[66]),events[76]),cons_incl(cons_excl(cons_indep(cons_incl(cons_excl(events[61], events[83]),events[15]),events[69]),events[52]),events[92]),cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(events[4], events[67]),events[69]),events[12]),events[90]),events[84]),cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(events[57], events[19]),events[41]),events[8]),events[91]),events[73]),cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(events[99], events[13]),events[75]),events[32]),events[8]),events[15])};


static const std::vector< std::vector<float> > prob = {{0.389588, 0.976839, 0.743159, 0.2902, 0.611696, 0.944879, 0.0116884, 0.0605978, 0.319249, 0.122816, 0.416712, 0.279139, 0.968752, 0.91626, 0.128777, 0.848309, 0.377352, 0.622165, 0.309418, 0.960853, 0.140721, 0.125969, 0.849188, 0.940983, 0.18817, 0.387236, 0.709385, 0.206818, 0.239111, 0.342162, 0.479767, 0.741758, 0.424601, 0.132722, 0.223897, 0.84529, 0.126974, 0.0849273, 0.216297, 0.703907, 0.609537, 0.459128, 0.681574, 0.423948, 0.675559, 0.200841, 0.726739, 0.625142, 0.521826, 0.607784, 0.213724, 0.644696, 0.989885, 0.716207, 0.450273, 0.832442, 0.984362, 0.766351, 0.945345, 0.426001, 0.724852, 0.87456, 0.617, 0.0260688, 0.396299, 0.226512, 0.488367, 0.349517, 0.351245, 0.0593997, 0.0641821, 0.0998468, 0.764915, 0.537037, 0.506582, 0.634867, 0.784277, 0.614959, 0.670278, 0.790165, 0.177333, 0.723684, 0.554631, 0.274132, 0.629083, 0.604412, 0.418272, 0.0872613, 0.823543, 0.330203, 0.15258, 0.683911, 0.695295, 0.838425, 0.216607, 0.789211, 0.157705, 0.16992, 0.252366, 0.733977},
{0.672656, 0.867249, 0.893001, 0.629375, 0.691487, 0.336041, 0.780632, 0.195061, 0.833421, 0.627125, 0.667942, 0.930273, 0.669202, 0.931771, 0.574786, 0.960262, 0.613418, 0.0444995, 0.238876, 0.800035, 0.183806, 0.349358, 0.0979223, 0.632839, 0.0952453, 0.65513, 0.493474, 0.428786, 0.922986, 0.835337, 0.462483, 0.489966, 0.788108, 0.139782, 0.259608, 0.292969, 0.550034, 0.527035, 0.599344, 0.778482, 0.0854378, 0.507016, 0.237043, 0.76909, 0.840452, 0.669101, 0.00461548, 0.846559, 0.363021, 0.883954, 0.363363, 0.750442, 0.234706, 0.447278, 0.596954, 0.443228, 0.118855, 0.148818, 0.117647, 0.927499, 0.979349, 0.475227, 0.418945, 0.875065, 0.832527, 0.453023, 0.745338, 0.149224, 0.882621, 0.39349, 0.378965, 0.0585482, 0.868761, 0.154686, 0.324472, 0.394166, 0.602607, 0.258197, 0.351852, 0.676941, 0.161544, 0.670389, 0.661036, 0.29511, 0.278288, 0.149855, 0.692481, 0.834257, 0.205682, 0.603723, 0.458714, 0.0437349, 0.114652, 0.566799, 0.45245, 0.122326, 0.113938, 0.276907, 0.957492, 0.777953},
{0.701912, 0.777222, 0.609412, 0.224535, 0.188372, 0.529158, 0.343048, 0.242992, 0.903388, 0.945008, 0.214558, 0.803198, 0.939409, 0.10572, 0.927672, 0.789156, 0.601226, 0.032227, 0.674984, 0.969541, 0.520113, 0.651763, 0.307069, 0.613572, 0.512386, 0.439055, 0.483913, 0.476253, 0.165269, 0.555105, 0.77395, 0.0390155, 0.564789, 0.241441, 0.53251, 0.168156, 0.0381309, 0.685113, 0.397873, 0.331216, 0.342135, 0.836425, 0.819914, 0.797474, 0.373406, 0.664615, 0.944767, 0.0729538, 0.445756, 0.472697, 0.865302, 0.212756, 0.247129, 0.252016, 0.99342, 0.25452, 0.480063, 0.997382, 0.843451, 0.336345, 0.138613, 0.892113, 0.782033, 0.138555, 0.777688, 0.146823, 0.795913, 0.0199722, 0.36434, 0.569547, 0.382916, 0.220974, 0.904528, 0.115236, 0.227147, 0.469697, 0.91977, 0.856178, 0.211311, 0.576643, 0.049176, 0.527282, 0.843334, 0.972151, 0.678068, 0.822025, 0.220637, 0.30106, 0.612107, 0.892094, 0.615257, 0.209861, 0.0556002, 0.408814, 0.826037, 0.901644, 0.103094, 0.211083, 0.282394, 0.356382},
{0.115332, 0.2723, 0.859298, 0.545724, 0.811024, 0.196023, 0.896653, 0.407071, 0.20037, 0.89605, 0.322303, 0.205664, 0.993354, 0.201885, 0.54099, 0.716014, 0.330569, 0.58755, 0.818569, 0.611784, 0.105079, 0.417903, 0.849657, 0.840888, 0.844318, 0.238901, 0.985759, 0.40289, 0.609934, 0.481697, 0.626159, 0.679033, 0.280454, 0.462499, 0.975747, 0.200255, 0.986469, 0.0722186, 0.942629, 0.577565, 0.89943, 0.827404, 0.0566496, 0.548675, 0.107918, 0.966764, 0.977428, 0.542151, 0.68745, 0.92627, 0.806071, 0.76661, 0.864919, 0.349195, 0.747421, 0.240907, 0.674211, 0.462337, 0.79513, 0.654334, 0.401332, 0.370853, 0.63143, 0.395402, 0.340917, 0.250035, 0.455175, 0.319223, 0.00733144, 0.331144, 0.716698, 0.560546, 0.995368, 0.70168, 0.143346, 0.157023, 0.637041, 0.287038, 0.465987, 0.193133, 0.958643, 0.974409, 0.964261, 0.943148, 0.456539, 0.624965, 0.721029, 0.60834, 0.190185, 0.0862254, 0.403183, 0.481459, 0.258036, 0.906083, 0.94557, 0.463353, 0.926017, 0.536824, 0.213922, 0.835788},
{0.856256, 0.982415, 0.702717, 0.744428, 0.457117, 0.0205128, 0.744027, 0.913076, 0.742986, 0.904712, 0.674632, 0.235009, 0.104457, 0.532902, 0.675281, 0.129551, 0.831279, 0.574956, 0.155789, 0.117887, 0.325126, 0.770668, 0.632763, 0.555169, 0.680621, 0.540359, 0.663423, 0.402851, 0.672234, 0.534557, 0.420263, 0.916688, 0.1354, 0.0622399, 0.798712, 0.498464, 0.797003, 0.9317, 0.401332, 0.306911, 0.958816, 0.152781, 0.618856, 0.90871, 0.405543, 0.65504, 0.281042, 0.755829, 0.878632, 0.170159, 0.666654, 0.974994, 0.685629, 0.665354, 0.879748, 0.10209, 0.91122, 0.723494, 0.840666, 0.131248, 0.730447, 0.770748, 0.75025, 0.0774252, 0.420487, 0.104028, 0.625546, 0.413328, 0.952014, 0.17224, 0.189662, 0.689527, 0.841585, 0.0312896, 0.683595, 0.265941, 0.211396, 0.566051, 0.685154, 0.643599, 0.720099, 0.119085, 0.694852, 0.604168, 0.279478, 0.728248, 0.39958, 0.138063, 0.368563, 0.538027, 0.876076, 0.730068, 0.63906, 0.302888, 0.891584, 0.928859, 0.576921, 0.0862948, 0.229391, 0.167322},
{0.0427278, 0.430379, 0.515854, 0.524324, 0.168252, 0.165445, 0.961184, 0.688873, 0.822534, 0.885038, 0.889304, 0.871825, 0.113192, 0.882642, 0.382495, 0.906387, 0.62044, 0.869764, 0.00041301, 0.908663, 0.81136, 0.996171, 0.926444, 0.596348, 0.849511, 0.684257, 0.794498, 0.390427, 0.59346, 0.731609, 0.930501, 0.324434, 0.912283, 0.309847, 0.000636164, 0.370778, 0.0235244, 0.562055, 0.17544, 0.213336, 0.160289, 0.980289, 0.31857, 0.752071, 0.986347, 0.837153, 0.148753, 0.573342, 0.826237, 0.779245, 0.976012, 0.703658, 0.833662, 0.260862, 0.560169, 0.268946, 0.388565, 0.49222, 0.934477, 0.415519, 0.891016, 0.113545, 0.400099, 0.17043, 0.804439, 0.229773, 0.120349, 0.444367, 0.928583, 0.111766, 0.127336, 0.0666358, 0.412556, 0.293148, 0.527217, 0.322644, 0.872787, 0.858961, 0.697056, 0.78782, 0.0407192, 0.319186, 0.995451, 0.491, 0.450187, 0.396258, 0.548699, 0.322238, 0.791875, 0.748367, 0.188601, 0.277259, 0.820546, 0.957717, 0.691244, 0.150442, 0.368881, 0.483711, 0.378692, 0.184955},
{0.683078, 0.708375, 0.576938, 0.546835, 0.279018, 0.905009, 0.278718, 0.857199, 0.380885, 0.864274, 0.144412, 0.913987, 0.864546, 0.999478, 0.38475, 0.278889, 0.292944, 0.262272, 0.889838, 0.803726, 0.584386, 0.273263, 0.503526, 0.690947, 0.63389, 0.65265, 0.479202, 0.764837, 0.400375, 0.808556, 0.20611, 0.635474, 0.76566, 0.377751, 0.929578, 0.453082, 0.263312, 0.942323, 0.311053, 0.333926, 0.575497, 0.298683, 0.558126, 0.325159, 0.216869, 0.0270921, 0.572875, 0.837081, 0.511219, 0.132974, 0.0538362, 0.30526, 0.355452, 0.607469, 0.331912, 0.145859, 0.859865, 0.544161, 0.583801, 0.591102, 0.554415, 0.0978173, 0.793593, 0.604096, 0.770709, 0.454645, 0.596343, 0.367155, 0.354346, 0.391322, 0.27013, 0.0688474, 0.638486, 0.681635, 0.740133, 0.763102, 0.184457, 0.554448, 0.669236, 0.763817, 0.558548, 0.541865, 0.26618, 0.369472, 0.871967, 0.858564, 0.458843, 0.160718, 0.543, 0.899949, 0.74768, 0.548378, 0.839718, 0.50457, 0.888002, 0.786716, 0.73779, 0.209971, 0.852737, 0.68074},
{0.162272, 0.288077, 0.755197, 0.48133, 0.989851, 0.247617, 0.822006, 0.78568, 0.703238, 0.761703, 0.532737, 0.00746753, 0.223706, 0.874091, 0.630497, 0.754218, 0.556418, 0.656195, 0.898922, 0.358835, 0.254543, 0.259529, 0.577642, 0.0688612, 0.335739, 0.986863, 0.151641, 0.836338, 0.428943, 0.60827, 0.167314, 0.333173, 0.7698, 0.804175, 0.285566, 0.0158326, 0.039877, 0.295895, 0.90254, 0.830241, 0.404132, 0.924915, 0.516936, 0.338638, 0.942745, 0.588335, 0.980574, 0.103921, 0.174248, 0.705112, 0.201734, 0.789096, 0.740304, 0.969623, 0.802078, 0.843318, 0.859365, 0.0550816, 0.626994, 0.334255, 0.942901, 0.393651, 0.785733, 0.764402, 0.143812, 0.465982, 0.712854, 0.8973, 0.944157, 0.488062, 0.653017, 0.125456, 0.0106869, 0.582921, 0.644736, 0.974801, 0.197937, 0.738653, 0.264619, 0.303476, 0.719861, 0.276751, 0.403359, 0.736198, 0.473477, 0.704063, 0.514096, 0.172415, 0.134236, 0.953482, 0.279995, 0.222966, 0.356659, 0.478807, 0.539843, 0.798291, 0.683256, 0.938928, 0.0524227, 0.867602},
{0.702137, 0.894997, 0.992669, 0.633916, 0.655342, 0.048271, 0.16072, 0.113875, 0.73624, 0.0969011, 0.207203, 0.810873, 0.0867846, 0.0168944, 0.565285, 0.56755, 0.513326, 0.677391, 0.680243, 0.564179, 0.584984, 0.491659, 0.183078, 0.0432178, 0.552005, 0.544125, 0.0461409, 0.89044, 0.341656, 0.7802, 0.661328, 0.971887, 0.0736773, 0.541286, 0.673325, 0.374057, 0.245277, 0.213117, 0.0630248, 0.276385, 0.700806, 0.930159, 0.301861, 0.267153, 0.121123, 0.253456, 0.230591, 0.895304, 0.609365, 0.58002, 0.982121, 0.805669, 0.708315, 0.761661, 0.817981, 0.391973, 0.542062, 0.783999, 0.182298, 0.65351, 0.717507, 0.731677, 0.151299, 0.449748, 0.500441, 0.0042435, 0.502416, 0.283315, 0.45641, 0.98673, 0.58922, 0.106147, 0.199127, 0.794775, 0.171956, 0.626034, 0.862235, 0.630869, 0.373114, 0.498577, 0.876047, 0.424941, 0.8677, 0.569575, 0.566472, 0.0588312, 0.283543, 0.933671, 0.868048, 0.68837, 0.486443, 0.101898, 0.268127, 0.593408, 0.429411, 0.646283, 0.428222, 0.960349, 0.284103, 0.654493},
{0.642309, 0.113451, 0.287823, 0.423624, 0.35967, 0.114129, 0.0247842, 0.591646, 0.219205, 0.871149, 0.207209, 0.393216, 0.130437, 0.435575, 0.126055, 0.225201, 0.462261, 0.761, 0.446443, 0.81442, 0.2222, 0.85355, 0.496105, 0.382827, 0.913876, 0.811078, 0.496658, 0.399241, 0.988864, 0.214564, 0.916571, 0.271985, 0.263404, 0.225421, 0.415458, 0.923873, 0.0264464, 0.539725, 0.238515, 0.416119, 0.216605, 0.556628, 0.521295, 0.36948, 0.0636404, 0.351791, 0.100572, 0.251032, 0.728289, 0.751766, 0.987407, 0.281202, 0.370498, 0.48037, 0.170333, 0.932235, 0.401827, 0.593598, 0.848741, 0.744592, 0.253909, 0.00335874, 0.834513, 0.177882, 0.482844, 0.440922, 0.402472, 0.280752, 0.168781, 0.511266, 0.745843, 0.230345, 0.521651, 0.640493, 0.742673, 0.251576, 0.891808, 0.755173, 0.770729, 0.453365, 0.879694, 0.794392, 0.701552, 0.910857, 0.630398, 0.293484, 0.132057, 0.787005, 0.473143, 0.198467, 0.354318, 0.784903, 0.819433, 0.73173, 0.806271, 0.440591, 0.481656, 0.887496, 0.999888, 0.568433},
};

static const std::vector<float> costs = {850.424, 280.867, 728.549, 278.792, 164.888, 18.9137, 321.738, 273.978, 292.047, 770.977, 338.92, 728.115, 529.363, 594.632, 445.009, 6.52799, 939.445, 588.896, 38.9835, 195.471, 372.702, 202.351, 105.342, 840.009, 287.431, 107.976, 647.489, 509.241, 164.168, 344.538, 928.084, 189.496, 652.563, 34.7856, 546.308, 654.42, 322.02, 844.149, 820.927, 466.216, 283.731, 257.733, 667.962, 340.865, 675.121, 154.922, 54.3986, 403.327, 468.759, 856.098, 6.20136, 406.677, 642.664, 778.016, 830.787, 329.097, 352.077, 227.502, 529.929, 409.579, 204.118, 207.583, 498.802, 89.6311, 54.1024, 698.787, 940.671, 825.386, 646.325, 391.584, 290.012, 795.899, 65.8081, 139.399, 264.974, 921.489, 568.607, 884.059, 497.019, 123.39, 974.007, 704.924, 286.842, 381.791, 410.129, 587.977, 786.731, 604.366, 332.009, 271.607, 569.489, 636.621, 733.666, 279.76, 240.387, 697.332, 253.34, 114.319, 817.052, 598.135};

static const std::vector<float> min_impressions = {0.0882186, 0.686841, 0.468922, 0.0514848, 0.0266952, 0.758772, 0.546806, 0.0588445, 0.424901, 0.0762226};

//
#endif
