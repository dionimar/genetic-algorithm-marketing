#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_incl(cons_indep(events[1], events[43]),events[24]),events[45]),events[22]),events[31]),events[27]),events[11]),events[38]),events[35]),events[30]),cons_incl(cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(cons_excl(cons_incl(cons_excl(events[22], events[32]),events[5]),events[19]),events[24]),events[48]),events[21]),events[23]),events[4]),events[35]),events[34]),cons_excl(cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(events[41], events[4]),events[14]),events[37]),events[5]),events[33]),events[12]),events[48]),events[40]),events[0]),events[34]),cons_indep(cons_excl(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_incl(cons_excl(cons_excl(events[45], events[4]),events[25]),events[43]),events[8]),events[47]),events[48]),events[30]),events[39]),events[28]),events[19]),cons_indep(cons_incl(cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(cons_incl(events[11], events[33]),events[3]),events[36]),events[5]),events[43]),events[30]),events[17]),events[37]),events[18]),events[38]),cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[24], events[21]),events[6]),events[40]),events[35]),events[48]),events[8]),events[28]),events[17]),events[26]),events[1]),cons_indep(cons_excl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_incl(cons_indep(cons_excl(events[36], events[49]),events[7]),events[42]),events[4]),events[12]),events[46]),events[6]),events[27]),events[5]),events[24]),cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(events[43], events[1]),events[25]),events[31]),events[0]),events[39]),events[19]),events[8]),events[35]),events[6]),events[30]),cons_excl(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_incl(events[17], events[11]),events[49]),events[34]),events[29]),events[3]),events[20]),events[27]),events[28]),events[32]),events[37]),cons_incl(cons_excl(cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_indep(cons_indep(cons_excl(events[8], events[7]),events[49]),events[6]),events[2]),events[20]),events[44]),events[43]),events[33]),events[22]),events[21]),cons_indep(cons_incl(cons_indep(cons_incl(cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(cons_excl(events[27], events[49]),events[37]),events[46]),events[26]),events[45]),events[2]),events[10]),events[23]),events[40]),events[34]),cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_incl(cons_indep(events[17], events[34]),events[46]),events[36]),events[30]),events[41]),events[25]),events[21]),events[4]),events[2]),events[39]),cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(events[15], events[31]),events[42]),events[44]),events[22]),events[47]),events[19]),events[28]),events[36]),events[17]),events[12]),cons_excl(cons_incl(cons_excl(cons_indep(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_incl(events[39], events[0]),events[3]),events[15]),events[13]),events[29]),events[26]),events[2]),events[48]),events[4]),events[23]),cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(cons_excl(events[49], events[11]),events[26]),events[14]),events[13]),events[32]),events[22]),events[19]),events[7]),events[31]),events[20]),cons_indep(cons_excl(cons_incl(cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(cons_excl(cons_indep(events[48], events[39]),events[9]),events[1]),events[44]),events[2]),events[24]),events[14]),events[7]),events[23]),events[37]),cons_indep(cons_incl(cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(cons_indep(cons_indep(cons_excl(events[4], events[29]),events[2]),events[7]),events[47]),events[17]),events[18]),events[0]),events[23]),events[19]),events[14]),cons_excl(cons_indep(cons_indep(cons_indep(cons_incl(cons_excl(cons_indep(cons_incl(cons_incl(cons_indep(events[29], events[21]),events[33]),events[44]),events[48]),events[25]),events[13]),events[41]),events[2]),events[35]),events[26]),cons_excl(cons_excl(cons_incl(cons_incl(cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(cons_indep(events[41], events[46]),events[7]),events[30]),events[14]),events[3]),events[35]),events[27]),events[48]),events[31]),events[22]),cons_excl(cons_excl(cons_indep(cons_excl(cons_excl(cons_excl(cons_indep(cons_excl(cons_indep(cons_excl(events[3], events[25]),events[8]),events[5]),events[1]),events[9]),events[28]),events[33]),events[46]),events[30]),events[20])};


static const std::vector< std::vector<float> > prob = {{0.773487, 0.526542, 0.797481, 0.206174, 0.998882, 0.99547, 0.51144, 0.465094, 0.275303, 0.654861, 0.496515, 0.180013, 0.358209, 0.421275, 0.492281, 0.198851, 0.659055, 0.439986, 0.238009, 0.629153, 0.534573, 0.99369, 0.0465508, 0.703323, 0.38899, 0.741797, 0.97981, 0.237953, 0.753025, 0.545014, 0.940233, 0.924145, 0.868924, 0.181092, 0.160195, 0.100812, 0.627404, 0.0156751, 0.486908, 0.470063, 0.0731923, 0.0767345, 0.982842, 0.533868, 0.592831, 0.150355, 0.961911, 0.704077, 0.493262, 0.943545},
{0.845184, 0.104078, 0.961285, 0.0259181, 0.352437, 0.521585, 0.241799, 0.331034, 0.235702, 0.113192, 0.561572, 0.1858, 0.0992628, 0.0358522, 0.801318, 0.374793, 0.336203, 0.686217, 0.316795, 0.496153, 0.471696, 0.010177, 0.439079, 0.229459, 0.254336, 0.334495, 0.850859, 0.218571, 0.78146, 0.455762, 0.978414, 0.308224, 0.956157, 0.595549, 0.964266, 0.601865, 0.122251, 0.748566, 0.764027, 0.388584, 0.860719, 0.654909, 0.803841, 0.252212, 0.235049, 0.993657, 0.78554, 0.866019, 0.648438, 0.810941},
{0.450498, 0.0487263, 0.901927, 0.809207, 0.323653, 0.95923, 0.460013, 0.920335, 0.441767, 0.437142, 0.810628, 0.444042, 0.448263, 0.00323285, 0.955774, 0.816143, 0.8948, 0.22976, 0.413311, 0.574574, 0.673665, 0.89778, 0.573083, 0.049291, 0.0938814, 0.453362, 0.612512, 0.177476, 0.618254, 0.773232, 0.0326076, 0.0263466, 0.215118, 0.0303325, 0.765535, 0.787451, 0.455904, 0.863594, 0.705324, 0.42722, 0.194643, 0.295153, 0.70024, 0.460029, 0.762737, 0.9685, 0.0219258, 0.0943591, 0.23489, 0.351831},
{0.782907, 0.967078, 0.342208, 0.289608, 0.996586, 0.636921, 0.207181, 0.323374, 0.581758, 0.192305, 0.24296, 0.800192, 0.784279, 0.347574, 0.656083, 0.113343, 0.0868355, 0.541956, 0.296937, 0.207876, 0.958436, 0.986056, 0.80471, 0.840729, 0.794894, 0.264853, 0.694349, 0.276738, 0.297597, 0.256034, 0.719217, 0.279408, 0.457618, 0.284746, 0.149508, 0.271276, 0.0216365, 0.662029, 0.896656, 0.695344, 0.949235, 0.185969, 0.791147, 0.189597, 0.242837, 0.660612, 0.605282, 0.583978, 0.500319, 0.17082},
{0.272361, 0.0529163, 0.794164, 0.696571, 0.453075, 0.473493, 0.214119, 0.674243, 0.961015, 0.665953, 0.090669, 0.294653, 0.146507, 0.44468, 0.516635, 0.109138, 0.112643, 0.678827, 0.939666, 0.91273, 0.992043, 0.694055, 0.396902, 0.00436075, 0.378651, 0.260065, 0.400547, 0.697872, 0.410214, 0.95654, 0.689475, 0.206756, 0.887226, 0.862861, 0.885648, 0.355364, 0.351095, 0.690658, 0.246022, 0.346057, 0.358371, 0.204462, 0.651868, 0.204553, 0.859444, 0.071801, 0.0487018, 0.997686, 0.031108, 0.300135},
{0.403604, 0.063601, 0.101769, 0.53362, 0.869533, 0.431845, 0.585498, 0.980144, 0.659998, 0.994624, 0.49724, 0.456007, 0.960634, 0.89023, 0.673088, 0.662506, 0.461976, 0.672221, 0.755995, 0.512555, 0.507161, 0.487087, 0.395907, 0.844244, 0.764204, 0.0273025, 0.575452, 0.934714, 0.475368, 0.642431, 0.666578, 0.759035, 0.359401, 0.00313993, 0.523203, 0.0193886, 0.772725, 0.516953, 0.784535, 0.960748, 0.361982, 0.443151, 0.561196, 0.257287, 0.0721536, 0.476082, 0.4451, 0.522625, 0.588876, 0.620326},
{0.994212, 0.132088, 0.4072, 0.04225, 0.960014, 0.209741, 0.377751, 0.653597, 0.765479, 0.0818231, 0.818077, 0.294462, 0.309969, 0.922709, 0.923948, 0.0109841, 0.887865, 0.513171, 0.0509748, 0.458427, 0.508128, 0.0939843, 0.112446, 0.0551063, 0.988928, 0.342421, 0.730626, 0.844639, 0.95887, 0.813078, 0.176866, 0.217344, 0.220494, 0.323882, 0.607306, 0.919939, 0.186099, 0.675814, 0.478791, 0.346201, 0.753029, 0.28848, 0.915894, 0.514281, 0.375494, 0.523971, 0.386941, 0.0470706, 0.494594, 0.104608},
{0.793089, 0.914816, 0.23919, 0.447135, 0.347235, 0.535635, 0.562112, 0.176693, 0.634642, 0.534079, 0.952104, 0.206707, 0.66916, 0.785185, 0.751982, 0.83994, 0.440431, 0.674932, 0.593252, 0.0829605, 0.612735, 0.662694, 0.745784, 0.900368, 0.859925, 0.12544, 0.296744, 0.659806, 0.614767, 0.331785, 0.749484, 0.407176, 0.555608, 0.326708, 0.36363, 0.912283, 0.51431, 0.646637, 0.613746, 0.0682562, 0.717422, 0.593254, 0.115889, 0.0312428, 0.253102, 0.172814, 0.741571, 0.0283596, 0.997354, 0.509434},
{0.672074, 0.6824, 0.0384259, 0.278497, 0.39351, 0.290291, 0.772707, 0.301743, 0.30479, 0.746249, 0.224996, 0.0319241, 0.98369, 0.119771, 0.251754, 0.0567564, 0.0449308, 0.918926, 0.222463, 0.220265, 0.188785, 0.817886, 0.870613, 0.375806, 0.120894, 0.744333, 0.751241, 0.791314, 0.494011, 0.145527, 0.652725, 0.529074, 0.603813, 0.251872, 0.254984, 0.958762, 0.214055, 0.132661, 0.111038, 0.633425, 0.861576, 0.42836, 0.0895658, 0.0388845, 0.327345, 0.182022, 0.251949, 0.91525, 0.16993, 0.0519737},
{0.82347, 0.676384, 0.0625444, 0.733241, 0.369644, 0.514941, 0.976172, 0.832834, 0.63837, 0.353112, 0.423265, 0.708784, 0.140711, 0.27946, 0.60639, 0.772839, 0.857145, 0.158564, 0.208215, 0.324637, 0.930052, 0.881304, 0.438031, 0.100562, 0.0186606, 0.86253, 0.281327, 0.144709, 0.221068, 0.927836, 0.729526, 0.825658, 0.602018, 0.644575, 0.982107, 0.847212, 0.124233, 0.491999, 0.082902, 0.143883, 0.623739, 0.275309, 0.240485, 0.777464, 0.88735, 0.793308, 0.504812, 0.983733, 0.636968, 0.375516},
{0.866372, 0.30512, 0.599627, 0.736145, 0.75608, 0.290575, 0.20594, 0.896589, 0.396969, 0.814736, 0.85155, 0.201887, 0.116284, 0.302271, 0.396184, 0.890607, 0.955813, 0.167772, 0.423193, 0.55964, 0.14994, 0.550376, 0.0505543, 0.245251, 0.424827, 0.813164, 0.687772, 0.753374, 0.379605, 0.772466, 0.334297, 0.291741, 0.0335011, 0.947694, 0.35804, 0.943773, 0.966205, 0.0227411, 0.87114, 0.174432, 0.846168, 0.222513, 0.522702, 0.364178, 0.124247, 0.121846, 0.654701, 0.819249, 0.819766, 0.397871},
{0.948478, 0.0332887, 0.978761, 0.76907, 0.669924, 0.096602, 0.977065, 0.85231, 0.830412, 0.255409, 0.950673, 0.675847, 0.970084, 0.133678, 0.507194, 0.549564, 0.0271006, 0.937778, 0.499936, 0.133449, 0.759575, 0.755652, 0.912313, 0.0710935, 0.506186, 0.0541015, 0.997354, 0.175888, 0.0854111, 0.737392, 0.460145, 0.414485, 0.618264, 0.601017, 0.0295648, 0.634228, 0.943098, 0.482302, 0.836223, 0.558005, 0.876349, 0.542421, 0.198417, 0.421191, 0.0483068, 0.104483, 0.657235, 0.792998, 0.270771, 0.367057},
{0.510463, 0.087324, 0.774565, 0.563624, 0.0772776, 0.260491, 0.379126, 0.793508, 0.165989, 0.983704, 0.694003, 0.949775, 0.59773, 0.150897, 0.565061, 0.952961, 0.431458, 0.462527, 0.00810451, 0.00985213, 0.164926, 0.271544, 0.632056, 0.764322, 0.953349, 0.338928, 0.743796, 0.519774, 0.724793, 0.405955, 0.422113, 0.308282, 0.458937, 0.0919148, 0.842545, 0.160653, 0.669327, 0.968748, 0.305051, 0.623256, 0.901975, 0.817434, 0.922217, 0.290596, 0.869374, 0.585114, 0.953653, 0.392602, 0.401273, 0.440031},
{0.88137, 0.14371, 0.778799, 0.627461, 0.283876, 0.289817, 0.765961, 0.344984, 0.0170134, 0.711393, 0.0228072, 0.696189, 0.716335, 0.83456, 0.956479, 0.629996, 0.729756, 0.660147, 0.571387, 0.689852, 0.569639, 0.069295, 0.795164, 0.837649, 0.168695, 0.839521, 0.7124, 0.269243, 0.35016, 0.539646, 0.679475, 0.353483, 0.621611, 0.809795, 0.0175998, 0.255983, 0.445579, 0.325402, 0.579096, 0.458191, 0.933327, 0.32036, 0.536484, 0.58217, 0.478954, 0.603621, 0.638889, 0.666471, 0.403111, 0.2913},
{0.561226, 0.302583, 0.972437, 0.925659, 0.423339, 0.159867, 0.119296, 0.628497, 0.778167, 0.411982, 0.325481, 0.690299, 0.816097, 0.483972, 0.316891, 0.375797, 0.855988, 0.931521, 0.00561051, 0.376121, 0.106328, 0.77035, 0.236762, 0.646118, 0.377976, 0.950831, 0.321529, 0.969466, 0.493284, 0.188996, 0.453508, 0.389526, 0.310489, 0.315295, 0.528148, 0.48481, 0.643332, 0.53373, 0.793362, 0.320998, 0.873317, 0.517335, 0.258155, 0.724041, 0.909298, 0.787573, 0.772377, 0.899531, 0.084701, 0.579735},
{0.280983, 0.614837, 0.0217107, 0.536353, 0.293623, 0.585832, 0.151555, 0.432192, 0.266016, 0.832892, 0.669545, 0.609151, 0.849092, 0.013218, 0.0168628, 0.263234, 0.428559, 0.446817, 0.749169, 0.0315596, 0.160432, 0.643596, 0.318011, 0.378734, 0.760298, 0.414249, 0.666021, 0.719412, 0.0708249, 0.305681, 0.158197, 0.357111, 0.831336, 0.268703, 0.467947, 0.920483, 0.347097, 0.127569, 0.372276, 0.501642, 0.254167, 0.283438, 0.856182, 0.169759, 0.675116, 0.87746, 0.261885, 0.791638, 0.0582626, 0.0413518},
{0.782819, 0.247128, 0.69403, 0.437084, 0.358997, 0.761743, 0.560237, 0.100309, 0.114634, 0.932265, 0.663231, 0.717017, 0.92957, 0.123265, 0.859877, 0.0281713, 0.735366, 0.445448, 0.924513, 0.729773, 0.536514, 0.143593, 0.885129, 0.445601, 0.0444407, 0.722306, 0.516857, 0.651177, 0.944471, 0.555867, 0.331812, 0.507596, 0.633268, 0.056945, 0.554795, 0.412745, 0.96582, 0.277551, 0.206709, 0.74957, 0.647758, 0.451467, 0.843481, 0.373282, 0.510245, 0.528939, 0.647208, 0.932307, 0.581234, 0.920443},
{0.339768, 0.304313, 0.775292, 0.698962, 0.638547, 0.0298371, 0.838407, 0.752613, 0.883186, 0.558218, 0.594439, 0.0879952, 0.261193, 0.845642, 0.989125, 0.280536, 0.661096, 0.50928, 0.897681, 0.55946, 0.862654, 0.306691, 0.610136, 0.999038, 0.563186, 0.696652, 0.467412, 0.100531, 0.742242, 0.746736, 0.0493706, 0.0090252, 0.87871, 0.362675, 0.940758, 0.783598, 0.551054, 0.034022, 0.941483, 0.544035, 0.629791, 0.635639, 0.513284, 0.829172, 0.108546, 0.410816, 0.325156, 0.365768, 0.0621419, 0.729017},
{0.796714, 0.524098, 0.27566, 0.4882, 0.860294, 0.536835, 0.679295, 0.132553, 0.658096, 0.140127, 0.688408, 0.574383, 0.463378, 0.014157, 0.767867, 0.473308, 0.135267, 0.846323, 0.989417, 0.0888294, 0.560981, 0.267257, 0.213351, 0.499122, 0.438421, 0.261861, 0.467339, 0.595022, 0.315211, 0.116842, 0.0539525, 0.0249958, 0.422505, 0.0106472, 0.166404, 0.150372, 0.249167, 0.518161, 0.844751, 0.297509, 0.972682, 0.868861, 0.0934664, 0.311601, 0.635364, 0.842504, 0.298252, 0.764575, 0.211252, 0.598374},
{0.247852, 0.691198, 0.0202429, 0.800312, 0.0656241, 0.625545, 0.91108, 0.053943, 0.357707, 0.450174, 0.174212, 0.717962, 0.74344, 0.753705, 0.754672, 0.60812, 0.721664, 0.211789, 0.363949, 0.899059, 0.252512, 0.461497, 0.699789, 0.698562, 0.00381582, 0.316728, 0.409763, 0.784983, 0.642458, 0.688646, 0.869946, 0.989689, 0.239275, 0.0459762, 0.0298945, 0.478422, 0.355514, 0.41412, 0.368095, 0.362505, 0.303246, 0.704367, 0.573259, 0.268731, 0.463214, 0.938083, 0.379363, 0.135381, 0.936071, 0.183582},
};

static const std::vector<float> costs = {835.458, 223.914, 964.57, 768.622, 959.278, 842.027, 697.081, 206.243, 607.942, 832.398, 75.4583, 60.6843, 998.813, 676.991, 413.774, 303.378, 534.344, 608.523, 154.483, 738.884, 891.698, 892.937, 876.729, 458.314, 167.228, 43.1063, 973.497, 524.1, 124.366, 963.929, 180.279, 435.915, 741.774, 768.823, 564.932, 179.768, 446.989, 404.183, 72.1682, 808.88, 561.576, 113.714, 506.312, 345.909, 757.681, 446.392, 473.089, 565.803, 772.242, 878.18};

static const std::vector<float> min_impressions = {0.903257, 0.718292, 0.371522, 0.579572, 0.914245, 0.703181, 0.218894, 0.137136, 0.852679, 0.257657, 0.463499, 0.973564, 0.216867, 0.315095, 0.728673, 0.195505, 0.88465, 0.489614, 0.0340284, 0.324985};

//
#endif
