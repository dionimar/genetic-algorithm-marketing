#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 50;
static const int segments = 20;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_indep(cons_indep(cons_indep(cons_excl(events[11], events[12]),events[39]),events[19]),events[10]),events[8]),cons_excl(cons_excl(cons_excl(cons_incl(cons_excl(events[18], events[44]),events[43]),events[10]),events[29]),events[25]),cons_indep(cons_excl(cons_excl(cons_indep(cons_excl(events[12], events[49]),events[32]),events[36]),events[23]),events[25]),cons_indep(cons_excl(cons_incl(cons_excl(cons_incl(events[19], events[24]),events[45]),events[44]),events[42]),events[25]),cons_incl(cons_excl(cons_excl(cons_excl(cons_excl(events[8], events[40]),events[28]),events[36]),events[49]),events[12]),cons_incl(cons_incl(cons_incl(cons_excl(cons_incl(events[34], events[11]),events[47]),events[24]),events[42]),events[6]),cons_incl(cons_excl(cons_excl(cons_incl(cons_excl(events[21], events[10]),events[43]),events[28]),events[1]),events[14]),cons_excl(cons_incl(cons_indep(cons_incl(cons_incl(events[20], events[29]),events[46]),events[8]),events[41]),events[14]),cons_incl(cons_excl(cons_incl(cons_incl(cons_excl(events[29], events[21]),events[27]),events[45]),events[23]),events[34]),cons_excl(cons_indep(cons_indep(cons_excl(cons_indep(events[40], events[23]),events[38]),events[35]),events[5]),events[24]),cons_incl(cons_incl(cons_indep(cons_indep(cons_incl(events[19], events[45]),events[17]),events[34]),events[2]),events[39]),cons_indep(cons_incl(cons_incl(cons_indep(cons_incl(events[19], events[44]),events[5]),events[46]),events[36]),events[34]),cons_excl(cons_excl(cons_indep(cons_incl(cons_incl(events[16], events[32]),events[15]),events[21]),events[27]),events[4]),cons_indep(cons_indep(cons_excl(cons_indep(cons_indep(events[22], events[32]),events[7]),events[35]),events[3]),events[31]),cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(events[19], events[44]),events[23]),events[22]),events[45]),events[1]),cons_excl(cons_excl(cons_indep(cons_incl(cons_excl(events[17], events[9]),events[8]),events[28]),events[26]),events[23]),cons_incl(cons_incl(cons_indep(cons_excl(cons_indep(events[9], events[32]),events[42]),events[6]),events[47]),events[33]),cons_excl(cons_indep(cons_indep(cons_indep(cons_excl(events[36], events[46]),events[40]),events[35]),events[15]),events[25]),cons_incl(cons_indep(cons_indep(cons_excl(cons_indep(events[44], events[15]),events[17]),events[12]),events[41]),events[27]),cons_excl(cons_excl(cons_excl(cons_excl(cons_excl(events[3], events[5]),events[24]),events[46]),events[49]),events[40])};


static const std::vector< std::vector<float> > prob = {{0.290001, 0.672696, 0.494772, 0.0385223, 0.409844, 0.83892, 0.694375, 0.662763, 0.277482, 0.460402, 0.939193, 0.733873, 0.543257, 0.048854, 0.724215, 0.909002, 0.0604115, 0.373639, 0.903839, 0.0224284, 0.784837, 0.443087, 0.0126875, 0.847274, 0.423642, 0.627476, 0.304761, 0.92953, 0.0448848, 0.0994095, 0.146222, 0.426722, 0.260769, 0.645183, 0.844327, 0.364315, 0.170981, 0.311102, 0.573662, 0.901792, 0.0673128, 0.674847, 0.180484, 0.905282, 0.42964, 0.384571, 0.777166, 0.142692, 0.71523, 0.503999},
{0.803711, 0.0244712, 0.909707, 0.527673, 0.798068, 0.695132, 0.9942, 0.0146332, 0.893888, 0.731363, 0.226049, 0.0569064, 0.7569, 0.428574, 0.15416, 0.425355, 0.00240758, 0.54255, 0.685751, 0.143046, 0.17144, 0.782413, 0.665075, 0.633407, 0.829637, 0.750692, 0.820805, 0.821738, 0.354201, 0.850087, 0.770137, 0.0909753, 0.190342, 0.498531, 0.534906, 0.468872, 0.0451967, 0.0117929, 0.619025, 0.37952, 0.599633, 0.0330392, 0.0785733, 0.0932143, 0.891827, 0.773051, 0.539472, 0.584164, 0.811987, 0.191666},
{0.640976, 0.0325894, 0.945414, 0.369878, 0.132989, 0.600815, 0.985114, 0.869521, 0.45604, 0.937978, 0.891347, 0.662157, 0.856753, 0.578318, 0.0194627, 0.433466, 0.462012, 0.996275, 0.830365, 0.539138, 0.504218, 0.632621, 0.150646, 0.702253, 0.327853, 0.164846, 0.778952, 0.272636, 0.927517, 0.0401861, 0.0333204, 0.846211, 0.911324, 0.425325, 0.992589, 0.387886, 0.817945, 0.154436, 0.59984, 0.246965, 0.927768, 0.374267, 0.79729, 0.932487, 0.753575, 0.782618, 0.819189, 0.96865, 0.91557, 0.0446994},
{0.986653, 0.161274, 0.475091, 0.999508, 0.984809, 0.456961, 0.143171, 0.788227, 0.641145, 0.923287, 0.655544, 0.111412, 0.948622, 0.210549, 0.721624, 0.851794, 0.960891, 0.919198, 0.1651, 0.946924, 0.00836774, 0.600589, 0.613627, 0.391967, 0.835658, 0.490649, 0.598887, 0.63711, 0.203197, 0.132957, 0.043002, 0.606061, 0.697951, 0.418221, 0.075761, 0.384414, 0.804143, 0.468292, 0.663465, 0.763976, 0.318568, 0.432334, 0.318156, 0.0346926, 0.349361, 0.0680306, 0.076078, 0.708205, 0.955849, 0.730376},
{0.97852, 0.729085, 0.678805, 0.933428, 0.251256, 0.0487392, 0.708615, 0.630057, 0.696116, 0.292506, 0.216356, 0.0660503, 0.91204, 0.879945, 0.358118, 0.194425, 0.179229, 0.263696, 0.898622, 0.262715, 0.0179855, 0.733328, 0.336333, 0.0933874, 0.990606, 0.695236, 0.0454868, 0.596864, 0.0410878, 0.472522, 0.289088, 0.923082, 0.147423, 0.220882, 0.46492, 0.621839, 0.390164, 0.653242, 0.785426, 0.919374, 0.160668, 0.551084, 0.0304277, 0.968535, 0.66208, 0.273064, 0.941835, 0.0416643, 0.382697, 0.570775},
{0.0618809, 0.368976, 0.531708, 0.349208, 0.360111, 0.0718341, 0.0959452, 0.635145, 0.528734, 0.184083, 0.739182, 0.350628, 0.848306, 0.132174, 0.130409, 0.594296, 0.0690753, 0.411892, 0.520984, 0.683299, 0.585551, 0.0975397, 0.749291, 0.671785, 0.627144, 0.0575633, 0.690992, 0.55889, 0.522324, 0.373552, 0.810664, 0.704464, 0.232815, 0.436808, 0.649654, 0.0737779, 0.877868, 0.158584, 0.622327, 0.293218, 0.259491, 0.0589477, 0.760398, 0.649506, 0.0512717, 0.134497, 0.622138, 0.438453, 0.443149, 0.902835},
{0.255398, 0.331819, 0.842202, 0.00431364, 0.127889, 0.380407, 0.805154, 0.539061, 0.741336, 0.775596, 0.242081, 0.262715, 0.121647, 0.0367862, 0.670013, 0.47026, 0.938474, 0.853313, 0.998767, 0.484556, 0.850768, 0.770614, 0.469614, 0.0748522, 0.31145, 0.0796005, 0.576935, 0.0505019, 0.311555, 0.936562, 0.023096, 0.0517338, 0.65179, 0.90267, 0.680309, 0.679577, 0.749165, 0.613873, 0.562255, 0.667406, 0.493565, 0.9051, 0.810071, 0.157329, 0.960945, 0.650849, 0.739925, 0.709349, 0.108593, 0.687324},
{0.994656, 0.0343773, 0.406643, 0.0215207, 0.41477, 0.0810853, 0.281147, 0.679444, 0.232501, 0.655704, 0.521205, 0.810233, 0.55444, 0.128648, 0.730478, 0.0477277, 0.344811, 0.0244249, 0.558827, 0.62419, 0.78021, 0.200356, 0.724343, 0.339494, 0.560449, 0.497631, 0.444159, 0.959719, 0.530601, 0.348976, 0.645267, 0.895963, 0.955856, 0.281183, 0.229029, 0.961128, 0.868097, 0.124037, 0.845171, 0.233473, 0.625314, 0.891403, 0.0617518, 0.0802322, 0.180747, 0.966148, 0.588025, 0.854039, 0.357742, 0.191576},
{0.331008, 0.863464, 0.0394793, 0.319202, 0.750296, 0.752039, 0.58785, 0.748481, 0.0561499, 0.757832, 0.863394, 0.274166, 0.10832, 0.455329, 0.0572284, 0.215796, 0.273749, 0.0705538, 0.936019, 0.365619, 0.966616, 0.358937, 0.0271323, 0.873913, 0.526914, 0.401804, 0.831454, 0.895147, 0.848526, 0.801521, 0.11685, 0.231827, 0.261411, 0.702083, 0.674587, 0.942068, 0.131894, 0.388178, 0.969777, 0.678905, 0.428899, 0.208929, 0.121104, 0.145272, 0.507373, 0.281924, 0.537846, 0.878412, 0.596275, 0.482351},
{0.741173, 0.203467, 0.822798, 0.132391, 0.800388, 0.485255, 0.343559, 0.19849, 0.428779, 0.241224, 0.0508889, 0.808286, 0.149229, 0.852454, 0.168129, 0.834619, 0.125783, 0.613848, 0.0692887, 0.421896, 0.112898, 0.0132513, 0.625787, 0.431826, 0.340105, 0.21017, 0.667143, 0.504392, 0.286729, 0.0272594, 0.640899, 0.587095, 0.471619, 0.209764, 0.829243, 0.887847, 0.699588, 0.640066, 0.861838, 0.850725, 0.650997, 0.626749, 0.416952, 0.654989, 0.558461, 0.212787, 0.162904, 0.766493, 0.679553, 0.750636},
{0.340615, 0.891515, 0.660722, 0.568674, 0.682452, 0.123848, 0.812415, 0.244407, 0.650644, 0.208429, 0.641666, 0.171927, 0.478947, 0.396283, 0.0921689, 0.584668, 0.0672905, 0.113886, 0.641569, 0.201744, 0.83468, 0.164841, 0.696015, 0.625696, 0.0633855, 0.80974, 0.649578, 0.375952, 0.911167, 0.818043, 0.323111, 0.814199, 0.651807, 0.912809, 0.139166, 0.146972, 0.993671, 0.128867, 0.5719, 0.590272, 0.894789, 0.704697, 0.361523, 0.999858, 0.634104, 0.572094, 0.851173, 0.35595, 0.303147, 0.0531998},
{0.536157, 0.0381369, 0.517287, 0.188906, 0.627281, 0.00438908, 0.0287885, 0.5958, 0.130001, 0.335777, 0.0609451, 0.0454621, 0.326653, 0.688116, 0.403039, 0.552394, 0.445189, 0.977102, 0.0823996, 0.875305, 0.635334, 0.379268, 0.210548, 0.985743, 0.287665, 0.97368, 0.222109, 0.163026, 0.105016, 0.495968, 0.0687437, 0.134504, 0.848469, 0.196207, 0.972903, 0.674243, 0.467214, 0.200854, 0.400703, 0.832894, 0.394151, 0.00420489, 0.747591, 0.94961, 0.42971, 0.483977, 0.485658, 0.696576, 0.761634, 0.702187},
{0.670003, 0.67059, 0.212951, 0.746521, 0.29967, 0.551187, 0.710556, 0.156864, 0.899315, 0.370792, 0.341004, 0.632031, 0.880939, 0.661047, 0.865472, 0.720732, 0.324227, 0.693136, 0.65127, 0.0426618, 0.437857, 0.0669652, 0.747077, 0.432958, 0.576769, 0.310566, 0.586656, 0.407972, 0.419957, 0.108635, 0.707541, 0.944648, 0.42436, 0.918727, 0.158905, 0.621533, 0.251645, 0.805034, 0.78124, 0.306948, 0.160206, 0.97145, 0.224785, 0.310244, 0.271908, 0.0206683, 0.427098, 0.360713, 0.98764, 0.853114},
{0.661245, 0.346666, 0.446703, 0.280009, 0.741356, 0.634382, 0.837181, 0.521365, 0.174746, 0.218759, 0.213693, 0.601422, 0.12417, 0.226987, 0.188546, 0.982792, 0.704702, 0.582265, 0.0346156, 0.295985, 0.165013, 0.184715, 0.98259, 0.603998, 0.801894, 0.209518, 0.30554, 0.454208, 0.752003, 0.125377, 0.591335, 0.598603, 0.685713, 0.256041, 0.616833, 0.389959, 0.908088, 0.972594, 0.0447614, 0.102597, 0.790345, 0.0288753, 0.117196, 0.00657759, 0.862507, 0.24853, 0.470528, 0.620165, 0.59412, 0.79696},
{0.344413, 0.68706, 0.360813, 0.122209, 0.546391, 0.202656, 0.411036, 0.426475, 0.897417, 0.210038, 0.856531, 0.11127, 0.166253, 0.281184, 0.0493482, 0.797542, 0.0920871, 0.241802, 0.915571, 0.989068, 0.799583, 0.339446, 0.230739, 0.495679, 0.996628, 0.903665, 0.41396, 0.479881, 0.224361, 0.714963, 0.905665, 0.699477, 0.793522, 0.691791, 0.203535, 0.744767, 0.522293, 0.526598, 0.0432529, 0.948173, 0.641781, 0.00371708, 0.132531, 0.234099, 0.548161, 0.116683, 0.0362673, 0.240527, 0.356687, 0.503629},
{0.391331, 0.664842, 0.790598, 0.542319, 0.734968, 0.177203, 0.995167, 0.0176812, 0.785773, 0.25871, 0.576733, 0.574225, 0.958218, 0.401056, 0.129209, 0.0345406, 0.619892, 0.960745, 0.629588, 0.850109, 0.399866, 0.517333, 0.976608, 0.286943, 0.913264, 0.549867, 0.551983, 0.9931, 0.602928, 0.842661, 0.245708, 0.157981, 0.246918, 0.841338, 0.816695, 0.149713, 0.578204, 0.0790833, 0.360473, 0.693022, 0.591185, 0.558134, 0.226425, 0.468525, 0.550792, 0.560691, 0.251052, 0.194038, 0.155815, 0.308881},
{0.717587, 0.707186, 0.791799, 0.090078, 0.653024, 0.206129, 0.429746, 0.975758, 0.384164, 0.633893, 0.099567, 0.756768, 0.225578, 0.50914, 0.913808, 0.847758, 0.204583, 0.498934, 0.857497, 0.747774, 0.735211, 0.6752, 0.912594, 0.329477, 0.782155, 0.46407, 0.331931, 0.677469, 0.872148, 0.309209, 0.272301, 0.00766509, 0.558494, 0.988383, 0.869731, 0.510901, 0.995876, 0.942609, 0.458912, 0.111865, 0.798208, 0.0530046, 0.877308, 0.311484, 0.836648, 0.143507, 0.0287546, 0.463412, 0.987428, 0.0256621},
{0.810495, 0.665361, 0.0270038, 0.517116, 0.771369, 0.411552, 0.523668, 0.0306848, 0.937974, 0.616151, 0.446551, 0.25439, 0.550961, 0.744305, 0.901003, 0.170036, 0.0537777, 0.168916, 0.627656, 0.833717, 0.285825, 0.882556, 0.521094, 0.139864, 0.39418, 0.066422, 0.0382302, 0.174331, 0.75449, 0.513609, 0.522864, 0.154157, 0.777787, 0.120566, 0.484614, 0.394684, 0.231404, 0.0535975, 0.748388, 0.0296572, 0.837365, 0.0245714, 0.544071, 0.0456788, 0.809338, 0.247772, 0.919709, 0.611855, 0.299897, 0.956061},
{0.458132, 0.981002, 0.79384, 0.685958, 0.795942, 0.783839, 0.448883, 0.282279, 0.74053, 0.855748, 0.832942, 0.00757059, 0.470867, 0.726018, 0.98382, 0.134463, 0.0940069, 0.890309, 0.582965, 0.0238002, 0.192273, 0.790448, 0.249602, 0.96916, 0.0238716, 0.536484, 0.591304, 0.874432, 0.684044, 0.537974, 0.276717, 0.276522, 0.158196, 0.748713, 0.943642, 0.761038, 0.740995, 0.174313, 0.378263, 0.660947, 0.63174, 0.234792, 0.912419, 0.439712, 0.754847, 0.222555, 0.617061, 0.338121, 0.425645, 0.320908},
{0.0749619, 0.16323, 0.259951, 0.278343, 0.400992, 0.0235303, 0.301275, 0.231769, 0.677049, 0.338486, 0.67783, 0.747618, 0.0123508, 0.916303, 0.882655, 0.436305, 0.839898, 0.975596, 0.0909247, 0.889092, 0.198483, 0.232389, 0.509073, 0.715517, 0.82141, 0.496013, 0.965924, 0.807781, 0.271136, 0.0958229, 0.87474, 0.145713, 0.551355, 0.984939, 0.319947, 0.956491, 0.768599, 0.0789811, 0.367008, 0.187375, 0.515264, 0.498536, 0.0734264, 0.617667, 0.273111, 0.887559, 0.0935599, 0.514896, 0.530748, 0.208509},
};

static const std::vector<float> costs = {313.472, 462.676, 776.958, 337.658, 822.883, 812.761, 474.119, 367.414, 102.206, 267.576, 630.745, 144.185, 820.222, 713.988, 758.932, 112.878, 358.388, 351.192, 730.764, 894.995, 469.712, 716.524, 459.978, 63.6451, 585.971, 191.65, 193.495, 414.292, 823.95, 974.755, 545.632, 477.247, 826.695, 234.222, 958.617, 355.249, 160.48, 979.107, 951.293, 736.007, 456.206, 676.706, 73.6545, 896.299, 508.71, 947.696, 249.096, 15.7692, 194.638, 744.784};

static const std::vector<float> min_impressions = {0.519079, 0.626836, 0.770514, 0.0624059, 0.70912, 0.0723621, 0.434201, 0.689584, 0.538149, 0.324974, 0.180217, 0.839763, 0.876767, 0.826075, 0.609739, 0.531692, 0.967001, 0.214147, 0.68556, 0.708499};

//
#endif
