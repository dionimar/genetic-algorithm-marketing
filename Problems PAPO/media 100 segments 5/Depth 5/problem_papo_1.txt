#ifndef PROBLEM_H
#define PROBLEM_H
#include <iostream>
#include "syntax_tree.hpp"


#define PAPO




static const int media = 100;
static const int segments = 5;


static const std::vector<Syntax_Tree> events = {cons_event(0), cons_event(1), cons_event(2), cons_event(3), cons_event(4), cons_event(5), cons_event(6), cons_event(7), cons_event(8), cons_event(9), cons_event(10), cons_event(11), cons_event(12), cons_event(13), cons_event(14), cons_event(15), cons_event(16), cons_event(17), cons_event(18), cons_event(19), cons_event(20), cons_event(21), cons_event(22), cons_event(23), cons_event(24), cons_event(25), cons_event(26), cons_event(27), cons_event(28), cons_event(29), cons_event(30), cons_event(31), cons_event(32), cons_event(33), cons_event(34), cons_event(35), cons_event(36), cons_event(37), cons_event(38), cons_event(39), cons_event(40), cons_event(41), cons_event(42), cons_event(43), cons_event(44), cons_event(45), cons_event(46), cons_event(47), cons_event(48), cons_event(49), cons_event(50), cons_event(51), cons_event(52), cons_event(53), cons_event(54), cons_event(55), cons_event(56), cons_event(57), cons_event(58), cons_event(59), cons_event(60), cons_event(61), cons_event(62), cons_event(63), cons_event(64), cons_event(65), cons_event(66), cons_event(67), cons_event(68), cons_event(69), cons_event(70), cons_event(71), cons_event(72), cons_event(73), cons_event(74), cons_event(75), cons_event(76), cons_event(77), cons_event(78), cons_event(79), cons_event(80), cons_event(81), cons_event(82), cons_event(83), cons_event(84), cons_event(85), cons_event(86), cons_event(87), cons_event(88), cons_event(89), cons_event(90), cons_event(91), cons_event(92), cons_event(93), cons_event(94), cons_event(95), cons_event(96), cons_event(97), cons_event(98), cons_event(99)};

static const std::vector<Syntax_Tree> restrictions = {cons_indep(cons_excl(cons_indep(cons_excl(cons_indep(events[11], events[66]),events[71]),events[59]),events[74]),events[94]),cons_excl(cons_indep(cons_indep(cons_indep(cons_indep(events[79], events[21]),events[51]),events[41]),events[76]),events[25]),cons_indep(cons_indep(cons_incl(cons_excl(cons_incl(events[21], events[97]),events[85]),events[72]),events[87]),events[41]),cons_incl(cons_indep(cons_indep(cons_incl(cons_indep(events[17], events[0]),events[5]),events[6]),events[60]),events[87]),cons_excl(cons_incl(cons_indep(cons_excl(cons_incl(events[83], events[89]),events[73]),events[30]),events[61]),events[72])};


static const std::vector< std::vector<float> > prob = {{0.830398, 0.753873, 0.505135, 0.860893, 0.0337486, 0.0583362, 0.997253, 0.811053, 0.825594, 0.221824, 0.151535, 0.381404, 0.811462, 0.134828, 0.450653, 0.889911, 0.66473, 0.680739, 0.515208, 0.537215, 0.219466, 0.947013, 0.231744, 0.468895, 0.59518, 0.304413, 0.730543, 0.759121, 0.0693401, 0.0814758, 0.75892, 0.123986, 0.658441, 0.436862, 0.0426376, 0.711561, 0.545824, 0.373989, 0.287977, 0.290082, 0.883442, 0.678763, 0.186639, 0.324471, 0.868768, 0.0241859, 0.718984, 0.348271, 0.438225, 0.940294, 0.0954283, 0.115008, 0.358292, 0.68454, 0.245718, 0.96204, 0.0252059, 0.450676, 0.74877, 0.279066, 0.00872126, 0.871639, 0.304479, 0.265546, 0.184829, 0.813449, 0.977821, 0.531838, 0.0319147, 0.378012, 0.792882, 0.36697, 0.132084, 0.989913, 0.403268, 0.794998, 0.763718, 0.382631, 0.0418409, 0.80498, 0.765668, 0.202179, 0.199396, 0.458019, 0.930878, 0.858238, 0.491135, 0.268377, 0.989591, 0.670099, 0.944314, 0.757564, 0.809316, 0.336483, 0.90904, 0.80439, 0.510983, 0.231018, 0.75465, 0.694769},
{0.480264, 0.306216, 0.434224, 0.133641, 0.0189217, 0.287008, 0.974509, 0.619278, 0.471556, 0.85633, 0.864576, 0.425146, 0.357343, 0.142248, 0.401992, 0.970058, 0.356695, 0.642622, 0.82788, 0.335066, 0.906598, 0.164781, 0.947654, 0.161921, 0.36987, 0.0173007, 0.702933, 0.833109, 0.830662, 0.877636, 0.115612, 0.584655, 0.684496, 0.295104, 0.483802, 0.220492, 0.541623, 0.412002, 0.803193, 0.631001, 0.504018, 0.446161, 0.161296, 0.708625, 0.407674, 0.848179, 0.458055, 0.56555, 0.858479, 0.699621, 0.127356, 0.646449, 0.609272, 0.488145, 0.426465, 0.174076, 0.925624, 0.251397, 0.823615, 0.653824, 0.211585, 0.908233, 0.497141, 0.788443, 0.465815, 0.473831, 0.897835, 0.669919, 0.798882, 0.574801, 0.324314, 0.561265, 0.493883, 0.502953, 0.887538, 0.78731, 0.764445, 0.0232648, 0.533435, 0.455281, 0.898277, 0.632353, 0.443735, 0.803876, 0.447889, 0.213255, 0.984397, 0.989237, 0.124496, 0.497423, 0.990507, 0.109861, 0.127687, 0.320376, 0.694547, 0.12201, 0.210321, 0.00122172, 0.176512, 0.190547},
{0.429267, 0.303634, 0.173937, 0.930454, 0.556481, 0.15978, 0.546382, 0.816362, 0.0268924, 0.84855, 0.946694, 0.446029, 0.454506, 0.228624, 0.555192, 0.293553, 0.348505, 0.616344, 0.240269, 0.841682, 0.0484017, 0.811829, 0.359742, 0.875206, 0.466625, 0.471733, 0.0598633, 0.430903, 0.742564, 0.867795, 0.669056, 0.00900674, 0.530348, 0.303359, 0.241564, 0.129264, 0.0446706, 0.920334, 0.178104, 0.409894, 0.493372, 0.059604, 0.178741, 0.489912, 0.551097, 0.850387, 0.545966, 0.681637, 0.11179, 0.25168, 0.626919, 0.358421, 0.267152, 0.183732, 0.5941, 0.575587, 0.993739, 0.0929715, 0.135497, 0.944526, 0.226137, 0.354161, 0.778097, 0.913092, 0.0150058, 0.149724, 0.451212, 0.970163, 0.865976, 0.692532, 0.965526, 0.253391, 0.0970284, 0.425093, 0.627247, 0.703155, 0.786095, 0.47842, 0.388007, 0.950277, 0.613888, 0.408317, 0.33851, 0.706712, 0.600394, 0.892981, 0.746368, 0.490694, 0.773464, 0.823314, 0.717193, 0.230635, 0.627025, 0.257628, 0.710666, 0.374789, 0.838727, 0.47627, 0.795823, 0.725265},
{0.363941, 0.0412701, 0.585479, 0.889761, 0.0367397, 0.756044, 0.908197, 0.386502, 0.838528, 0.0742311, 0.33588, 0.609071, 0.19803, 0.809647, 0.950108, 0.866979, 0.6899, 0.445008, 0.289438, 0.119023, 0.605696, 0.104605, 0.0706293, 0.328912, 0.878762, 0.91356, 0.183497, 0.718946, 0.0868362, 0.311831, 0.73046, 0.025187, 0.248235, 0.833852, 0.138915, 0.900494, 0.914811, 0.698134, 0.78097, 0.0745918, 0.142439, 0.930656, 0.716159, 0.117141, 0.3343, 0.521862, 0.565142, 0.983332, 0.154666, 0.775044, 0.227284, 0.593172, 0.519018, 0.207182, 0.4268, 0.562214, 0.602494, 0.0460825, 0.573384, 0.516553, 0.492342, 0.453547, 0.762099, 0.301033, 0.714423, 0.937096, 0.558659, 0.178024, 0.971566, 0.855401, 0.7163, 0.605293, 0.732139, 0.669291, 0.258724, 0.0335043, 0.559843, 0.0983504, 0.238467, 0.630764, 0.596887, 0.272394, 0.596184, 0.266573, 0.875046, 0.330093, 0.487578, 0.0914946, 0.679742, 0.215914, 0.911383, 0.358017, 0.122159, 0.168887, 0.551715, 0.658918, 0.201559, 0.73075, 0.456243, 0.308224},
{0.0142419, 0.142923, 0.526479, 0.86119, 0.405099, 0.670603, 0.282192, 0.548491, 0.496518, 0.598475, 0.4006, 0.888066, 0.719047, 0.607912, 0.523194, 0.40784, 0.724403, 0.075259, 0.817456, 0.554759, 0.110279, 0.703731, 0.0194903, 0.644027, 0.896676, 0.618254, 0.106325, 0.589819, 0.984408, 0.635854, 0.21526, 0.332044, 0.0558494, 0.549562, 0.407831, 0.177902, 0.261889, 0.877335, 0.773265, 0.829094, 0.469715, 0.463217, 0.195376, 0.365519, 0.667589, 0.8003, 0.421737, 0.684655, 0.990248, 0.928266, 0.890307, 0.400266, 0.994059, 0.797414, 0.894047, 0.840724, 0.251988, 0.119589, 0.830465, 0.796195, 0.367239, 0.90257, 0.748919, 0.0901373, 0.134429, 0.550837, 0.0759692, 0.892988, 0.904046, 0.295356, 0.294268, 0.27011, 0.62083, 0.33183, 0.135074, 0.684276, 0.931801, 0.784382, 0.426688, 0.697735, 0.962362, 0.577115, 0.858494, 0.33601, 0.411017, 0.0805713, 0.547107, 0.707885, 0.284805, 0.363077, 0.766612, 0.568763, 0.692082, 0.788503, 0.277156, 0.643247, 0.909376, 0.513057, 0.231031, 0.648296},
};

static const std::vector<float> costs = {937.662, 392.847, 500.691, 876.844, 129.869, 531.565, 273.767, 334.633, 608.43, 577.652, 742.466, 54.7335, 39.256, 950.016, 616.632, 950.391, 8.02523, 494.783, 274.186, 661.212, 265.855, 820.872, 321.588, 947.215, 980.791, 348.699, 524.391, 557.736, 17.8544, 198.279, 914.334, 232.822, 751.879, 514.688, 650.958, 187.775, 578.358, 342.431, 256.682, 125.036, 625.86, 305.965, 707.948, 672.598, 124.333, 670.647, 748.036, 471.609, 639.608, 490.593, 521.699, 666.907, 867.805, 215.182, 185.442, 627.352, 632.124, 16.5635, 867.544, 739.34, 856.933, 1.55171, 311.662, 516.568, 193.658, 976.491, 297.715, 614.982, 169.04, 773.045, 347.433, 194.707, 812.777, 217.704, 418.088, 584.123, 760.747, 878.52, 178.192, 815.782, 563.535, 586.647, 73.8211, 679.692, 880.517, 33.1022, 989.701, 980.857, 687.027, 528.538, 567.247, 571.746, 297.78, 290.588, 837.546, 860.289, 369.167, 623.724, 962.152, 779.521};

static const std::vector<float> min_impressions = {0.927744, 0.129361, 0.258735, 0.0159056, 0.381693};

//
#endif
